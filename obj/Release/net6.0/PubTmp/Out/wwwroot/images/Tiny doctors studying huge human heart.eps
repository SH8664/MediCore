%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Виталий Викторович
%%CreationDate: 1/23/2022
%%BoundingBox: 0 0 3300 2000
%%HiResBoundingBox: 0 0 3300 2000
%%CropBox: 0 0 3300 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164488, 2020/07/10-22:06:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.1 (Windows)"
   xmp:CreateDate="2022-01-17T13:32:46+03:00"
   xmp:ModifyDate="2022-01-17T13:32:46+03:00"
   xmp:MetadataDate="2022-02-06T15:33+03:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:645e233b-b292-754e-8fbe-f0c81c6ea831"
   xmpMM:InstanceID="xmp.iid:1e9aa7cd-f8dd-9040-9c2d-1960fd23f677"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny doctors studying huge human heart</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Tiny doctors studying huge human heart. Cardiologists examining patient with cardiovascular disease flat vector illustration. Health, diagnosis, cardiology concept for banner or landing web page</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>heart</rdf:li>
     <rdf:li>disease</rdf:li>
     <rdf:li>cardiovascular</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>cardiology</rdf:li>
     <rdf:li>patient</rdf:li>
     <rdf:li>cardiac</rdf:li>
     <rdf:li>cardiologist</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>diagnostic</rdf:li>
     <rdf:li>circulatory</rdf:li>
     <rdf:li>system</rdf:li>
     <rdf:li>studying</rdf:li>
     <rdf:li>organ</rdf:li>
     <rdf:li>human</rdf:li>
     <rdf:li>coronary</rdf:li>
     <rdf:li>artery</rdf:li>
     <rdf:li>doctor</rdf:li>
     <rdf:li>woman</rdf:li>
     <rdf:li>man</rdf:li>
     <rdf:li>tiny</rdf:li>
     <rdf:li>health</rdf:li>
     <rdf:li>medicine</rdf:li>
     <rdf:li>diagnosis</rdf:li>
     <rdf:li>medication</rdf:li>
     <rdf:li>checkup</rdf:li>
     <rdf:li>medical</rdf:li>
     <rdf:li>hospital</rdf:li>
     <rdf:li>healthcare</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>isolated</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>concept</rdf:li>
     <rdf:li>character</rdf:li>
     <rdf:li>banner</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>creative</rdf:li>
     <rdf:li>design</rdf:li>
     <rdf:li>element</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>graphic</rdf:li>
     <rdf:li>modern</rdf:li>
     <rdf:li>page</rdf:li>
     <rdf:li>template</rdf:li>
     <rdf:li>web</rdf:li>
     <rdf:li>website</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>symbol</rdf:li>
     <rdf:li>people</rdf:li>
     <rdf:li>landing</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="156"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq07oi8nYKo6ljQfjhAJ5IJpaZ4B&#xA;GJTIojalHJHE16b4eE3VbrxDmvBBFQag9CMil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbMzpEzRp6jgfClQKn5nDEAndBOymkPOOP60qSSruSF2B9&#xA;q1yRlRPDyQBY3VSqleJAK+B6ZC2Sk8LJAUteELA1UcfhrWpqBTrkxKzct2JG2ypGzlF9QBZCKsgN&#xA;aZEjfbkkLsCXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;VExu12snqfu41IMYP7TU3b6OmTuo1XNjW6tkGTsVdiqlLbRvNHPUrJFWjL3U9VPiMnGZAI72Jjva&#xA;6CaOeJZYzVG6Hp7YJRMTRSCCLC/IpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVQk+q6dbziCadUlPRDX8aZEzAboaechYGyzUtWhsUUlfUkfdEBpt41wSnScOnOQ9ztJ1WHUYWk&#xA;RTGyGjo3UVwwna6jAcZoo7JNDsVYhq2uSx3NxDYuVV35STftE0Aop7KKZtMOnBAMnCnlomkkkmmk&#xA;blI7O3ixJP45liIHJpJJRFtqmoWxBhndR/KTVfuNRkJ4Yy5hlGchyLIdM82RSER3yiJjsJV+yfmO&#xA;2YOXRkbxciGovmyBWVlDKQykVBG4IzBIclR5pDcJCsfFJuTcx059SD8/HLKMhd8mF0a71fK2bsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVaZ1RSzkKo6sTQDCBakrGubdYfWMi+keklajfb&#xA;rhEDdVujiFWujljlQPG4dD0ZSCPwwGJHNQQeTDtWi4ancVFW5kgnrRvi/jmLMbu808rxhQklkkKl&#xA;2LcVCrXsFFAMjbYIgck6t7iLRdIW7lQs9y4AWvHsStT8gTloPCLcGcDnycI/hRxvm1HQ5bmwYrK8&#xA;ben/ADB16rt3yfFcbDR4Xh5RGfK0j8t+ZD9Wu4724AeMGS3aV6k7GqguancCgyGCdmiXL7Q0hFGA&#xA;+Q/UxoTs0/E77kFgag+GZ2n1MjnMSbibcfV6GEdKJAVIAe/ztXAr0zbkgc3nwCTQXGGQCpHXoO+Y&#xA;w1mK6tyzoM1XwrMynDTLSdcutPcKD6luT8URP4r4HKM2nE/e248pj7mYQX0d7ZNNZOC/E8Q3VWp0&#xA;YZqzj4JVJzBLiFhExM7RqzrwcgFl60PcbZWRvsyHJdgS7FXYq07oiF3YKqipY7ADCBfJBNKJeSeF&#xA;HtpAivvzZCTx9gafjkqETUgiyRsvaFmhEZlcNtWQUDGn0U/DAJb3Sa2W0mhgNC1xINwG4qSPCoAG&#xA;HYnuRuB3r4ZRLGHCslequCpBHscEo0aSDa/IpdirsVdirsVdirsVdiq2RmSNmVS5AqEFKn23wgWU&#xA;EqSRNNCn1uNGkB5cAKqp7de4GSMqPpKALG6vkGSySLlGyIxiJ3DqBUHx3FMkJb77oI2YtrsUqX37&#xA;0hpGRSWUUBpVa038Mx81cWzttET4e6DtYTNcxRfzsFPyJ3ysCy5M5cMSU0826vp0VlJpxX1Z3Aoi&#xA;9I6bqSfH2yzLMVTidn6eZkJ8h97ClublYTAsrrCTyMYYhSTtUj6MxbLuzCJN1upYs1SGGSZwqDfu&#xA;ewxDGUgBunEECxIBXk3djmTLNMiibDrRhgJGUYgEqV9bySqjRn40NQOnXKZByMUwOaHvbiK1hknn&#xA;bika8pD703/HN/p83BgEp8g8zqdOcmqMMYsyLEX89zmekNopirQKzHmfu2zUy7elxbR9P2vTQ9kY&#xA;cHqyHi8ht+Pkjbj8zrbR7aK7savfSbfVSaAU6+p/k+Hj7ZkZ+1cUsVgXI9O78fa4Gm9mc/jGMjww&#xA;H8Xf7vxsv8u/n7c/pEprtkgsp3FZbYvWEdK8HL8h4gEe3hmsjr7oSA+Dtc/s0BEnHI8Xcfxs9rhm&#xA;imhSaFxJFIoeORTVWVhUEEdQRmeDbysokGjzC7FDsVUI/UnEnrxARcqRowqSF/abt16ZYajVHdgN&#xA;+YV8rZuxV2KqNzFLIqmGT05EYMO6nxDDuDk4SA5hjIE8lVXRq8WDFTRqGtD4HIkUkFvAl2KuxV2K&#xA;uxV2KuxVQjQvcG4EvOIqFiRT8PiTsaGuTJoVW7ECzdq+QZKMt7ZQtxluI42/ld1U/icmMcjyBYmQ&#xA;HVuK7tJjSKaOQ/5DBv1HAYSHMJEgeTF/PGo6dpzw3N9cJbxFOIZzSpBrQDqTv0GYuaQG5dv2bjlM&#xA;ERFsKh/NDytBMHguiZVqI2aKQKCQQG3Xt1zHGoiHcS7KyyFEbe8Lo7uO8X6zHKJ1lJb1VPIMT1Nc&#xA;F3uz4OHaqpfTChdHG0jhF3ZsUE0LTm3gSCMKvX9pvE5YBThzkZFfJIkalnPFR3OFABPJCi+ElfTF&#xA;AO565n6HTwyWT06Ot7T1GTCQB16oLXNB1fVdEnFjbvM3JSAtPiKsCRvmT2nEHCYR57bOL2HqBj1U&#xA;ck/p3394Y7pOk6h5U9XX9XtDDPbgR6XbzU/eXMlRzoD9mNKt86ZzEIHF6pD3e97jUaiGrrDjlYP1&#xA;EdIj9Z/SlereXNPuvzBjSQEaFNEdWkYbUsuBuHFRSnQx/PD4YOT+jz+HNMdVOOl/20ej/Ovh/agN&#xA;X/LXzBJqEs2gafNe6JcUn065SjAwSgOgJr9pQ3FvcYy08r9IsMsPauIRAyyEcg2kPMPbfKmp3Gka&#xA;Pp2j6zGYZ7W2hi9TYgcUC0anhSlc6GGkPhgx32Fvn+r1QnnmehkSPdbLFljaMSK4MZFQ4IpTxrlF&#xA;G6Y2hGuLaaaKQXiCFPi9NWALN2qa9PbJcQiCDzT4UjRF0ifrVt/v5P8Aghldhn4cu4r0dHXkjBlP&#xA;Qg1G22FiQRzbxQ7FXYqh5Pq9tKZ2qpnZY3I+zXopPh4VywXIV3MDQN96Iytm7FXYq7FXYq7FVG6e&#xA;IIIpCR659JePWrA/wycAbsdN2MiOXeqIkcUSotFjjWg8AAMiSSbSBQYhrXmOe5kaG1cx2w25Lsz+&#xA;9ewzZ4NKIi5c3DyZidhySTMxoUby7is7Sa6lNI4EaRyOtFFdshkyCETI8g24MMssxCPORpQ8meXF&#xA;1uOPzL5mU3dzcjlp1tMS8NvBWqcVNRVuu/z65zPB4h8SfOXTuD1+bUeBenw7Rh9R6yPX8foZVqWl&#xA;wTx+g0Uc1uBT0XVSv/AkUwyjbj4cxG90Xm+vaKvlXUIdSsAYtKupRDf2e/GNn+zIgPQf599sOcOA&#xA;2OTvtNqPHiYy+sDY/oZBaWrTvTog+02WgW4058ITeKCKJeKLTxPc5MBxJSJ5r8KEt1GC45GQnnGO&#xA;gH7P0ZCQcnFIclPTeJuCrCoKn7xmf2ZOshHeHWduQvCD3FNgAOmb15Rhfm7yjy56jpyfFu1xbqOv&#xA;i6D9Yznu0+zLvJjHvH6Q9n2D29VYcx2/hl+g/oKR33mWx/wb+jo1ZvMUg/R0RVSWNhJKJyAadfUH&#xA;CnWhzUwyXCv4uXwehnpJDU8Z/uvrP9YCvu3R/lPyjDolv+k9TWt8BVU6iEHag/yzXc50XZvZvh+u&#xA;f1/d+15Ltztw6gnFiP7vqf537GQ/p+x2qJKD2H9c3XAXmaTe0vJxCrQSMsMoVzGd1NdxyXpmmza8&#xA;CZHDy2u/2O7wdkmUBLjqxfL9rmYsanNO9ABSnc3cQJIChqABF6bCnevXEllCBQ9vqt5BGY45ZFRm&#xA;LFVdlFT7DMvTauOONGPF+Pc4Ot7NOafEJcO1cv2rj5xubaQobmfktKgnkOlf2jm7w44ZYCXCN3mt&#xA;RjnhyGF3Sa6B+ZEd5M0EyGThuzcQr0rStASp/DIZuz6FhjHORzZtbXMFzCs0Dh426EfqOayUDE0X&#xA;KjIEWFR0V1KsoYH9k7jbADSkKdpO09usjIY2NQyHsQaHJTjwmkRlYtVyDJ2KuxV2KuxVQaSNr1IS&#xA;gZ0Qyq5/ZqeP475YARG/gwscVJd5ovTb6aY0NHuDw/2PVv6ZdpMfFO+5hnlUWFZtnBdiqVea4ZJf&#xA;LmopH9v0Wag6kL8RH3DMTXxMsMgO52XY8xHVYyeXF9+zMPJ+o2l55a02aGgjNtEoHYFECsv+xIpm&#xA;o4gYRrudjmxShmyA8+I/rTK4t9/Ujbie46j7srIZQn0LCfzUuFHlGa0lQG4vJoYbUjer+ormncfC&#xA;hzH1J9FO27Jj+/BHKIJPyROkOoiMRNXBrXx2pjFOcb2mGTaHYq7FUGtoIrxJEH7tq7eBpmToR+9H&#xA;xcbtOd6cg+X3ossopUgVNBXuc37ybeFUph8r6NDrDaukH+lkUUH7CE1qyr2Y13OYcNDijkOQD1Oy&#xA;y9r6ieAYTL0D5nyJ7g35iT/cbK4/yQf+CGZ+Pm60KGlIp0+EkAmh7e5y0tw5IooT0dgPAHbNdk7M&#xA;xzkZWd/x3O0xdqZIREQI7fjvWtDy6u5+Zyv+ScXfL7P1Nn8s5e6PyP61v1SPxP4f0x/knF3y+z9S&#xA;/wAtZe6P2/rd9Uj8T+H9Mf5Jxd8vs/Uv8tZe6P2/rVBGgAHEbeObDFiGOIiOQdbmynJMylzLG/L4&#xA;p5gvx/xk/wCTgy/L9IcUs50LVXsLscj/AKNKQJV8PBvozX6jDxx82eLJwnyZ1mnc9SiNx68wkH7o&#xA;FTC224I3H0HJyqhXNiLsquQZOxV2KuxV2KqSSTG5lRlpEioUenUmvLf2oMmQOEHqxBNvP/zQ87eW&#xA;9CvLa31S+SCURGRYAGeQhyQDwQMQDw6nNhoY+klxdTLcB4V50/MC/wDMWp6cnliK8WOylPGROS+t&#xA;M9CoKLX7IQ05Hudsy55Ix+o00wxymfSCd6evaJeX91Yh7+EQ3SuyOEDBG4nZ0Db0I7djtlWmzjLA&#xA;SDdqtOcOQwPRHkAggioOxBy9oBYpo2oav5b1a9tdFtn1bRFYST2imjwO3URHfl8qf1zkMp8PLKMN&#xA;4g/J9ChjGo08J5iIZZDn3+ZZBJ+atisbRw6XqL3VKC2aALRv8o8jTH8yO4tA7IkTZlCu+0q+pa9r&#xA;t6mva6ot47X/AI5+lr8QjrSsjHu3+e1KZCpSPFL5OXGWPCPDx73zl+hNbeGeQloftJv1pkwGqcgO&#xA;aMS9uIiFuYzx6cwP8xkr72k4wfpKPBBFRuD0yTQ7FXZKEzEgjo15MYnExPIsP87+RNZ1N21m2nmg&#xA;Wzi9W3ZZ6IrIKkhCfgNVFSvh0rh7QOSc+OP0gd7j9mjDCPhT+skjl8h+O9keifXf0NY/XnMl56Ef&#xA;1hyKEycRyqKDv7Zv9OZHHEy50HndVGIyyEeVlG5e0JL5v1PTtP0WWS+uYrZXKhDK4XkQwJC167b7&#xA;ZKBopCE0TUbS60KK6sbiKeKjUlVgyVDGtStemXNo5Lv0nJ/v+3/4fGlt36Tk/wB/2/8Aw+NLatDP&#xA;ezKWiaB1BoSOfXFUxe4+paZNfLbG7ljdEEQFeIapZuJ+0aDYZianJKI2BPXbm5WlwjJMRMhG+p5I&#xA;O3uL+/ZdSMSWmnuGjghC0eVloTKwP2RQgADKNJlyZJk8sdbA8z5/qcrW4cOGHB9Wa/URyH9Ed/mU&#xA;i0H/AJSHUP8Anr/ydGbTJ9IdMWS5joZ7oFybjSbd2NWUcG/2Bp+rNNqI8My7DFK4hFmOb62JA/7n&#xA;0ypSp+1UEGnyrldjhrrbKjfkq5Bk7FXYq7FXYqpILj6xKXIMBCekNtjvy/hkjVDvYi78nx7+eOm6&#xA;rb/mhq/1xHZryRJbNqE+pCyKsfDx404fMZuNKR4Yp1+cHjL0ryR+W2ueQdFl8z3V8r3qQevNpHp8&#xA;o4/hPKsnIEuEJ6UFdt9jmHqB40hw7SHIuZpsvhRInZgeYH3jzZ4ItZ1G3iv5jFdLOvKF7VWCeixJ&#xA;j+FizV4kE79cyMMoxHCebjzBluOSVeY2vNNtYo0X/chet6dpB1b/ACnNOirmLr9bwx4Mf1y2Dtex&#xA;+zxlmcmXbFj3l+pFaJpsWn2CQpu7fHM/dnPU5qZYPCJjzLuzq/zAE+Q6DuCIt4VRpCR8ZcksetDu&#xA;MiAynK6bvCBayE/y0+/bE8kY/qCzT4fTtwf2n+I/wxiGWWVlUuU528i0qeJoPcbjEsYGiFWwjMwg&#xA;jjBfkFAA2r+BwhjllVkqkcFxKnqxwOEYsFWnIihI6gDw8MMYyIumqWaETRkLCMttHmejTH0k8OrH&#xA;LoYCebi5tfGP07lL7q2F1qUVqkzrZqaPFyJVz1PIV4n7shL1ZRAco/b13a45THHKZA4pfZ027kzv&#xA;tJEUZlhJZV3ZT1A8Rm8xZ7NF0U8dbhLMyWpIPN35faT5qsJvr2pCy/deivIAhKMJA61ZerAcvGgz&#xA;WayUozjLi4RH7XZ6LhOOUOAylPu5j7GDfk6mkWEOt6bY3j3SWk0LT3DUEJd4yrGMjtWM1+jc9c2G&#xA;kyTnC5jhJ6eTTnx44TMYHiA6+fV6F9ds/wDf8f8Awa/1zLabd9ds/wDf8f8Awa/1xW1SOWKReUbq&#xA;6g0JUgiv0YFRtj9YX1JEkSKIUErSjkhr9kFaPyO222VZa2BFllG0NfX6NfLaNcJPKI+aiEURErSh&#xA;UBeFT2IGVQzQ4jAfVzP7S25NPPwvEP0XX9jGNB/5SHUP+ev/ACdGZuT6Q4RZLmOhmPlAk6XID2mY&#xA;D/gVOavW/X8HN0/0prNHGbm3kZ+LoXCJ/NyXcfRSuY0SeEhtI3CvkGTsVdirsVdiqj6bC89T1Pha&#xA;PgI/cGtR9+Tv01XVjW9sS82aLYal5hsVvLWO69L05ofUUMUZHJ5KT0Pw9sztPKsRcbMLmEV5ttLq&#xA;98sanbWaercT20qRRjqxZCKCvjXK8JAmCe9coJiQEn0zVm8t+U9LTUIiJ4LMevCTxdfTUfDxoant&#xA;hzygDKRlQZ6TBkyGMIi5FimgNqesandeaNTDRy3n7qxtSTSG3BoAK+PyFdz+1lHZunMj40+Z+nyH&#xA;4/G7ue2dTHFAaTEfTHeZ75fj9A6MuReKhfDK+0I1kvvYdl5LxV3FvMF2ahfKWtZAPCv3GuA8meM+&#xA;oL7cgwRkfyj9WIRPmVTCxU2gUxPGryRK+9YneJgag/CyFWG4yzFkMDYUm+aZWurTwrxceota1J3+&#xA;/LIZyObg59EJ7jYr7nX4Yo2mlVxGPhXiK0ZgaE7+2SnrIxFkFxo9mZJGgRaG0S3uLl0vlWkT1NW2&#xA;Na+GUaSMjLj6G2WtIgDj6imRGgT4zUAfEc2Lq3lXn78ydK8oarb2V5Y3Eq3MPrpNCUK15lStGK7i&#xA;lfpzZY7IcMmktt/zH0nzVrGhWOjxzW9jJcj6/wDWAgkYqaKh4s4oep+jIZNPxQkZ79zKGplCY4Dw&#xA;vS9S8sWH1WZ9NgjtJ3Jkf0kUK7HcllAoWPjlWDUEGjycmUWK/UZ/9/r/AMikzZtVO+oz/wC/1/5F&#xA;JitLltbtRRbkKPARqMVpGvb2d7p8theM0auyyRzLWquvfbf3BzF1OAZBR/b7x5hytNqZYZiUef2e&#xA;YPkVOKzsbG1W2tWaaQu0tzdOPjkdgB1O9BTK9NphjvvPxJ8yx1+slmIvYDkByA7gxXSry0tdfv3u&#xA;Z44EJlAaRlQf3o7sRmwyD0hwSQOadp5j8vO3FNUtGbwE8RP4NlHCWPiR7w9B8mlG0gyIwdJJWZWU&#xA;ggiijYj5ZqdafX8HP0/0ptN6PrW/OvPk3pf63Bq1/wBjXMeN0abTVhWyDJ2KuxV2KuxVDXX1ZJYZ&#xA;ppPTaMkJv15jjQ+2WQ4iCAObCVWCUNeWwbUYrrqFiKKfctX9RyzHL0kebCY3tjvnnzDeeX9De9sU&#xA;ie45qqJMGaP4mFahSp6V75laTT+LPhWOOUjUavzef3Gsat5t1nS5xD9ThtLRW1C5VCFkaYhmii5c&#xA;vh5JStaght9hmBqNF4mpOMj0Q5nv7vx73fYco0WkMyRLLMkRA6d5+77PNlVtGoZVUAIg2A2AA6DN&#xA;5QAoPKSkSbPNG5r9fj4oX3Ox7LzcOThP8Ts0r0ancGkElBUkEAe52GAsocw3BGY4UQ9VAB+eIRI2&#xA;bX4UOxV2KotJYoNGv7iWgjjXk5IqAEBJNB7ZfDaEj5Ov1IMssIjmT95STy/5r0qfUreytbxiZWIW&#xA;ELIqmgJ7gDtmHo83rEQdnL7Q7OywxSnKPLrt3syvlpECCaV33Jze4ubzGTk8M/5yQ0+JtM0fUeB9&#xA;WOeS3MgO3GROdCPnHtmZhvi8miXDw/0r/X+xg35e2hgitdVguopZ4b2JjYAkTAiRQPobbfpTvleb&#xA;XjHIwnE8NfV05OTh7MllgMkJAyBrh689vxyfU2naxY3ltLPFJ+7hP7wt8PHavftmuw5o5fo3crUa&#xA;XJhIExVsBuNQka4laKekTOxQeg2yk7Z0MRtu4BKn9euP+Wj/AJINhRavA19OhdLhaA0+KIjf6Til&#xA;NHlurXSp7uzgW4uo3ReLU2Q1LcagjkaUBzD1UpD6RfldW5WmhjlKpnhj31dIKP8ASV0qavfH6rFI&#xA;Hjgswqp8CUPqy0/aNae1PGuY2l8SUzKVxj0j+vz8ujbrzhxwGOFTlfqn+iP9Hz6vFvMyW11r19PH&#xA;IJEeZykiMGUivY7jN0Hm8tGRKV/UYvFvw/pi18L3H/nHq8sYbDUtPNyi3Ukyyw2rSDmyhKMyIT7b&#xA;kD55qO0omwa2dr2cQARb1qeWFbiBHWrNzKOf2eK7n7jmvjEkGnYEiwqpJG/2GDU60IOQIISCF2BL&#xA;sVdiqXazqZs4QsZ/fyfY9h3bMjT4eM78mnNk4R5sVeR5HLuxZj1YmpzagAcnBJtONDZzA4JJUN8I&#xA;PQbb0zD1IFt+Lkw/85pjHoNonaS6RD/yLkb/AI1zO7HH70/1f1OfpPr+Cj5QYv5Dse/pzyrX/Wdz&#xA;k9VtqJe4NGuHrKbwR8FqepysuArKpZgo3JyMqrdIJBsLpYmjah79DnPZ8XBKuj1Wk1Aywvr1WZS5&#xA;TsVdirsVdirerkr5N1YjvFKP+SeXf5GXuP3OJHfWYh5x+95X5MldPNunlQOIejV8XBA/jmq0f97E&#xA;+b1vbNHSzH9H7iHvF6KwH2IzpsfN8yyckh1XQtK1u2FlqdpFeW5YMscy8lD0Khh4EBjuMyOIjdpi&#xA;BYt4jrWi6HYeY9Q/RloltHHK0SLHUAemabAk9xmwxC4C+r3nZWjx48UZgVKUd/ve+ywWsehyzLEk&#xA;ZMBkdlUA7LU9BmnwwEcgoVu8flnI7Ek0xD9JWX+/P+Fb+mbqnGt36Ssv9+f8K39MaW1aGeKZS0bc&#xA;lBoTQjf6cCoq2f0Ve5e5+qQoQjS1pVn+ygFRUmmY+fJEbFMIymajfwSTzTqUNxZapbJM94UsZjLN&#xA;Q8UPpsBGxP7XsK5Tg1ETk8MDcc+5nqNFOODxZEVLkDzPnXc8SW1BYLGWBJoFU9SfbNpbohHuRVxo&#xA;uqW8QluILmGI9JHRkX7yoyuOaEjQIJ97dPTZIi5RkB7mQflYtvB5+0ieQ0CSSEuxrT9y+V6qJOMg&#xA;J0tDICXu2q6rJeyUWqwL9hPH3OYWDAIDzdhlymR8kFHJJG4eNirruGGxy8gHYtQNMr0bUvrkBD09&#xA;ePZ/cdmzVajDwHbk5+LJxDzTDMdtdirDtWujc38r1qqngnyXb+3NxghwwAddllckLHG8hoo+eWk0&#xA;wSHzD+Ycvle/FjDbR3lUEkwLFCrtsqgivYA9Mvw6AZ48RNOy0mm4o2UB+YGq3OseRrLUbqBbV5bi&#xA;F44QS5pVwu5C/aU1+WT0OEY85iDezZg2zGI3Vfy51Y3Pl2TT/q/FbOaouOVebOWY/DxHHjWnU467&#xA;DWXjvmOTV2gKl72TqrMaKCflmKS65G28HpirfbP4ZTOVpAVJI1deLZTkxiYot2HNLHLiigZYXjO+&#xA;69mzU5cEoc+T0mm1cMo259ynlLlOxV2KuxVvWFJ8marTtHKfujGXH+5l7j9zhxP+GYvfH73mXk6z&#xA;9a6nudv9EudN+f7y4Zc1+ix2DLulD73pe2c3CRD+fjy/ZG3uVzvbt8gfxzoIc3zufJL4681I7Gv3&#xA;b5fLk1Y+bwnXJBJrWoSDo9zMw77GQnNpjHpHufSNLGsUB/RH3PfVTnoZSpHK3Zar1FUI2zTRPrHv&#xA;eAnzLCfqT/8ALVN96/8ANOblop31J/8Alqm+9f8AmnG0U0bN/wDlqm+9f+aciZNcpIwpY3NlLY3y&#xA;F7eUhuSgEhgCOhK1r8xmLnwiYoix3Nun1EsUhKJMZDqEu12GwtPKl7Y2CMsEdtcOzvQO7tEQWahP&#xA;8vjjpdOMWwFfj7V12rnnJlM2fxsO4Ma/LfRraLTjq0iK9zM7JCzU+BF2PHwJNc1/a2oPFwDkHa9g&#xA;aSPB4pHqPLyDNHkV1KOqMrCjKWBBB7EUzTg09EYgiiwK10SDTfzOsLe3HC3uKzxIOihkcED25KaZ&#xA;0+k1ByYLPMbPDdo6UYdTUfpO4ermy22ff3GPiNdIeSN0NGGWA2hF6RdG3v4mrRHPB/k234HfKtRD&#xA;igWzFKpMwzTuwUryUw2k8o6xxs4/2Kk5KAuQDGRoFgP1pPA5vadah9X82aZommPcz0D/AGYY2ZUM&#xA;sp+zGpJ6k5X4dnc0GzHHikB3vONAsLjzTrcmq6hyNn6hecjbk3++xU7bbew+jN3myDDDhjz6frdx&#xA;nzRww4Rz/G7I/wA0tWtm0exso0Kcrj1aUAAjhjYEAD3dcw+zsR4zI9zidni5k+Sa+QUj0ry5DHKj&#xA;evcE3EvTq9Kf8KBlOtueQ9w2adZl4sh8tmRfpeD+Rvw/rmJ4RcW3fpeD+Rvw/rj4RW3fpeD+Rvw/&#xA;rj4RW3HVoCKFGI+j+uA4bSJUbCg93atuqup+gj9eYmTs4Hkadlh7UnHaXq+9YLiI9yPnmJPQZBy3&#xA;djj7TxS5ml4kjP7Q+/KDp8g/hPycgarEf4h83GSMdWH34jT5DyiUy1OIc5D5pL5vvmXy3dpC8iMx&#xA;QMVJUFS4DA0O4INMs1ellj08pHnt96OzNVDNrYRr0i/mAT9jFPKTldG8xcC6ylIWidNirQhpAQQQ&#xA;a1zD0GMywZCO77rLtu2sgGr04PKyD7pVFNfIfmDU5dSuBfXlxdRiH4ElleQA813AYnLOx5SnkIJJ&#xA;26uL7UabFjwxMIxj6ugA6Fk/mDzO+n6NdXlqpE0SjjyXmN2ANQN6UOdHHBZovKdn4o5M8Yy5H9Tx&#xA;Q6tZSSms4MjElmaoqT7nbNhwvooobM00382tXkv7XT5Z4/qrnhKYYweK0I3bfv1pmONHHm8/r+y8&#xA;OPDKY+rzKfnzJoo/4+P+Ef8A5py3gLyJk1/iTRv+Wj/hJP8AmnInHJrJJd/iTRf+Wj/hJP8AmnHw&#xA;pIp3+JNF/wCWj/hJP+acfCktILW9f0iXRb+KOervbTKg4OKkxkDquIxytjMbFIPy+802VtbNpV/M&#xA;Lccy9tMx4p8X2kY9t9xXNV2no5SPHEX3u27E7RhCPhzNdx/Qzi61PS7SAz3F6kcVKhi43/1QNz9G&#xA;aaGCcjQBt6PJqscBxSkAGBaX5gXVPzIsr8KRboxjgU/a4LG9CfmSTnTYNN4eHh69XidZq/H1HGOX&#xA;Ie561+l4P5G/D+uV+EVtZNqUEiFeDV7Hb+uGOMgqUP8AWk8DltIZ/aymW2hlIoZEViD1HIVzRTFE&#xA;h2cTYVCAQQRUHYg5FLH7ryfayOWt5mhB34EcwPluDmbDWyHMW48tOOiQ+ZPyx/Tely6fPLE6P8Ub&#xA;sDVJB9l12O4/Vtlw10e4tf5cqOk+S/MNhpdta3AjuJoU4vJEwVTQ9gxB6ZOGqx1VonikTbGfPvkf&#xA;zTqDae9jpq3BgdvrHqO6ngeJohjNN6dSDl8NZw/RKvl+ltwZJ4roc/x0TTTF1sWldXtEs7kMQI4y&#xA;WXjtQ7gU+WGMr6uLIbonJMXYq7FXYq7FXYq7FXYqk/muWIaJdxllMpQOI+QBIVga7keGYPaUeLBK&#xA;I5nl83a9iZRj1UJyNRF2feCEt8iW3qaLdzMP3d5KwQhlcFFRUr8JP7XLvmL2VpZQwyExRkfsp2Pt&#xA;Dr4ZNTCWOQkIAbjvu/1IPyKlwuq3iSRcPSj4P8aNRuQ2orE9uuYvY+myY8kjIVtX2uf7S6/DmwQG&#xA;OQkeK/hX2c2asyqpZiAoFSTsABnRPFMZS38pa5qN1CjWV7IylmaFoZJBQrVqjkdiaHNXpvFjq53x&#xA;eHW3Ph6fDveiza6tFjEJ1MGtjvQ4v2KiaFoxujpasImiQTCOIoshXZebKB0r3pg0hyQ1mS7MSNr5&#xA;dDQ+bHX6kZdHjJNzBo9/Xf7Ff/B+mf79m/4JP+ac3fjl0Fu/wfpn+/Zv+CT/AJpx8crbv8H6Z/v2&#xA;b/gk/wCacfHK2mGgeVvL1vqsMt9zmt1qTHLxaMmm3IBRUVynUZZmBEebPGRe6c+e9H8o/wCFtQns&#xA;bO1N5wVYhbhQ/wAciqSFSnQHwzS59RqIQJBlfzdx2dgw5c8YzrhPPp0eHy6HLIrra20rzKK+mis5&#xA;+7c5V2d2nqZ5hCe467VTte2+wdFi00smP0yHL1E35bkp35P0CGNppdXs2jmqBbpdRsq0/aIDgAnp&#xA;mt9se1M2Ewx45GEZAkkbX5X5fpdP7O6DHkEpzjxEEc2WxwWayLMkccSpuhUKp+dRnADW5rvjl/pi&#xA;9Z+Wx1XCPkGQ6Lp9/qlu01snqRI5jMhIAqAD3O/XPSPZztWWbTXllcoyIvvFD9byfa2hGPNUBQIv&#xA;705g8n3zf300cY9qsf4D8c3ctbHoHXDTnqm1j5X062YPJW4kHTn9mv8Aqj+OY2TVzly2bo4IhOMx&#xA;W52KuxV2KuxV2Ku64qh5dPsJf7y3jevcqK/fTJjLIciWJgD0S+88u6IInldDAqgszox2HyPIfhl8&#xA;NTkuubXLDBiN4lqk7LayNLD2dl4nNnAyI9QouHIC9lDJsXYq7FXYq7FUu1Ly7o2pzLPfWwmlVQgc&#xA;syniCSB8JHcnFNomw0+z0+1W1s4hDAlSqLXqTU7mpxQo2Gh6Tp881xZ2yQzT/wB66133r3O2/hhJ&#xA;JWkTeWlteWstrcxiW3mUpLGehU9RtgVLdJ8peXdJuTdadZJbzshjMgLE8SQSPiJ8MNrSKXRdKXU2&#xA;1QWqDUGHFrmnxkcQtK/IUwWqNxV2KuxV2Kplpd3pEIpe2hlav96DXb/UJAyjNCZ+k02wlEcwy+zt&#xA;tLkgSa3t4xG4qp4AGn3Zq5ymDRJcyMY1YC+90zT76D0Lu3SaKtQrDofEeB+WYeo02PNHhyREh5uR&#xA;izTxm4GilC+QfKiyc/qVfBTJKV+7lmsHs9owb4Ptl+tzD2tqCK4vsH6k8t7e3toVgt41ihQUSNAF&#xA;UfIDNvjxxhERiKiOgcCczI3I2VTJsXYq7FXYq7FXYq7FXYq7FXYq7FUJNpGmTGsltGSepC8T94pl&#xA;sc0xyLA44nohX8r6M3SJk/1Xb+JOWDV5O9gcEVBvKGmHo8y/Jl/iuTGtn5I/LxU28m2f7M8g+YU/&#xA;wGS/PS7gj8sO9YfJkNdrpgPdAf44fzx7kflh3rD5LFdrzb/jH/zdh/PeX2o/LebR8lmm15v/AMY/&#xA;+bsfz3l9q/lvNb/gyX/lqX/gD/XD+eHcj8t5u/wZL/y1L/wB/rj+eHcv5bzXDyWab3lD7R1/42wf&#xA;nvL7U/lvNv8AwX/y+f8AJP8A5vx/P+X2r+W81w8mR03uzX/UH/NWD88e5P5bzXDyZb03uXJ9lAwf&#xA;nj3L+WHevXydYbcppT404j+BwfnpdwT+XCqvlHSh1aVvmw/gBkTrZ+Sfy8VZPLOjL1hLH/Kdv4EZ&#xA;E6vJ3shgiiodJ02E1jtowR0JUE/ea5VLNM8yWQxxHRFZWzdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:315162a6-fd0b-416a-8a37-7f8850f77e5f"
    stRef:documentID="xmp.did:8aedf604-a0e2-3543-a84f-0c027ec57a92"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8aedf604-a0e2-3543-a84f-0c027ec57a92"
      stEvt:when="2022-01-12T13:53:03+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:645e233b-b292-754e-8fbe-f0c81c6ea831"
      stEvt:when="2022-01-17T13:32:46+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:46012dcd-0c68-9e45-8183-6348703b5a7e"
      stEvt:when="2022-02-06T15:32:39+03:00"
      stEvt:softwareAgent="Adobe Bridge 2021 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:1e9aa7cd-f8dd-9040-9c2d-1960fd23f677"
      stEvt:when="2022-02-06T15:33+03:00"
      stEvt:softwareAgent="Adobe Bridge 2021 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="3300.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Р‘РµР»С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Р§РµСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РєСЂР°СЃРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р¶РµР»С‚С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р·РµР»РµРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РіРѕР»СѓР±РѕР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB СЃРёРЅРёР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB РїСѓСЂРїСѓСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
            
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3300 2000 li
3300 0 li
cp
clp
3300 2000 mo
0 2000 li
0 0 li
3300 0 li
3300 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1577.93 1547.04 mo
1645.78 1547.04 li
1607.3 1332.23 li
1577.93 1547.04 li
cp
.913725 .956863 1 rgb
f
418.077 1605.11 mo
418.077 1605.11 221.969 919.446 475.002 750.068 cv
580.161 679.675 689.541 715.828 801.117 751.981 cv
907.89 786.578 1016.67 821.175 1125.69 762.401 cv
1324.16 655.396 1115.37 362.444 1378.62 315.319 cv
1522.76 289.515 1677.14 414.387 1831.39 539.259 cv
1993.01 670.091 2154.49 800.924 2303.93 758.46 cv
2658.33 657.751 3010.87 862.191 2706.21 1606.44 cv
418.077 1605.11 li
.678431 .784314 .968627 rgb
f
1570.47 116.804 mo
1552.95 109.944 1534.7 105.255 1516.22 102.866 cv
1518.86 92.1124 li
1538.91 94.7056 1558.68 99.778 1577.61 107.189 cv
1570.47 116.804 li
1406.13 116.81 mo
1398.02 107.611 li
1415.84 99.3303 1435.48 93.9448 1456.38 91.6069 cv
1458.67 102.402 li
1439.85 104.507 1422.18 109.354 1406.13 116.81 cv
1658.25 173.038 mo
1645.11 161.074 1631.54 150.475 1617.93 141.538 cv
1628.02 133.436 li
1642.23 142.768 1656.36 153.801 1670.01 166.226 cv
1658.25 173.038 li
1333.29 181.386 mo
1319.8 176.552 li
1329.67 162.02 1340.63 149.172 1352.35 138.362 cv
1364.17 145.12 li
1353.09 155.334 1342.7 167.536 1333.29 181.386 cv
1722.76 246.214 mo
1712.87 232.684 1702.76 219.983 1692.73 208.463 cv
1705.44 202.623 li
1715.68 214.376 1725.98 227.319 1736.05 241.092 cv
1722.76 246.214 li
1293.87 263.218 mo
1279.27 260.571 li
1284.52 245.318 1290.3 230.952 1296.46 217.869 cv
1310.7 221.404 li
1304.67 234.195 1299.01 248.263 1293.87 263.218 cv
1773.69 325.559 mo
1765.61 311.442 1757.46 297.935 1749.48 285.414 cv
1763.13 280.824 li
1771.2 293.475 1779.42 307.116 1787.58 321.367 cv
1773.69 325.559 li
1271.26 349.214 mo
1256.37 347.652 li
1259.41 332.359 1262.76 317.652 1266.31 303.94 cv
1281.09 305.96 li
1277.58 319.521 1274.27 334.073 1271.26 349.214 cv
1816.98 407.509 mo
1809.71 392.777 1802.86 379.311 1796.04 366.341 cv
1810.09 362.444 li
1816.95 375.485 1823.84 389.021 1831.14 403.825 cv
1816.98 407.509 li
1257.57 436.502 mo
1242.59 435.536 li
1244.46 420.211 1246.5 405.41 1248.65 391.546 cv
1263.6 392.767 li
1261.46 406.547 1259.44 421.262 1257.57 436.502 cv
2605.1 454.928 mo
2586.47 449.222 2567.61 445.691 2549.05 444.431 cv
2550.44 433.556 li
2570.54 434.919 2590.89 438.724 2610.94 444.864 cv
2605.1 454.928 li
2440.97 468.309 mo
2432.35 459.359 li
2450.85 449.961 2469.53 443.001 2487.88 438.673 cv
2492.53 449.062 li
2475.6 453.056 2458.25 459.532 2440.97 468.309 cv
1856.4 490.754 mo
1848.92 474.502 1842.75 461.252 1836.99 449.053 cv
1851.22 445.511 li
1856.99 457.737 1863.17 471.013 1870.66 487.29 cv
1856.4 490.754 li
2700.5 504.359 mo
2686.02 493.586 2671.02 484.076 2655.93 476.095 cv
2664.79 467.266 li
2680.56 475.606 2696.19 485.518 2711.26 496.729 cv
2700.5 504.359 li
646.376 522.015 mo
627.605 515.232 609.144 510.903 591.502 509.148 cv
593.544 498.327 li
612.81 500.243 632.84 504.923 653.077 512.236 cv
646.376 522.015 li
1248.82 524.302 mo
1233.8 523.652 li
1235.11 507.776 1236.4 493.358 1237.76 479.575 cv
1252.76 480.354 li
1251.41 494.094 1250.12 508.469 1248.82 524.302 cv
2356.13 528.596 mo
2344.45 521.719 li
2358.55 509.08 2371.92 498.204 2385.31 488.471 cv
2395.95 496.19 li
2382.93 505.654 2369.91 516.254 2356.13 528.596 cv
484.125 531.937 mo
475.002 523.253 li
492.965 513.303 511.66 506.127 530.568 501.925 cv
534.97 512.37 li
517.773 516.192 500.666 522.775 484.125 531.937 cv
2772.78 573.115 mo
2762.01 560.344 2750.7 548.264 2739.19 537.214 cv
2751.19 530.625 li
2762.99 541.959 2774.58 554.334 2785.61 567.408 cv
2772.78 573.115 li
741.037 573.582 mo
725.663 562.713 710.545 553.111 696.107 545.043 cv
705.28 536.387 li
720.179 544.712 735.74 554.593 751.53 565.755 cv
741.037 573.582 li
1894.96 574.346 mo
1888.06 559.668 1881.3 544.98 1875.59 532.549 cv
1889.86 529.093 li
1895.56 541.506 1902.32 556.171 1909.2 570.818 cv
1894.96 574.346 li
406.898 596.567 mo
394.22 590.689 li
406.04 577.247 418.228 565.106 430.444 554.605 cv
441.935 561.653 li
430.149 571.785 418.361 583.532 406.898 596.567 cv
2285.78 599.65 mo
2273.23 593.628 li
2285.8 579.819 2297.04 567.874 2307.6 557.111 cv
2319.85 563.447 li
2309.4 574.106 2298.25 585.947 2285.78 599.65 cv
1242.36 612.312 mo
1227.33 611.763 li
1228.35 597.17 1229.35 582.57 1230.43 567.714 cv
1245.45 568.287 li
1244.38 583.135 1243.37 597.727 1242.36 612.312 cv
821.234 638.685 mo
807.586 626.382 794.881 615.433 782.394 605.21 cv
793.647 597.963 li
806.293 608.315 819.149 619.394 832.948 631.832 cv
821.234 638.685 li
2827.41 650.605 mo
2819.33 636.927 2810.77 623.64 2801.99 611.113 cv
2815.39 606.157 li
2824.33 618.895 2833.02 632.4 2841.24 646.296 cv
2827.41 650.605 li
1936.57 657.418 mo
1929.76 645.008 1922.72 631.469 1915.05 616.027 cv
1929.2 612.321 li
1936.81 627.648 1943.79 641.077 1950.54 653.373 cv
1936.57 657.418 li
2219.81 673.571 mo
2207.24 667.57 li
2217.93 655.77 2228.97 643.266 2240.15 630.636 cv
2252.81 636.54 li
2241.6 649.203 2230.55 661.717 2219.81 673.571 cv
351.084 673.574 mo
337.322 669.163 li
345.579 655.584 354.378 642.248 363.729 629.209 cv
377.067 634.258 li
367.867 647.088 359.21 660.21 351.084 673.574 cv
1235.67 700.462 mo
1220.66 699.756 li
1221.8 686.959 1222.96 672.576 1224.21 655.784 cv
1239.23 656.373 li
1237.98 673.204 1236.81 687.625 1235.67 700.462 cv
894.467 708.579 mo
880.705 694.923 869.237 683.711 858.373 673.295 cv
870.365 666.701 li
881.279 677.165 892.794 688.423 906.607 702.13 cv
894.467 708.579 li
2868.76 732.6 mo
2862.7 718.448 2856.23 704.517 2849.54 691.194 cv
2863.67 687.45 li
2870.45 700.938 2876.99 715.038 2883.12 729.358 cv
2868.76 732.6 li
1990.28 737.437 mo
1980.54 726.533 1970.89 713.69 1960.78 698.178 cv
1974.38 693.506 li
1984.2 708.575 1993.53 721.002 2002.9 731.496 cv
1990.28 737.437 li
2146.84 744.948 mo
2135.79 737.538 li
2147.2 728.568 2159.42 717.505 2173.17 703.713 cv
2185.35 710.117 li
2171.25 724.263 2158.66 735.656 2146.84 744.948 cv
309.325 755.36 mo
294.941 752.166 li
300.918 737.974 307.474 723.86 314.43 710.214 cv
328.537 714.005 li
321.681 727.454 315.218 741.369 309.325 755.36 cv
2067.21 778.894 mo
2055.49 778.894 2044 776.353 2033.05 771.341 cv
2041.07 762.099 li
2057.52 769.642 2073.71 769.659 2091.18 763.644 cv
2097.66 773.503 li
2087.32 777.08 2077.08 778.894 2067.21 778.894 cv
965.951 779.793 mo
953.724 767.802 941.042 755.128 930.115 744.189 cv
942.291 737.776 li
953.198 748.693 965.854 761.342 978.041 773.293 cv
965.951 779.793 li
1224.75 788.67 mo
1209.83 787.276 li
1212.14 774.239 1214.21 759.961 1216.16 743.629 cv
1231.15 744.572 li
1229.18 761.057 1227.09 775.481 1224.75 788.67 cv
2899.66 817.139 mo
2895.21 802.713 2890.4 788.411 2885.38 774.632 cv
2899.92 771.837 li
2904.99 785.75 2909.84 800.189 2914.34 814.75 cv
2899.66 817.139 li
280.385 840.117 mo
265.618 838.036 li
269.514 823.458 273.924 808.922 278.723 794.83 cv
293.326 797.453 li
288.587 811.365 284.233 825.72 280.385 840.117 cv
1041.94 849.075 mo
1029.96 839.386 1017.15 828.234 1002.79 814.983 cv
1014.61 808.228 li
1028.77 821.292 1041.37 832.266 1053.13 841.778 cv
1041.94 849.075 li
1195.24 875.647 mo
1181.84 870.68 li
1188.73 860.889 1194.81 847.301 1199.93 830.297 cv
1214.63 832.629 li
1209.16 850.802 1202.81 864.873 1195.24 875.647 cv
1143.05 901.635 mo
1122.15 899.241 1107.03 892.332 1086.09 880.402 cv
1095.59 871.938 li
1113.94 882.362 1127.19 888.616 1144.65 890.774 cv
1143.05 901.635 li
2922.03 903.176 mo
2918.9 888.599 2915.46 874.078 2911.82 860.015 cv
2926.6 857.994 li
2930.28 872.169 2933.74 886.804 2936.89 901.493 cv
2922.03 903.176 li
263.014 926.612 mo
248.048 925.52 li
250.091 910.749 252.582 895.986 255.452 881.641 cv
270.338 883.211 li
267.499 897.398 265.035 912.001 263.014 926.612 cv
2937.21 990.102 mo
2935.2 975.434 2932.93 960.782 2930.45 946.556 cv
2945.37 945.185 li
2947.87 959.508 2950.16 974.256 2952.18 989.021 cv
2937.21 990.102 li
255.867 1013.93 mo
240.827 1013.71 li
241.246 998.884 242.054 984.034 243.229 969.572 cv
258.245 970.215 li
257.081 984.537 256.281 999.247 255.867 1013.93 cv
2946.2 1077.52 mo
2945.17 1062.85 2943.9 1048.13 2942.43 1033.77 cv
2957.43 1032.96 li
2958.91 1047.4 2960.19 1062.21 2961.23 1076.97 cv
2946.2 1077.52 li
242.651 1102.01 mo
241.653 1087.22 240.991 1072.37 240.684 1057.88 cv
255.724 1057.71 li
256.028 1072.08 256.685 1086.81 257.674 1101.47 cv
242.651 1102.01 li
2949.76 1165.19 mo
2949.59 1150.5 2949.2 1135.74 2948.62 1121.34 cv
2963.66 1121.02 li
2964.24 1135.5 2964.63 1150.33 2964.81 1165.09 cv
2949.76 1165.19 li
252.396 1190.01 mo
250.153 1175.31 248.202 1160.52 246.595 1146.07 cv
261.588 1145.19 li
263.184 1159.54 265.12 1174.21 267.347 1188.81 cv
252.396 1190.01 li
2963.54 1253.24 mo
2948.5 1252.92 li
2949.09 1238.24 2949.49 1223.48 2949.7 1209.05 cv
2964.74 1209.17 li
2964.53 1223.66 2964.13 1238.49 2963.54 1253.24 cv
269.149 1277.43 mo
265.804 1262.87 262.707 1248.2 259.945 1233.81 cv
274.842 1232.3 li
277.586 1246.59 280.663 1261.17 283.986 1275.63 cv
269.149 1277.43 li
2957.91 1341.27 mo
2942.9 1340.58 li
2944.17 1325.97 2945.29 1311.22 2946.21 1296.76 cv
2961.24 1297.27 li
2960.31 1311.79 2959.19 1326.6 2957.91 1341.27 cv
292.215 1364.07 mo
287.871 1349.69 283.737 1335.15 279.928 1320.86 cv
294.697 1318.78 li
298.481 1332.99 302.59 1347.44 306.907 1361.73 cv
292.215 1364.07 li
2948.33 1429.11 mo
2933.36 1428.08 li
2935.26 1413.46 2937.02 1398.75 2938.6 1384.36 cv
2953.59 1385.22 li
2952.01 1399.67 2950.24 1414.43 2948.33 1429.11 cv
321.136 1449.77 mo
315.87 1435.66 310.765 1421.28 305.96 1407.04 cv
320.569 1404.44 li
325.347 1418.6 330.422 1432.89 335.654 1446.91 cv
321.136 1449.77 li
2935.15 1516.69 mo
2920.22 1515.35 li
2922.7 1500.79 2925.06 1486.11 2927.22 1471.75 cv
2942.17 1472.94 li
2940 1487.35 2937.64 1502.07 2935.15 1516.69 cv
355.827 1534.36 mo
349.677 1520.68 343.592 1506.5 337.742 1492.22 cv
352.159 1489.11 li
357.972 1503.29 364.017 1517.38 370.127 1530.97 cv
355.827 1534.36 li
.701961 .823529 1 rgb
f
3030.48 1335.9 mo
2905.66 1319.85 2926.03 1464.85 2748.1 1464.85 cv
2585.42 1464.85 2533.38 912.687 2415.01 1070.53 cv
1808.22 1879.7 2160.57 726.409 1678 711.754 cv
1459.79 705.127 1314.39 906.949 1260.77 1264.28 cv
1183.05 1587.33 1002.79 1017.89 817.293 1070.84 cv
699.399 1104.49 712.901 1464.85 550.222 1464.85 cv
372.295 1464.85 392.664 1319.85 267.84 1335.9 cv
133.447 1353.18 93.3058 1609.82 93.3058 1609.82 cv
3205.01 1609.82 li
3205.01 1609.82 3164.87 1353.18 3030.48 1335.9 cv
cp
.721569 .835294 1 rgb
f
2919.94 1492.85 mo
2805.11 1486 2823.85 1547.91 2660.16 1547.91 cv
2510.5 1547.91 2514.61 1409.16 2414.46 1379.67 cv
2230.02 1325.36 2077.97 1600.21 2006.47 1462.27 cv
1870.66 1096.25 1474.58 912.687 1291.85 1462.27 cv
1220.35 1600.21 1053.13 1354.07 883.862 1379.67 cv
779.669 1395.42 787.824 1547.91 638.164 1547.91 cv
474.475 1547.91 493.214 1486 378.379 1492.85 cv
254.741 1500.23 217.812 1609.82 217.812 1609.82 cv
3080.51 1609.82 li
3080.51 1609.82 3043.58 1500.23 2919.94 1492.85 cv
cp
.792157 .898039 1 rgb
f
93.3058 1609.82 mo
93.3058 1609.82 73.7885 1678.54 164.231 1695.83 cv
287.938 1719.48 1014.08 1781.6 837.677 1828.82 cv
738.096 1855.47 888.513 1891.65 1373.55 1904.98 cv
1858.58 1918.3 2829.75 1893.42 2549.87 1816.17 cv
2269.98 1738.92 3274.47 1770.18 3205.01 1609.49 cv
93.3058 1609.82 li
cp
.678431 .784314 .968627 rgb
f
968.854 441.574 mo
1006.91 382.577 918.265 328.722 882.498 389.046 cv
868.77 408.478 856.414 428.99 845.135 449.843 cv
843.387 444.087 841.195 436.885 839.343 431.132 cv
822.469 358.545 719.072 384.915 739.669 457.148 cv
747.492 497.646 753.622 539.233 758.533 580.217 cv
764.922 632.918 769.212 688.234 771.429 741.222 cv
774.372 802.793 772.068 864.609 769.998 925.85 cv
778.445 1029.24 932.745 1019.55 927.772 915.588 cv
923.657 847.366 916.317 779.458 905.148 712.233 cv
903.84 704.558 901.313 689.319 900.001 681.668 cv
900.897 661.532 902.999 641.24 906.369 620.961 cv
917.053 558.429 938.147 496.921 968.854 441.574 cv
.976471 .752941 .752941 rgb
f
1314.63 513.991 mo
1312.93 478.516 1307.11 454.654 1306.68 452.965 cv
1302.74 437.215 1286.78 427.638 1271.03 431.584 cv
1255.28 435.525 1245.7 451.487 1249.65 467.238 cv
1249.72 467.522 1253.13 481.49 1255.05 503.581 cv
1236.07 502.408 1215.85 502.987 1194.29 505.549 cv
1184.64 467.982 1172.58 443.531 1171.76 441.889 cv
1164.5 427.369 1146.84 421.485 1132.31 428.747 cv
1117.79 436.01 1111.91 453.668 1119.17 468.19 cv
1119.33 468.504 1128.43 486.955 1136.28 516.011 cv
1113.74 521.454 1092.95 528.202 1073.8 536.002 cv
1061.03 504.424 1048.43 484.725 1047.5 483.302 cv
1038.68 469.678 1020.45 465.761 1006.83 474.589 cv
993.203 483.417 989.296 501.592 998.125 515.218 cv
998.32 515.521 1009.76 533.588 1020.96 562.368 cv
859.326 659.673 848.882 838.032 848.882 838.032 cv
848.882 838.032 1473.79 1136.49 1507.39 992.025 cv
1535.83 869.706 1516.1 574.59 1314.63 513.991 cv
.956863 .623529 .623529 rgb
f
1507.39 914.752 mo
1458.68 844.17 1402.95 795.813 1345.56 763.5 cv
1399.75 712.969 1464.03 673.624 1532.31 645.797 cv
1627.74 590.424 1546.99 447.239 1450.18 500.43 cv
1425.01 514.445 1400.98 529.875 1378.19 546.546 cv
1314.47 593.482 1258.08 650.168 1211.94 714.484 cv
869.318 660.459 621.712 880.281 801.828 1317.07 cv
951.353 1643.81 1355.36 1658.93 1442.71 1625.33 cv
1530.06 1591.74 1713.17 1212.93 1507.39 914.752 cv
.976471 .752941 .752941 rgb
f
1244.49 1080.22 mo
1254.57 1045.78 1251.21 996.225 1176.45 971.027 cv
1101.7 945.829 1077.63 895.832 1077.63 895.832 cv
1077.62 895.841 li
1076.46 893.224 1075.27 890.58 1073.98 887.874 cv
1026.95 788.762 1213.41 712.328 1213.41 712.328 cv
1213.41 712.328 945.538 665.415 857.313 789.243 cv
857.313 789.243 843.33 850.085 889.961 895.831 cv
889.951 895.832 li
889.951 895.832 917.755 944.989 918.596 973.547 cv
919.436 1002.1 868.2 999.584 843.842 1034.02 cv
819.484 1068.46 869.04 1139.85 869.04 1139.85 cv
869.04 1139.85 842.162 1085.26 859.801 1055.02 cv
877.439 1024.78 932.034 1039.06 953.032 1012.18 cv
974.031 985.306 971.227 956.039 971.227 956.039 cv
992.735 973.567 1008.89 994.562 1014.35 1031.5 cv
1025.27 1105.42 991.669 1145.73 1014.35 1208.73 cv
1037.03 1271.72 1004.27 1343.96 1004.27 1343.96 cv
1004.27 1343.96 1063.9 1296.08 1046.27 1220.49 cv
1028.63 1144.89 1039.55 1121.37 1068.94 1055.02 cv
1080.05 1029.94 1087.76 1008.96 1091.43 989.16 cv
1112.97 1002.17 1142.52 1006.29 1170.57 1013.02 cv
1212.57 1023.1 1224.33 1047.46 1226.01 1095.34 cv
1227.69 1143.21 1285.65 1171.77 1285.65 1171.77 cv
1285.65 1171.77 1234.41 1114.65 1244.49 1080.22 cv
.956863 .623529 .623529 rgb
f
760.729 415.188 mo
761.756 420.186 772.16 422.271 783.967 419.844 cv
795.774 417.417 804.513 411.397 803.485 406.399 cv
802.458 401.401 792.054 399.317 780.247 401.744 cv
768.44 404.171 759.701 410.19 760.729 415.188 cv
cp
f
1504.3 512.979 mo
1492.9 519.561 1493.5 541.948 1505.64 562.98 cv
1517.79 584.013 1536.87 595.727 1548.27 589.145 cv
1559.67 582.563 1559.07 560.176 1546.93 539.143 cv
1534.79 518.111 1515.7 506.396 1504.3 512.979 cv
cp
f
924.518 379.996 mo
921.638 384.208 927.369 393.138 937.318 399.942 cv
947.268 406.746 957.669 408.847 960.549 404.635 cv
963.43 400.423 957.699 391.493 947.749 384.689 cv
937.799 377.885 927.398 375.784 924.518 379.996 cv
cp
f
1004.34 496.697 mo
1006.53 501.306 1014.85 501.931 1022.93 498.093 cv
1031.01 494.254 1035.79 487.406 1033.6 482.797 cv
1031.41 478.188 1023.08 477.563 1015 481.401 cv
1006.92 485.24 1002.15 492.088 1004.34 496.697 cv
cp
.976471 .752941 .752941 rgb
f
1127.09 449.565 mo
1128.72 454.401 1136.91 456.004 1145.39 453.146 cv
1153.87 450.288 1159.42 444.052 1157.79 439.216 cv
1156.16 434.381 1147.96 432.778 1139.49 435.636 cv
1131.01 438.494 1125.46 444.73 1127.09 449.565 cv
cp
f
1260.19 453.02 mo
1261.32 457.996 1269.31 460.422 1278.03 458.44 cv
1286.76 456.457 1292.91 450.816 1291.78 445.841 cv
1290.65 440.865 1282.66 438.438 1273.94 440.421 cv
1265.21 442.404 1259.06 448.044 1260.19 453.02 cv
cp
f
2636.54 816.975 mo
2636.54 1659.26 li
2636.54 1673.74 2624.8 1685.48 2610.31 1685.48 cv
1961.71 1685.48 li
1947.17 1685.55 1935.4 1673.48 1935.48 1659.26 cv
1935.48 816.975 li
1935.48 802.494 1947.22 790.752 1961.71 790.752 cv
2610.31 790.752 li
2624.8 790.752 2636.54 802.494 2636.54 816.975 cv
cp
.541176 .619608 .866667 rgb
f
2636.54 816.975 mo
2636.54 1659.26 li
2636.54 1673.74 2624.8 1685.48 2610.31 1685.48 cv
1961.71 1685.48 li
1948.27 1685.48 1937.2 1675.38 1935.66 1662.35 cv
1936.75 1660.47 1937.33 1659.47 1937.33 1659.47 cv
1937.33 1659.47 2587.37 1628.92 2587.37 793.079 cv
2590.08 790.752 li
2611.12 789.726 2635.12 789.781 2636.54 816.975 cv
cp
.462745 .537255 .839216 rgb
f
2587.37 830.71 mo
2587.37 1622.72 li
1984.65 1622.72 li
1984.65 830.71 li
2587.37 830.71 li
cp
.713726 .760784 1 rgb
f
2587.37 830.71 mo
2587.37 1622.72 li
2100 1622.72 li
2288.18 1555.22 2574.08 1364.86 2586.92 830.71 cv
2587.37 830.71 li
cp
.666667 .780392 .968627 rgb
f
2473.97 955.301 mo
2413.5 956.385 2413.51 1046.25 2473.97 1047.32 cv
2534.43 1046.24 2534.42 956.376 2473.97 955.301 cv
cp
2473.97 1056.14 mo
2401.91 1054.85 2401.92 947.767 2473.97 946.485 cv
2546.02 947.778 2546.01 1054.86 2473.97 1056.14 cv
cp
1 1 1 rgb
f
2473.97 1105.57 mo
2413.5 1106.66 2413.51 1196.52 2473.97 1197.59 cv
2534.43 1196.51 2534.42 1106.65 2473.97 1105.57 cv
cp
2473.97 1206.41 mo
2401.91 1205.12 2401.92 1098.04 2473.97 1096.76 cv
2546.02 1098.05 2546.01 1205.13 2473.97 1206.41 cv
cp
f
2473.97 1255.84 mo
2413.5 1256.93 2413.51 1346.79 2473.97 1347.86 cv
2534.43 1346.78 2534.42 1256.92 2473.97 1255.84 cv
cp
2473.97 1356.68 mo
2401.91 1355.39 2401.92 1248.31 2473.97 1247.03 cv
2546.02 1248.32 2546.01 1355.4 2473.97 1356.68 cv
cp
f
2473.97 1406.11 mo
2413.5 1407.2 2413.51 1497.06 2473.97 1498.14 cv
2534.43 1497.05 2534.42 1407.19 2473.97 1406.11 cv
cp
2473.97 1506.95 mo
2401.91 1505.66 2401.92 1398.58 2473.97 1397.3 cv
2546.02 1398.59 2546.01 1505.67 2473.97 1506.95 cv
cp
f
2479.84 1027.76 mo
2474.59 1029.69 2447.99 998.228 2444.15 995.717 cv
2436.04 987.536 2448.42 975.128 2456.62 983.25 cv
2479.84 1006.48 li
2532.08 954.239 li
2540.25 946.133 2552.67 958.508 2544.55 966.706 cv
2542.01 967.906 2482.62 1032.22 2479.84 1027.76 cv
cp
.921569 .337255 .282353 rgb
f
2479.84 1177.21 mo
2474.57 1179.13 2448 1147.69 2444.15 1145.17 cv
2436.04 1136.99 2448.42 1124.58 2456.62 1132.7 cv
2479.84 1155.93 li
2532.08 1103.69 li
2540.25 1095.59 2552.67 1107.96 2544.55 1116.16 cv
2542.1 1117.31 2482.46 1181.76 2479.84 1177.21 cv
cp
f
2479.84 1326.67 mo
2474.59 1328.6 2447.99 1297.14 2444.15 1294.63 cv
2436.04 1286.44 2448.42 1274.04 2456.62 1282.16 cv
2479.84 1305.38 li
2532.08 1253.15 li
2540.25 1245.04 2552.67 1257.42 2544.55 1265.61 cv
2542.01 1266.81 2482.62 1331.12 2479.84 1326.67 cv
cp
f
2479.84 1476.12 mo
2474.59 1478.05 2447.99 1446.59 2444.15 1444.08 cv
2436.04 1435.9 2448.42 1423.49 2456.62 1431.61 cv
2479.84 1454.84 li
2532.08 1402.6 li
2540.25 1394.5 2552.67 1406.87 2544.55 1415.07 cv
2542.01 1416.27 2482.62 1480.58 2479.84 1476.12 cv
cp
f
2371.93 989.094 mo
2047.81 989.094 li
2042.94 989.094 2039 985.148 2039 980.279 cv
2039 975.41 2042.94 971.463 2047.81 971.463 cv
2371.93 971.463 li
2383.35 971.495 2383.54 989.042 2371.93 989.094 cv
cp
.541176 .619608 .866667 rgb
f
2306.5 1031.16 mo
2047.81 1031.16 li
2036.35 1031.12 2036.23 1013.58 2047.81 1013.53 cv
2306.5 1013.53 li
2317.95 1013.56 2318.1 1031.11 2306.5 1031.16 cv
cp
f
2371.93 1289.64 mo
2047.81 1289.64 li
2042.94 1289.64 2039 1285.69 2039 1280.82 cv
2039 1275.95 2042.94 1272.01 2047.81 1272.01 cv
2371.93 1272.01 li
2383.35 1272.04 2383.54 1289.58 2371.93 1289.64 cv
cp
f
2306.5 1331.7 mo
2047.81 1331.7 li
2036.35 1331.66 2036.23 1314.12 2047.81 1314.07 cv
2306.5 1314.07 li
2317.95 1314.11 2318.1 1331.65 2306.5 1331.7 cv
cp
f
2306.5 1139.37 mo
2047.81 1139.37 li
2036.35 1139.33 2036.23 1121.79 2047.81 1121.73 cv
2306.5 1121.73 li
2317.95 1121.77 2318.1 1139.31 2306.5 1139.37 cv
cp
f
2371.93 1181.43 mo
2047.81 1181.43 li
2042.94 1181.43 2039 1177.48 2039 1172.61 cv
2039 1167.75 2042.94 1163.8 2047.81 1163.8 cv
2371.93 1163.8 li
2383.35 1163.83 2383.54 1181.38 2371.93 1181.43 cv
cp
f
2306.5 1439.91 mo
2047.81 1439.91 li
2036.35 1439.87 2036.23 1422.33 2047.81 1422.28 cv
2306.5 1422.28 li
2317.95 1422.31 2318.1 1439.85 2306.5 1439.91 cv
cp
f
2371.93 1481.97 mo
2047.81 1481.97 li
2042.94 1481.97 2039 1478.03 2039 1473.16 cv
2039 1468.29 2042.94 1464.34 2047.81 1464.34 cv
2371.93 1464.34 li
2383.35 1464.37 2383.54 1481.92 2371.93 1481.97 cv
cp
f
2286.01 763.035 mo
2270.58 762.772 2270.59 739.819 2286.01 739.556 cv
2301.43 739.821 2301.44 762.774 2286.01 763.035 cv
cp
2476.89 774.584 mo
2406.06 774.584 li
2406.06 733.461 li
2406.06 723.523 2398 715.471 2388.06 715.471 cv
2183.96 715.471 li
2174.02 715.471 2165.96 723.523 2165.96 733.461 cv
2165.96 774.584 li
2075.67 778.729 2075.12 752.028 2077.14 844.368 cv
2077.14 854.307 2085.19 862.364 2095.13 862.364 cv
2476.89 862.364 li
2486.83 862.364 2494.88 854.307 2494.88 844.369 cv
2494.88 792.579 li
2494.88 782.641 2486.83 774.584 2476.89 774.584 cv
cp
.988235 .705882 .705882 rgb
f
2494.88 792.579 mo
2494.88 844.369 li
2494.88 854.307 2486.83 862.364 2476.89 862.364 cv
2095.13 862.364 li
2085.19 862.364 2077.14 854.307 2077.14 844.369 cv
2077.14 844.369 2388.06 861.483 2388.06 715.471 cv
2398 715.471 2406.06 723.523 2406.06 733.461 cv
2406.06 774.584 li
2476.89 774.584 li
2486.83 774.584 2494.88 782.641 2494.88 792.579 cv
cp
.956863 .623529 .623529 rgb
f
2286.01 715.471 mo
2174.33 715.471 2165.96 774.584 2165.96 774.584 cv
2165.96 733.461 li
2165.96 723.523 2174.02 715.471 2183.96 715.471 cv
2286.01 715.471 li
cp
.976471 .752941 .752941 rgb
f
1702.96 1751.93 mo
1693.32 1739.21 1705.05 1681.04 1704.64 1666.17 cv
1660.86 1666.17 li
1660.36 1681 1671.36 1739.3 1662.17 1751.91 cv
1659.56 1756.46 1705.58 1756.41 1702.96 1751.93 cv
cp
.976471 .576471 .439216 rgb
f
1488.63 1769.44 mo
1565.26 1769.44 li
1569.8 1769.44 1573.36 1765.55 1572.94 1761.02 cv
1572.21 1753.1 1570.51 1742.22 1571.05 1737.18 cv
1570.75 1732.54 1577.43 1672.39 1577.93 1666.17 cv
1529.66 1666.17 li
1537.45 1728.27 li
1538.37 1735.59 1533.99 1742.57 1526.99 1744.88 cv
1517.52 1748 1506.73 1749.36 1499.61 1751.19 cv
1492.73 1752.93 1486.55 1755.33 1483.46 1760.61 cv
1481.18 1764.52 1484.1 1769.44 1488.63 1769.44 cv
cp
f
1575.5 1761.36 mo
1575.49 1761.45 li
1574.93 1766.01 1571.05 1769.44 1566.45 1769.44 cv
1489.25 1769.44 li
1484.82 1769.44 1481.58 1765.15 1482.93 1760.93 cv
1487 1748.22 1499.75 1740.34 1535.9 1737.18 cv
1535.91 1737.18 1549.2 1741.14 1571.05 1737.18 cv
1571.05 1737.18 1576.9 1749.85 1575.5 1761.36 cv
cp
.223529 .356863 .588235 rgb
f
1699.41 1769.44 mo
1665.74 1769.44 li
1661.02 1769.44 1657.18 1765.54 1657.39 1760.83 cv
1658.84 1729.13 1706.52 1728.88 1707.76 1760.86 cv
1707.94 1765.56 1704.11 1769.44 1699.41 1769.44 cv
cp
f
1507.41 1758.51 mo
1506.73 1758.51 1506.09 1758.1 1505.82 1757.43 cv
1502.71 1749.77 1497.11 1747.42 1496.87 1747.33 cv
1494.81 1746.53 1496.09 1743.29 1498.14 1744.14 cv
1498.43 1744.25 1505.32 1747.05 1509 1756.14 cv
1509.48 1757.24 1508.6 1758.53 1507.41 1758.51 cv
cp
.909804 .752941 .65098 rgb
f
1520.76 1756.9 mo
1520.02 1756.9 1519.34 1756.42 1519.12 1755.68 cv
1516.39 1746.86 1508.64 1742.71 1508.56 1742.67 cv
1506.58 1741.67 1508.19 1738.56 1510.15 1739.62 cv
1510.52 1739.81 1519.23 1744.44 1522.4 1754.67 cv
1522.75 1755.75 1521.89 1756.91 1520.76 1756.9 cv
cp
f
1535.94 1755.03 mo
1535.23 1755.03 1534.57 1754.58 1534.32 1753.87 cv
1531.1 1744.61 1523.71 1739.64 1523.64 1739.59 cv
1521.76 1738.39 1523.69 1735.47 1525.53 1736.73 cv
1525.87 1736.95 1533.97 1742.4 1537.57 1752.75 cv
1537.97 1753.83 1537.1 1755.05 1535.94 1755.03 cv
cp
f
1694.95 1747.45 mo
1681.84 1740.05 1670.19 1749.75 1668.3 1746.44 cv
1666.76 1742.96 1683.93 1737.75 1695.82 1744.25 cv
1697.32 1745.07 1696.63 1747.52 1694.95 1747.45 cv
cp
f
1482.8 1761.36 mo
1575.5 1761.36 li
1575.49 1761.45 li
1574.93 1766.01 1571.05 1769.44 1566.45 1769.44 cv
1488.43 1769.44 li
1484.32 1769.44 1481.38 1765.38 1482.75 1761.5 cv
1482.8 1761.36 li
cp
.282353 .403922 .666667 rgb
f
1700.09 1769.44 mo
1665.05 1769.44 li
1660.7 1769.44 1657.17 1765.84 1657.35 1761.5 cv
1657.36 1761.36 li
1707.78 1761.36 li
1707.79 1761.53 li
1707.95 1765.86 1704.43 1769.44 1700.09 1769.44 cv
cp
f
1585.4 978.192 mo
1585.4 978.192 1580.99 953.322 1602.82 945.272 cv
1616.61 955.631 li
1585.4 978.192 li
cp
.54902 .258824 .145098 rgb
f
1547.63 1163.96 mo
1486.36 1210.11 1390.49 1196.29 1355.03 1129.18 cv
1364 1110.52 li
1466.8 1154.71 1507.26 1068.14 1590.66 1063.15 cv
1573.86 1084.58 li
1573.86 1084.58 1549.07 1162.5 1547.63 1163.96 cv
cp
.913725 .956863 1 rgb
f
1709.93 1725.36 mo
1709.93 1725.36 1673.08 1734.31 1654.1 1724.7 cv
1644.22 1662.74 1616.8 1490.24 1607.25 1372.03 cv
1606.88 1378.92 1586.81 1656.91 1582.99 1724.7 cv
1569.89 1729.08 1543.54 1734.37 1528.79 1723.75 cv
1522.17 1652.39 1500.9 1417.45 1532.94 1225.57 cv
1532.94 1225.57 1620.74 1235.33 1689.31 1214.61 cv
1708.18 1275.48 1713.18 1652.32 1709.93 1725.36 cv
cp
.921569 .337255 .282353 rgb
f
1600.19 1061.53 mo
1599.58 1042.6 1597.23 1005.07 1612.59 1000.03 cv
1623.62 996.203 1636.68 1005.6 1633.28 1018.03 cv
1632.28 1017.4 1629.08 1052.85 1631.29 1062.69 cv
1660.4 1071.42 1572.85 1100.14 1600.19 1061.53 cv
cp
.976471 .576471 .439216 rgb
f
1633.58 1016.42 mo
1633.5 1016.96 1633.41 1017.5 1633.28 1018.03 cv
1632.56 1017.55 1630.54 1037.11 1630.52 1051.3 cv
1617.19 1057.37 1602.66 1054.99 1599.94 1054.43 cv
1599.2 1034.84 1598 1005.5 1612.59 1000.03 cv
1623 995.58 1635.41 1005.07 1633.58 1016.42 cv
cp
.898039 .490196 .380392 rgb
f
1654.54 1003.34 mo
1652.3 1017.24 1647.61 1032.91 1636.63 1042.1 cv
1636.61 1042.1 li
1620.61 1054.21 1597.17 1052.92 1580.9 1039.57 cv
1580.89 1039.57 li
1568.33 1027.83 1564.36 1012.03 1570.97 999.857 cv
1575.29 992.681 1583.26 986.367 1585.4 978.19 cv
1604.04 923.788 1662.45 954.213 1654.54 1003.34 cv
cp
.976471 .576471 .439216 rgb
f
1601.5 994.775 mo
1600.23 992.36 1604.05 990.418 1605.25 992.87 cv
1606.53 995.285 1602.7 997.227 1601.5 994.775 cv
cp
.756863 .384314 .337255 rgb
f
1583.82 991.802 mo
1582.55 989.387 1586.37 987.445 1587.57 989.897 cv
1588.84 992.312 1585.02 994.254 1583.82 991.802 cv
cp
f
1654.54 1003.35 mo
1652.3 1017.24 1647.6 1032.91 1636.63 1042.1 cv
1636.61 1042.1 li
1635.7 1042.86 1635.08 1043.22 1634.08 1043.86 cv
1642.44 1035.57 1646.95 1018.13 1646.95 1018.13 cv
1644.98 1003.07 li
1631.5 989.404 1637.3 974.038 1637.3 974.038 cv
1614.75 980.365 1607.16 966.45 1607.16 966.45 cv
1600.03 967.369 1592.53 963.773 1592.53 963.773 cv
1619.3 927.218 1662.47 966.056 1654.54 1003.35 cv
cp
.898039 .490196 .380392 rgb
f
1647.62 967.128 mo
1638.04 970.918 1634.67 993.182 1657.32 1008.4 cv
1657.32 1008.4 1668.3 971.723 1647.62 967.128 cv
cp
.54902 .258824 .145098 rgb
f
1372.61 1114.05 mo
1371.15 1128.31 1359.76 1137.28 1359.76 1137.28 cv
1356.59 1132.51 1355.02 1129.17 1355.03 1129.18 cv
1364 1110.52 li
1364 1110.52 1367.96 1111.85 1372.61 1114.05 cv
cp
.819608 .878431 .94902 rgb
f
1590.51 1010.1 mo
1586.65 1010.05 1580.67 1007.46 1585.54 1004.03 cv
1589.51 1001.88 1592.43 993.643 1592.46 993.56 cv
1592.78 992.586 1594.32 993.111 1593.96 994.086 cv
1593.84 994.448 1590.81 1002.99 1586.29 1005.43 cv
1583.18 1007.34 1589.67 1009.19 1592.35 1008.25 cv
1592.78 1008.11 1593.22 1008.34 1593.36 1008.76 cv
1593.58 1010.19 1591.5 1009.99 1590.51 1010.1 cv
cp
.756863 .384314 .337255 rgb
f
1698.11 1300.65 mo
1693.87 1308.14 1531.68 1322.08 1520.17 1308.05 cv
1497.65 1252.45 1539.2 1104.24 1590.65 1063.16 cv
1591.1 1063.03 1596.91 1061.55 1600.17 1061.54 cv
1599.95 1062.45 1594.19 1086.42 1631.29 1062.69 cv
1631.5 1062.94 1640.34 1063.1 1642.7 1064.72 cv
1640.03 1103.48 1715.44 1258.21 1698.11 1300.65 cv
cp
.909804 .752941 .65098 rgb
f
1545.2 1096.42 mo
1522.15 1178.92 li
1486.21 1198.72 1424.79 1194.66 1396.26 1172.37 cv
1498.39 1211.93 1506.72 1133.76 1543.82 1096.42 cv
1545.2 1096.42 li
cp
.819608 .878431 .94902 rgb
f
1643.89 945.736 mo
1636.38 936.832 1622.71 932.478 1619.58 923.416 cv
1619.58 923.416 1614.95 932.098 1615.49 941.799 cv
1611.85 937.725 1608.52 933.264 1605.91 928.478 cv
1602.22 932.197 1600.25 936.457 1599.66 940.831 cv
1587.96 938.284 1577.71 942.975 1577.71 942.975 cv
1583.72 959.962 1597.74 963.703 1608.74 963.766 cv
1617.87 972.5 1632.44 976.463 1646.54 967.812 cv
1660.12 985.364 li
1679.41 951.919 1643.89 945.736 1643.89 945.736 cv
cp
.54902 .258824 .145098 rgb
f
1582.99 1724.7 mo
1582.69 1718.74 1607.25 1372.03 1607.25 1372.03 cv
1607.25 1372.03 1595.65 1378.22 1592.89 1415.04 cv
1590.49 1447.05 1576.19 1659.76 1572.49 1714.76 cv
1547.3 1720.39 1527.65 1711.32 1527.65 1711.32 cv
1528.42 1719.38 1528.79 1723.75 1528.79 1723.75 cv
1540.86 1732.44 1560.68 1730.48 1574.67 1727.08 cv
1578.07 1726.29 1580.71 1725.45 1582.04 1725.01 cv
1582.36 1724.9 1582.69 1724.8 1582.99 1724.7 cv
cp
.807843 .223529 .196078 rgb
f
1709.93 1725.36 mo
1709.93 1725.36 1673.08 1734.31 1654.1 1724.7 cv
1654.1 1724.7 1653.32 1719.9 1651.95 1711.32 cv
1651.95 1711.32 1677.91 1718.33 1710.38 1711.06 cv
1710.52 1719.42 1709.81 1724.67 1709.93 1725.36 cv
cp
f
1733.32 1549.89 mo
1698.23 1559.81 1668.24 1559.28 1653.15 1558.01 cv
1646.46 1557.45 1642.7 1556.76 1642.7 1556.76 cv
1642.7 1556.76 1630.92 1313.16 1627.34 1261.66 cv
1621.56 1208.54 1617.33 1085.77 1642.7 1064.72 cv
1644.69 1066.52 1652.09 1067.74 1652.09 1067.74 cv
1713.72 1144.21 1727.63 1512.44 1733.32 1549.89 cv
cp
.913725 .956863 1 rgb
f
1529.66 1558.69 mo
1529.66 1558.69 1526.3 1559.2 1521.3 1559.38 cv
1511.36 1559.75 1494.92 1558.8 1485.73 1549.89 cv
1484.55 1530.23 1468.6 1088.54 1579.42 1064.18 cv
1579.44 1064.17 li
1583.04 1063.38 1586.78 1063.03 1590.65 1063.15 cv
1518.3 1131.24 1522.51 1501.49 1529.66 1558.69 cv
cp
f
1635.53 1030.73 mo
1635.53 1030.74 1597 1053.71 1580.89 1039.57 cv
1566.68 1027.09 1564.4 1012.06 1570.97 999.857 cv
1570.97 999.857 1589.09 1006.17 1630.06 1004.44 cv
1630.06 1004.44 1627.19 1022.91 1635.53 1030.73 cv
cp
f
1630.06 1005.24 mo
1629.16 1005.26 1628.96 1003.89 1629.85 1003.67 cv
1646.81 999.086 li
1652.32 1000.86 1629.87 1004.74 1630.06 1005.24 cv
cp
.756863 .384314 .337255 rgb
f
1635.53 1031.53 mo
1634.78 1031.56 1634.43 1030.48 1635.09 1030.07 cv
1635.57 1030.22 1651.64 1017.96 1651.76 1019.95 cv
1652.96 1021.18 1636.09 1031.08 1635.53 1031.53 cv
cp
f
1663.37 1010.37 mo
1659.95 1026.16 1640.66 1022.08 1643.93 1006.26 cv
1647.35 990.465 1666.63 994.542 1663.37 1010.37 cv
cp
.976471 .576471 .439216 rgb
f
1658.35 1013.63 mo
1657.83 1013.64 1657.43 1013.1 1657.59 1012.6 cv
1660.6 1004.2 1656.88 1000.67 1651.21 1003 cv
1645.64 1001.1 1665.36 995.961 1659.11 1013.07 cv
1659.01 1013.41 1658.69 1013.63 1658.35 1013.63 cv
cp
.756863 .384314 .337255 rgb
f
1650.92 1012.52 mo
1648.51 1012.18 1653.09 1004.78 1659.2 1004.28 cv
1660.23 1004.19 1660.33 1005.82 1659.3 1005.87 cv
1653.15 1006.51 1652.38 1012.31 1650.92 1012.52 cv
cp
f
1644.24 1111.3 mo
1640.26 1142.32 1669.44 1192.35 1623.79 1206.36 cv
1658.17 1214.61 li
1667.77 1177.43 li
1644.24 1111.3 li
cp
.819608 .878431 .94902 rgb
f
1529.66 1558.69 mo
1529.66 1558.69 1526.3 1559.2 1521.3 1559.38 cv
1514.53 1495.09 1516.43 1412.59 1517.95 1372.03 cv
1519.54 1330.15 1524.63 1243.63 1538.7 1167.4 cv
1552.77 1091.17 1579.42 1064.18 1579.42 1064.18 cv
1579.44 1064.17 li
1583.04 1063.38 1586.78 1063.03 1590.65 1063.15 cv
1518.3 1131.24 1522.51 1501.49 1529.66 1558.69 cv
cp
f
1355.03 1129.17 mo
1355.03 1129.17 1336.31 1125.49 1333 1115.69 cv
1329.7 1105.9 1333.1 1090.35 1338.52 1091.86 cv
1343.95 1093.36 1362.32 1107.32 1364 1110.52 cv
1364 1110.52 1362.35 1120.94 1355.03 1129.17 cv
cp
.976471 .576471 .439216 rgb
f
1704.95 1254.68 mo
1677.81 1268.08 1627.33 1261.67 1627.33 1261.67 cv
1626.82 1253.84 1626.31 1246.31 1625.83 1239.08 cv
1699.94 1217.04 li
1702.23 1229.58 1704.95 1254.68 1704.95 1254.68 cv
cp
.819608 .878431 .94902 rgb
f
1342.65 1127.08 mo
1351.37 1078.93 li
1351.6 1078.97 1351.83 1078.99 1352.06 1078.99 cv
1356.53 1079.11 1357.19 1072.16 1352.73 1071.46 cv
1334.75 1068.21 li
1329.91 1067.26 1328.54 1074.87 1333.39 1075.67 cv
1333.39 1075.67 li
1324.57 1124.36 li
1302.45 1150.55 li
1297.35 1156.59 1300.69 1165.88 1308.47 1167.29 cv
1342.9 1173.52 li
1350.68 1174.93 1357.06 1167.4 1354.4 1159.96 cv
1342.65 1127.08 li
cp
1 1 1 rgb
f
1342.5 1166.81 mo
1311.2 1161.14 li
1308.37 1160.63 1307.17 1157.26 1309.03 1155.07 cv
1317.89 1144.68 li
1342 1149.05 li
1346.65 1161.89 li
1347.63 1164.58 1345.32 1167.32 1342.5 1166.81 cv
cp
.807843 .290196 .74902 rgb
f
1326.58 1115.66 mo
1316.54 1112.25 1321.84 1100.66 1329.3 1109.08 cv
1329.13 1109.02 li
1334.45 1110.72 1331.52 1117.36 1326.58 1115.66 cv
cp
.976471 .576471 .439216 rgb
f
1326.77 1108.71 mo
1315.65 1102.25 1327.18 1093.41 1330.34 1102.26 cv
1330.29 1102.09 1330.71 1102.65 1330.88 1102.71 cv
1330.91 1102.73 1331.09 1102.84 1330.94 1102.76 cv
1335.87 1105.51 1331.03 1111.24 1326.77 1108.71 cv
cp
f
1326.73 1101.42 mo
1318.73 1095.55 1325.27 1090.38 1330.16 1094.2 cv
1338.16 1100.07 1331.62 1105.24 1326.73 1101.42 cv
cp
f
1327.69 1095.09 mo
1319.69 1089.22 1326.23 1084.05 1331.12 1087.87 cv
1339.12 1093.74 1332.58 1098.9 1327.69 1095.09 cv
cp
f
1653.15 1558.01 mo
1646.46 1557.45 1642.7 1556.76 1642.7 1556.76 cv
1642.7 1556.76 1630.92 1313.16 1627.34 1261.66 cv
1621.56 1208.54 1617.33 1085.77 1642.7 1064.72 cv
1652.09 1067.74 li
1643.56 1072.77 1631.67 1108.46 1631.99 1160.15 cv
1632.43 1229.44 1639.47 1313.54 1642.99 1372.03 cv
1646 1422.18 1651.61 1528.68 1653.15 1558.01 cv
cp
.819608 .878431 .94902 rgb
f
1349.43 1108.55 mo
1349.45 1087.06 1332.53 1090.25 1334.02 1083.88 cv
1336.35 1079.59 1342.47 1083.56 1345.87 1084.88 cv
1351.4 1087.88 1355.61 1093.15 1358.04 1098.88 cv
1366.38 1115.02 1351.11 1118.34 1349.43 1108.55 cv
cp
.976471 .576471 .439216 rgb
f
1542.05 1196.57 mo
1539.34 1199.93 1550.61 1204.58 1552.58 1208.07 cv
1545.09 1209.4 1537.16 1208.57 1537.13 1208.61 cv
1528.09 1205.95 1519.21 1202.81 1510.47 1199.26 cv
1507.7 1198.06 1505.61 1202.32 1508.32 1203.75 cv
1516.35 1208.24 1524.6 1212.39 1533.03 1216.1 cv
1533 1216.24 li
1523.68 1215.53 1514.37 1214.33 1505.22 1212.41 cv
1504.09 1212.18 1502.89 1212.3 1501.88 1212.86 cv
1493.12 1217.71 1529.95 1223.53 1533.01 1224.21 cv
1533 1224.28 li
1524.18 1225.09 1515.26 1224.89 1506.47 1223.79 cv
1505.17 1223.63 1503.83 1223.92 1502.82 1224.74 cv
1495.78 1230.4 1532.43 1233.11 1535.74 1232.73 cv
1535.79 1232.83 li
1529.01 1234.47 1522.04 1235.29 1515.07 1235.75 cv
1513.94 1235.82 1512.84 1236.25 1512.02 1237.03 cv
1505.27 1243.43 1537.05 1241.3 1540.13 1240.72 cv
1543.77 1240.93 1554.9 1245.04 1571.62 1239.21 cv
1576.83 1237.4 1579.16 1213.26 1573.88 1212.05 cv
1569.91 1211.14 1562.89 1207.1 1560.68 1205.94 cv
1557.31 1203.24 1545.77 1192.89 1542.05 1196.57 cv
cp
f
1583.1 1243.23 mo
1579.34 1241.99 1575.52 1240.64 1571.62 1239.21 cv
1570.98 1235.85 1567.05 1220 1573.88 1212.05 cv
1737.03 1204.92 1612.68 1150.17 1652.09 1067.74 cv
1769.1 1075.45 1827.63 1311.86 1583.1 1243.23 cv
cp
.913725 .956863 1 rgb
f
1583.11 1243.23 mo
1579.35 1241.99 1575.53 1240.64 1571.62 1239.21 cv
1570.98 1235.85 1567.05 1220 1573.88 1212.05 cv
1573.88 1212.05 1577.45 1211.87 1583.11 1211.42 cv
1583.11 1211.42 1575.06 1225.75 1583.11 1243.23 cv
cp
.819608 .878431 .94902 rgb
f
1611.54 991.496 mo
1611.29 991.496 1611.06 991.356 1610.95 991.119 cv
1608.15 984.983 1601.56 985.132 1601.52 985.14 cv
1601.17 985.133 1600.86 984.872 1600.85 984.516 cv
1600.84 984.159 1601.11 983.859 1601.47 983.847 cv
1601.55 983.841 1608.97 983.674 1612.13 990.581 cv
1612.27 990.907 1612.13 991.289 1611.81 991.438 cv
1611.54 991.496 li
cp
.756863 .384314 .337255 rgb
f
1585.04 984.067 mo
1584.84 984.067 1584.65 983.978 1584.52 983.809 cv
1584.31 983.524 1584.36 983.121 1584.65 982.907 cv
1584.8 982.794 1588.36 980.159 1594.23 982.234 cv
1594.57 982.354 1594.74 982.722 1594.63 983.059 cv
1594.51 983.396 1594.14 983.572 1593.8 983.453 cv
1588.62 981.624 1585.55 983.843 1585.43 983.938 cv
1585.31 984.025 1585.17 984.067 1585.04 984.067 cv
cp
f
1642.68 1064.72 mo
1636.78 1073.05 1586.32 1104.47 1590.65 1063.15 cv
1591.1 1063.03 1596.91 1061.55 1600.17 1061.54 cv
1599.95 1062.45 1596.2 1084.87 1631.29 1062.69 cv
1631.44 1062.59 1640.38 1063.22 1642.68 1064.72 cv
cp
.819608 .65098 .560784 rgb
f
1857.49 1476.28 mo
1863.35 1564.98 1874.37 1653.48 1886.5 1741.53 cv
1889.33 1762.38 1914.2 1766.36 1916.5 1743.61 cv
1918.57 1720.99 1917.93 1699.78 1919.73 1677.05 cv
1923.88 1610.77 1929.77 1544.39 1937.11 1478.38 cv
1942.15 1421.12 1855.49 1418.71 1857.49 1476.28 cv
cp
.976471 .576471 .439216 rgb
f
1921.45 1484.22 mo
1994.05 1747.24 li
1996.39 1756.03 2002.21 1759.2 2010.97 1756.85 cv
2018.8 1754.76 2023.85 1754.24 2023.17 1746.42 cv
1999.9 1470.44 li
1993.35 1413.56 1908.36 1428.42 1921.45 1484.22 cv
cp
f
1886.5 1741.53 mo
1852.68 1743.15 1842.83 1754.69 1840.06 1762.43 cv
1840.02 1762.55 li
1838.82 1765.93 1841.4 1769.47 1844.98 1769.48 cv
1918.57 1769.72 li
1919.82 1767.56 1920.51 1765.16 1920.81 1762.69 cv
1922.06 1752.68 1917.02 1741.63 1917.02 1741.63 cv
1917.02 1741.63 1901.78 1748.31 1886.5 1741.53 cv
cp
.113725 .247059 .439216 rgb
f
1840.06 1762.43 mo
1920.81 1762.69 li
1920.51 1765.16 1919.82 1767.56 1918.57 1769.72 cv
1844.98 1769.48 li
1841.4 1769.47 1838.82 1765.93 1840.02 1762.55 cv
1840.06 1762.43 li
cp
.223529 .356863 .588235 rgb
f
1987.04 1761.91 mo
1987.04 1768.52 li
2029.78 1768.52 li
2029.78 1761.91 li
2029.78 1750.07 2020.21 1740.48 2008.42 1740.48 cv
1996.61 1740.48 1987.04 1750.07 1987.04 1761.91 cv
cp
.113725 .247059 .439216 rgb
f
1987.04 1761.91 mo
1987.04 1768.52 li
2029.78 1768.52 li
2029.78 1761.91 li
1987.04 1761.91 li
cp
.223529 .356863 .588235 rgb
f
2005.03 1099.53 mo
2013.18 1113.65 2009.88 1130.81 1997.65 1137.87 cv
1985.43 1144.92 1968.91 1139.2 1960.76 1125.09 cv
1952.61 1110.98 1955.92 1093.81 1968.14 1086.76 cv
1980.37 1079.7 1996.88 1085.42 2005.03 1099.53 cv
cp
.0862745 .196078 .376471 rgb
f
1971.04 1114.3 mo
1971.04 1114.3 1999.84 1102.95 2002.58 1061.76 cv
2005.45 1018.53 1963.14 1009.84 1946.1 1022.13 cv
1971.04 1114.3 li
cp
f
1916.82 1146.24 mo
1916.82 1146.24 1848.32 1161.79 1821.12 1260.43 cv
1890.05 1276.12 li
1916.82 1146.24 li
cp
.913725 .956863 1 rgb
f
1889.64 1173.15 mo
1889.64 1173.15 1871.77 1193.06 1867.34 1205.26 cv
1862.91 1217.45 1875.72 1217.3 1875.72 1217.3 cv
1889.64 1173.15 li
cp
.819608 .878431 .94902 rgb
f
1954.16 1018.45 mo
1912.48 1006.71 1884.75 1067.28 1904.75 1098.84 cv
1954.16 1018.45 li
cp
.0862745 .196078 .376471 rgb
f
1999.84 1363.84 mo
1869.71 1363.84 li
1869.04 1312.38 1874.98 1260.37 1887.07 1210.4 cv
1894.28 1181.24 1898.43 1157.92 1926.22 1142.34 cv
1924.24 1125.07 1926.94 1100.17 1929.35 1089.91 cv
1930.61 1084.37 1934.58 1080.18 1939.03 1078.79 cv
1950.43 1074.83 1963.93 1084.54 1960.42 1097.39 cv
1959.38 1096.74 1956.08 1133.37 1958.36 1143.54 cv
1958.36 1143.54 1986.05 1225.73 1989.91 1268.78 cv
1990.21 1300.41 1993.26 1332.91 1999.84 1363.84 cv
cp
.976471 .576471 .439216 rgb
f
1960.73 1095.72 mo
1960.65 1096.28 1960.55 1096.84 1960.42 1097.39 cv
1959.67 1096.89 1957.59 1117.11 1957.57 1131.78 cv
1943.78 1138.05 1928.41 1135.29 1925.6 1134.71 cv
1926.44 1114.57 1924.05 1084.25 1939.03 1078.79 cv
1949.79 1074.18 1962.62 1083.99 1960.73 1095.72 cv
cp
.898039 .490196 .380392 rgb
f
1982.39 1082.21 mo
1980.07 1096.57 1975.22 1112.76 1963.88 1122.26 cv
1963.86 1122.26 li
1959.28 1126.07 1953.69 1128.49 1947.77 1129.66 cv
1914.26 1139.03 1874.96 1100.07 1901.15 1071.69 cv
1910.66 1062.9 1912.68 1047.32 1920.27 1038.57 cv
1931.3 1022.56 1955.51 1023.39 1968.58 1036.45 cv
1980.4 1048.25 1984.44 1064.52 1982.39 1082.21 cv
cp
.976471 .576471 .439216 rgb
f
1927.57 1073.35 mo
1926.26 1070.86 1930.21 1068.85 1931.45 1071.38 cv
1932.76 1073.88 1928.81 1075.89 1927.57 1073.35 cv
cp
.756863 .384314 .337255 rgb
f
1909.3 1070.28 mo
1907.98 1067.78 1911.93 1065.78 1913.17 1068.31 cv
1914.49 1070.81 1910.54 1072.81 1909.3 1070.28 cv
cp
f
1916.21 1089.19 mo
1912.23 1089.14 1906.04 1086.46 1911.07 1082.92 cv
1915.18 1080.7 1918.2 1072.18 1918.23 1072.1 cv
1922.47 1068.89 1916.43 1082.15 1911.86 1084.37 cv
1908.63 1086.34 1915.34 1088.25 1918.12 1087.28 cv
1918.55 1087.14 1919.02 1087.38 1919.15 1087.81 cv
1919.39 1089.29 1917.24 1089.08 1916.21 1089.19 cv
cp
f
1834.3 1636.09 mo
1834.3 1636.09 1931.32 1689.59 2041.53 1636.54 cv
2041.53 1636.54 2040.79 1626.01 2039.48 1608.69 cv
2033.74 1531.87 2017.26 1321.47 2007.6 1302.33 cv
1992.67 1306.21 1977.34 1308.85 1962.07 1310.6 cv
1928.57 1314.49 1888.34 1314.27 1856.72 1310.72 cv
1852.46 1332.84 1836.02 1539.3 1834.44 1624.06 cv
1834.34 1628.41 1834.3 1632.43 1834.3 1636.09 cv
cp
.807843 .290196 .74902 rgb
f
2006.21 1297.47 mo
2006.21 1297.47 1942.37 1354.05 1856.72 1310.71 cv
1856.83 1310.56 1862.25 1179.93 1919.67 1146.45 cv
1919.67 1146.45 1926.86 1171.44 1965.92 1146.45 cv
2014.12 1162.27 1988.39 1237.01 2006.21 1297.47 cv
cp
.227451 .447059 .666667 rgb
f
1856.71 1310.71 mo
1856.71 1310.71 1933.62 1341.92 2006.21 1297.47 cv
2014.12 1317.05 li
2014.12 1317.05 1954.84 1367.58 1854.27 1333.95 cv
1856.71 1310.71 li
cp
.647059 .137255 .635294 rgb
f
1962.08 1310.6 mo
1962.1 1310.71 1962.11 1310.84 1962.12 1310.96 cv
1965.16 1334.84 1968.86 1463.3 1968.86 1577.98 cv
1968.86 1577.98 1973.05 1578.47 1979.73 1578.74 cv
1997.68 1579.5 2033.62 1578.75 2054.22 1562.94 cv
2054.22 1562.94 2042.03 1340.95 2038.38 1321.47 cv
2028.46 1262.6 1998.11 1203.37 1970.25 1154.06 cv
1968.8 1151.5 1967.36 1148.96 1965.93 1146.45 cv
1933.04 1161 1950.71 1253.32 1962.08 1310.6 cv
cp
.913725 .956863 1 rgb
f
1982.39 1082.21 mo
1980.07 1096.57 1975.22 1112.76 1963.88 1122.26 cv
1963.86 1122.26 li
1970.15 1114.46 1974.07 1096.99 1974.07 1096.99 cv
1971.1 1089.22 li
1921.23 1073.13 1925.5 1033.08 1925.5 1033.08 cv
1932.94 1026.58 1942.99 1025.26 1952.54 1027.64 cv
1975.96 1033.69 1985.33 1058.98 1982.39 1082.21 cv
cp
.898039 .490196 .380392 rgb
f
1930.8 1029.51 mo
1930.8 1029.51 1926.79 1069.01 1971.42 1085.22 cv
1987.44 1076.38 li
2003.06 1045.73 1974.78 1000.72 1930.8 1029.51 cv
cp
.0862745 .196078 .376471 rgb
f
1828.33 1572.44 mo
1832.24 1575.72 1838.84 1577.35 1844.41 1578.15 cv
1844.41 1578.16 li
1849.83 1578.93 1854.27 1578.93 1854.27 1578.93 cv
1862.58 1521.94 1877.95 1271.17 1889.09 1214.7 cv
1889.13 1214.48 1889.18 1214.26 1889.22 1214.05 cv
1895.19 1187.94 1913.02 1164.51 1926.22 1142.34 cv
1925.77 1142.48 1925.34 1142.62 1924.9 1142.76 cv
1869.5 1161.11 1859.48 1252.09 1849.88 1370.61 cv
1842.95 1456.06 1828.33 1572.44 1828.33 1572.44 cv
cp
.913725 .956863 1 rgb
f
1967.22 1352.72 mo
1967.22 1352.72 2010.43 1360.48 2040.33 1339.98 cv
2040.33 1339.98 2040.33 1329.61 2038.38 1321.49 cv
2036.44 1313.36 1966.51 1346.54 1966.51 1346.54 cv
1967.22 1352.72 li
cp
.819608 .878431 .94902 rgb
f
1962.08 1310.6 mo
1962.1 1310.71 1962.11 1310.84 1962.12 1310.96 cv
1965.16 1334.84 1968.86 1463.3 1968.86 1577.98 cv
1968.86 1577.98 1973.05 1578.47 1979.73 1578.74 cv
1971.34 1317.56 li
1956.26 1254.97 1933.72 1187.72 1965.92 1146.45 cv
1965.92 1146.45 1958.47 1143.55 1958.36 1143.54 cv
1923.31 1191.94 1950.71 1253.32 1962.08 1310.6 cv
cp
f
1844.41 1578.15 mo
1844.41 1578.16 li
1849.83 1578.93 1854.27 1578.93 1854.27 1578.93 cv
1862.58 1521.94 1877.95 1271.17 1889.09 1214.7 cv
1889.13 1214.48 1889.18 1214.26 1889.22 1214.05 cv
1895.19 1187.94 1913.02 1164.51 1926.22 1142.34 cv
1925.77 1142.48 1925.34 1142.62 1924.9 1142.76 cv
1922.13 1143.71 1919.44 1144.87 1916.82 1146.24 cv
1914.19 1149.09 1911.03 1152.95 1908.23 1156.75 cv
1893.72 1176.28 1881.33 1201.85 1878.14 1228.22 cv
1872.32 1275.12 1850.26 1530.27 1844.41 1578.15 cv
cp
f
1956.79 1215.73 mo
1956.79 1215.73 1961.01 1232.14 1974.41 1250.96 cv
1987.8 1269.77 2009.54 1308.38 1961.9 1309.32 cv
1963.77 1323.68 li
2016.98 1317.32 li
2006.21 1243.91 li
1956.79 1215.73 li
cp
f
1981.46 1155.68 mo
2016.88 1181.87 2050.6 1230.64 2054.09 1273.92 cv
2057.75 1356.02 1981.33 1362.57 1923.09 1330.93 cv
1910.82 1324.69 1921.02 1305.83 1934.19 1309.32 cv
1943.79 1311.78 1950.57 1313.94 1960.03 1314.21 cv
2044 1316.55 1993.47 1248.91 1960.91 1218.48 cv
1960.91 1218.48 1957.78 1139.07 1981.46 1155.68 cv
cp
.976471 .576471 .439216 rgb
f
2040.75 1334.94 mo
2032.61 1339.74 2022.56 1343.36 2010.37 1345.5 cv
2010.37 1345.5 2010.23 1318.66 1991.88 1309.88 cv
1991.88 1309.88 2007.43 1280.93 1985.52 1254.35 cv
1971.86 1237.77 1956.18 1225.33 1953.45 1202.46 cv
1951.8 1188.66 1965.92 1146.45 1965.92 1146.45 cv
1980.21 1150.19 2018.48 1164.06 2043.84 1203.59 cv
2073.17 1249.32 2084.57 1309.13 2040.75 1334.94 cv
cp
.913725 .956863 1 rgb
f
1915.82 1362.12 mo
1821.66 1354.89 li
1792.72 1193.72 li
1886.88 1200.95 li
1915.82 1362.12 li
cp
.113725 .247059 .439216 rgb
f
1814.7 1298.52 mo
1810.57 1299.33 1802.37 1294.76 1808.64 1291.06 cv
1811.02 1289.78 1813.26 1290.92 1815.19 1291.7 cv
1814.99 1291.71 li
1821.36 1291.42 1820.33 1298.22 1814.7 1298.52 cv
cp
.976471 .576471 .439216 rgb
f
1812.42 1292.29 mo
1809.61 1291.97 1806.47 1290.92 1805.13 1288.23 cv
1803.33 1283.89 1812.27 1281.43 1813.86 1285.26 cv
1813.84 1285.18 1813.75 1285.18 1813.94 1285.27 cv
1814.11 1285.36 1814.46 1285.45 1814.69 1285.49 cv
1814.7 1285.49 1814.81 1285.5 1814.66 1285.49 cv
1821.08 1286.4 1817.44 1292.99 1812.42 1292.29 cv
cp
f
1809.79 1285.84 mo
1805.89 1284.39 li
1800.29 1281.77 1806.88 1276.32 1810.8 1278.18 cv
1814.7 1279.62 li
1820.31 1282.25 1813.71 1287.7 1809.79 1285.84 cv
cp
f
1808.54 1279.87 mo
1804.64 1278.43 li
1799.04 1275.81 1805.63 1270.35 1809.55 1272.21 cv
1813.45 1273.66 li
1819.05 1276.28 1812.46 1281.73 1808.54 1279.87 cv
cp
f
1935.34 1319.74 mo
1935.32 1318.81 1935.04 1317.96 1934.57 1317.24 cv
1938.92 1311.81 1933.68 1308.09 1929.29 1305.35 cv
1920.99 1299.95 1911.59 1296.2 1901.78 1294.8 cv
1897.88 1294.24 1893.93 1294.1 1890.03 1294.34 cv
1886.23 1294.48 1886.17 1300.44 1890.02 1300.61 cv
1894.19 1300.86 1898.29 1301.6 1902.25 1302.84 cv
1897.25 1302.31 1892.09 1302.08 1887.06 1302.24 cv
1883.35 1302.2 1882.9 1307.98 1886.62 1308.48 cv
1893.69 1309.49 1900.69 1311.3 1907.42 1313.65 cv
1900.78 1312.86 1894.19 1311.69 1887.66 1310.23 cv
1883.87 1309.32 1882.32 1315.23 1886.09 1316.3 cv
1893.23 1318.48 1900.47 1320.3 1907.81 1321.69 cv
1904.09 1321.47 1900.27 1321.06 1896.58 1320.6 cv
1892.85 1320.07 1891.69 1325.85 1895.41 1326.75 cv
1896.76 1327.11 1898.12 1327.49 1899.48 1327.84 cv
1909.14 1330.23 1919.01 1332.05 1928.99 1332.19 cv
1933.75 1332.72 1937.08 1326.93 1933.97 1323.21 cv
1934.84 1322.31 1935.37 1321.09 1935.34 1319.74 cv
cp
f
1952.94 1088.07 mo
1952.58 1088.07 1952.27 1087.8 1952.22 1087.43 cv
1952.18 1087.03 1952.46 1086.67 1952.86 1086.63 cv
1971.34 1084.5 li
1971.73 1084.45 1972.09 1084.74 1972.14 1085.14 cv
1972.18 1085.53 1971.9 1085.89 1971.5 1085.94 cv
1953.03 1088.06 li
1952.94 1088.07 li
cp
.756863 .384314 .337255 rgb
f
1959.47 1111.38 mo
1959.23 1111.38 1958.99 1111.25 1958.85 1111.02 cv
1958.64 1110.68 1958.76 1110.24 1959.1 1110.03 cv
1977.88 1098.82 li
1978.22 1098.62 1978.67 1098.73 1978.87 1099.07 cv
1979.08 1099.41 1978.97 1099.86 1978.62 1100.06 cv
1959.84 1111.27 li
1959.73 1111.34 1959.6 1111.38 1959.47 1111.38 cv
cp
f
1991.51 1089.47 mo
1987.98 1105.79 1968.04 1101.58 1971.42 1085.22 cv
1974.95 1068.9 1994.88 1073.11 1991.51 1089.47 cv
cp
.976471 .576471 .439216 rgb
f
1986.33 1092.84 mo
1985.79 1092.85 1985.37 1092.3 1985.54 1091.78 cv
1988.65 1083.09 1984.8 1079.45 1978.95 1081.86 cv
1977.96 1082.26 1977.35 1080.7 1978.35 1080.32 cv
1985.2 1077.52 1990.83 1081.86 1987.11 1092.26 cv
1987.01 1092.61 1986.68 1092.84 1986.33 1092.84 cv
cp
.756863 .384314 .337255 rgb
f
1978.65 1091.69 mo
1976.09 1091.49 1980.96 1083.6 1987.2 1083.18 cv
1987.64 1083.15 1988.05 1083.49 1988.08 1083.95 cv
1988.11 1084.4 1987.77 1084.79 1987.31 1084.82 cv
1980.93 1085.48 1980.16 1091.48 1978.65 1091.69 cv
cp
f
1982.52 1097 mo
1982.55 1099.39 1978.79 1099.39 1978.82 1097 cv
1978.79 1094.6 1982.55 1094.6 1982.52 1097 cv
cp
.956863 .831373 .745098 rgb
f
1896.68 1077.63 mo
1896.68 1077.63 1910.43 1089.36 1954.16 1085.22 cv
1954.16 1085.22 1952.9 1101.93 1960.91 1110.9 cv
1960.91 1110.9 1938.66 1128.26 1913.44 1124.21 cv
1913.44 1124.21 1895.93 1116.39 1892.49 1100.69 cv
1889.06 1085 1896.68 1077.63 1896.68 1077.63 cv
cp
.913725 .956863 1 rgb
f
1939.33 1069.32 mo
1939.09 1069.32 1938.85 1069.19 1938.71 1068.97 cv
1934 1061.2 1927.33 1060.64 1927.26 1060.63 cv
1926.86 1060.61 1926.56 1060.26 1926.59 1059.86 cv
1926.62 1059.46 1926.96 1059.17 1927.36 1059.19 cv
1927.66 1059.21 1934.83 1059.77 1939.95 1068.22 cv
1940.16 1068.56 1940.05 1069.01 1939.71 1069.21 cv
1939.59 1069.28 1939.46 1069.32 1939.33 1069.32 cv
cp
.756863 .384314 .337255 rgb
f
1910.05 1062.02 mo
1909.81 1062.02 1909.58 1061.9 1909.44 1061.68 cv
1909.23 1061.34 1909.33 1060.89 1909.67 1060.68 cv
1909.88 1060.55 1914.88 1057.49 1920.46 1058.74 cv
1920.85 1058.83 1921.1 1059.22 1921.01 1059.61 cv
1920.92 1060 1920.54 1060.24 1920.15 1060.16 cv
1915.14 1059.03 1910.48 1061.88 1910.44 1061.91 cv
1910.32 1061.99 1910.18 1062.02 1910.05 1062.02 cv
cp
f
1937.97 1310.31 mo
1937.97 1310.31 1940.3 1323.73 1930.31 1334.61 cv
1930.31 1334.61 1931.16 1337.25 1935.88 1337.14 cv
1935.88 1337.14 1944.26 1325.81 1943.33 1311.69 cv
1943.33 1311.69 1941.2 1309.06 1937.97 1310.31 cv
cp
.113725 .247059 .439216 rgb
f
1834.3 1636.09 mo
1834.3 1636.09 1931.32 1689.59 2041.53 1636.54 cv
2041.53 1636.54 2040.79 1626.01 2039.48 1608.69 cv
2029.77 1610.36 2017.88 1615.25 2004.02 1626.11 cv
1962.18 1658.89 1936.44 1631.17 1909.19 1626.11 cv
1884.36 1621.5 1876.13 1643.74 1834.44 1624.06 cv
1834.34 1628.41 1834.3 1632.43 1834.3 1636.09 cv
cp
.647059 .137255 .635294 rgb
f
432.071 1476.24 mo
432.071 1476.24 485.279 1481.4 523.793 1483.47 cv
523.793 1483.47 516.87 1369.04 472.906 1352.16 cv
428.942 1335.28 432.071 1476.24 432.071 1476.24 cv
cp
.913725 .956863 1 rgb
f
416.225 1002.26 mo
464.09 993.122 455.007 960.701 501.342 976.852 cv
501.344 976.853 542.859 943.645 548.095 1022.43 cv
552.317 1085.97 521.181 1116.58 472.781 1142.69 cv
415.355 1173.67 325.052 1139.93 328.806 1068.2 cv
331.416 1018.35 369.254 1011.23 416.225 1002.26 cv
cp
.113725 .247059 .439216 rgb
f
537.266 1100.69 mo
604.678 1147 654.454 1130.15 705.899 1071.51 cv
712.707 1060.01 729.525 1066.45 724.433 1079.37 cv
723.557 1081.51 721.864 1084.18 720.868 1086.25 cv
673.441 1173.13 589.501 1195.4 508.937 1135.13 cv
486.54 1116.51 514.629 1082.26 537.266 1100.69 cv
cp
.976471 .576471 .439216 rgb
f
688.675 1149.69 mo
666.351 1168.79 624.637 1190.19 574.171 1185.03 cv
565.302 1184.13 556.17 1182.4 546.813 1179.69 cv
536.962 1176.85 526.878 1172.92 516.63 1167.72 cv
516.068 1089.32 li
516.068 1089.32 531.596 1089.73 543.97 1097.8 cv
553.769 1104.19 579.138 1117.83 598.454 1120.48 cv
617.761 1123.12 649.68 1113.11 661.632 1103.51 cv
673.583 1093.92 681.266 1083.74 689.208 1089.07 cv
689.208 1089.07 695.965 1098.01 711.768 1101.32 cv
711.768 1101.32 719.793 1123.07 688.675 1149.69 cv
cp
.913725 .956863 1 rgb
f
517.448 1079.37 mo
516.066 1089.32 li
510.962 1105.92 488.889 1092.92 485.235 1086.33 cv
485.235 1086.33 487.233 1076.91 487.615 1072.48 cv
517.448 1079.37 li
cp
.976471 .576471 .439216 rgb
f
315.94 1704.84 mo
269.692 1648.11 li
271.91 1644.68 287.91 1636.3 292.513 1631.64 cv
295.819 1629.28 332.733 1591.69 336.664 1587.93 cv
363.216 1620.5 li
317.013 1649.41 li
311.533 1652.84 309.272 1659.67 311.59 1665.7 cv
316.131 1679.42 327.806 1689.78 325.041 1703.19 cv
323.714 1707.12 318.564 1708.06 315.94 1704.84 cv
cp
f
273.745 1641.94 mo
272.017 1643.73 270.587 1645.78 269.691 1648.11 cv
316.32 1705.31 li
318.587 1708.09 322.966 1707.87 324.84 1704.81 cv
329.203 1697.64 331.96 1682.84 311.846 1655.35 cv
311.846 1655.35 301.863 1648.56 292.512 1631.64 cv
292.512 1631.64 280.741 1634.66 273.745 1641.94 cv
cp
.113725 .247059 .439216 rgb
f
327.939 1687.26 mo
325.278 1687.94 323.45 1684.26 314.723 1686.8 cv
313.934 1687.04 313.097 1686.6 312.854 1685.81 cv
313.386 1680.2 333.349 1683.8 327.939 1687.26 cv
cp
.909804 .752941 .65098 rgb
f
574.171 1185.03 mo
565.302 1184.13 556.17 1182.4 546.813 1179.69 cv
534.87 1102.73 li
534.87 1102.73 563.005 1128.91 571.543 1157.22 cv
574.444 1166.83 574.873 1176.47 574.171 1185.03 cv
cp
.819608 .878431 .94902 rgb
f
324.522 1676.74 mo
324.128 1676.97 323.635 1677.02 323.185 1676.82 cv
323.115 1676.79 316.047 1673.85 308.589 1676.86 cv
306.805 1677.62 305.659 1674.78 307.47 1674.09 cv
316.117 1670.6 324.034 1673.93 324.367 1674.08 cv
325.484 1674.52 325.567 1676.18 324.522 1676.74 cv
cp
.909804 .752941 .65098 rgb
f
318.159 1664.83 mo
316.182 1665.54 310.907 1662.28 301.447 1665.61 cv
299.642 1666.3 298.584 1663.43 300.425 1662.8 cv
310.046 1659.7 321.654 1660.93 318.159 1664.83 cv
cp
f
324.906 1704.7 mo
273.745 1641.94 li
272.017 1643.73 270.587 1645.78 269.691 1648.11 cv
316.32 1705.31 li
318.615 1708.13 323.086 1707.85 324.906 1704.7 cv
cp
.223529 .356863 .588235 rgb
f
544.103 1716.27 mo
470.999 1715.47 li
469.792 1711.56 473.586 1693.93 472.955 1687.4 cv
472.938 1684.65 472.233 1669.62 471.981 1666.87 cv
477.453 1625.63 li
509.68 1625.98 li
502.303 1679.96 li
501.429 1686.37 505.229 1692.47 511.349 1694.56 cv
524.78 1699.83 540.115 1697.54 548.712 1708.13 cv
550.945 1711.69 548.305 1716.32 544.103 1716.27 cv
cp
.976471 .576471 .439216 rgb
f
468.854 1708.41 mo
469.125 1710.88 469.781 1713.29 470.997 1715.47 cv
544.814 1716.28 li
548.403 1716.32 551.039 1712.81 549.886 1709.42 cv
547.17 1701.48 537.566 1689.89 503.561 1687.74 cv
503.561 1687.74 491.947 1691.05 472.954 1687.4 cv
472.954 1687.4 467.739 1698.37 468.854 1708.41 cv
cp
.113725 .247059 .439216 rgb
f
528.185 1706.57 mo
527.148 1706.59 526.38 1705.46 526.807 1704.5 cv
530.104 1696.62 536.124 1694.25 536.379 1694.15 cv
538.178 1693.44 539.267 1696.27 537.45 1696.94 cv
537.223 1697.03 532.338 1699.03 529.565 1705.65 cv
529.325 1706.23 528.77 1706.57 528.185 1706.57 cv
cp
.909804 .752941 .65098 rgb
f
516.579 1705.04 mo
515.588 1705.06 514.832 1704.03 515.156 1703.09 cv
517.891 1693.17 530.877 1685.84 527.321 1692.77 cv
527.234 1692.82 520.462 1696.36 518.002 1704 cv
517.799 1704.64 517.211 1705.04 516.579 1705.04 cv
cp
f
503.373 1703.27 mo
502.363 1703.29 501.601 1702.22 501.967 1701.27 cv
505.201 1692.3 512.297 1687.63 512.598 1687.44 cv
514.208 1686.37 515.868 1688.92 514.222 1689.95 cv
514.126 1690.01 507.654 1694.31 504.779 1702.28 cv
504.56 1702.89 503.986 1703.27 503.373 1703.27 cv
cp
f
549.845 1709.3 mo
468.854 1708.41 li
469.125 1710.88 469.781 1713.29 470.997 1715.47 cv
544.814 1716.28 li
548.453 1716.32 551.101 1712.71 549.845 1709.3 cv
cp
.223529 .356863 .588235 rgb
f
488.38 1041.02 mo
488.391 1041.55 488.421 1042.09 488.482 1042.62 cv
489.24 1042.24 488.935 1061.52 487.304 1075.34 cv
499.591 1082.79 514.385 1081.92 517.101 1081.7 cv
519.473 1064.22 519.767 1048.08 518.389 1037.76 cv
515.144 1020.18 487.782 1023.18 488.38 1041.02 cv
cp
.898039 .490196 .380392 rgb
f
468.498 1030.45 mo
470.891 1044.05 475.713 1059.34 486.608 1068.2 cv
486.626 1068.2 li
491.027 1071.75 496.36 1073.97 501.992 1074.99 cv
533.621 1083.64 570.827 1045.61 545.452 1019.36 cv
536.3 1011.15 534.172 996.396 526.854 988.202 cv
516.164 973.164 493.202 974.284 480.974 986.85 cv
469.924 998.21 466.311 1013.7 468.498 1030.45 cv
cp
.976471 .576471 .439216 rgb
f
520.396 1021.3 mo
521.609 1018.91 517.832 1017.06 516.69 1019.48 cv
515.476 1021.87 519.253 1023.72 520.396 1021.3 cv
cp
.756863 .384314 .337255 rgb
f
537.7 1018.13 mo
538.913 1015.75 535.136 1013.9 533.994 1016.32 cv
532.781 1018.7 536.558 1020.55 537.7 1018.13 cv
cp
f
505.816 1676.9 mo
480.925 1681.72 462.914 1666.99 462.914 1666.99 cv
464.393 1661.87 465.769 1656.84 467.094 1651.72 cv
467.107 1651.72 li
512.896 1477.34 464.946 1385.63 464.946 1385.63 cv
454.812 1475.77 430.75 1564.11 343.775 1641.94 cv
340.117 1645.22 336.342 1648.48 332.452 1651.72 cv
312.853 1647.36 294.662 1615.03 294.662 1615.03 cv
297.722 1611.44 300.655 1607.83 303.458 1604.22 cv
399.66 1480.4 351.016 1347.77 394.979 1265.78 cv
418.353 1222.17 510.954 1249.46 546.198 1290.23 cv
605.33 1475.95 536.848 1617.91 505.816 1676.9 cv
cp
.576471 .345098 .878431 rgb
f
532.593 1036.08 mo
531.323 1036.11 528.534 1036.62 528.583 1034.9 cv
528.709 1034.49 529.149 1034.25 529.557 1034.38 cv
532.189 1035.18 535.876 1033.81 536.365 1032.62 cv
536.537 1032.2 535.969 1031.8 535.462 1031.53 cv
531.054 1029.4 525.208 1017.17 529.248 1019.98 cv
529.278 1020.06 532.261 1028.1 536.186 1030.15 cv
540.62 1033.12 536.077 1035.53 532.593 1036.08 cv
cp
.756863 .384314 .337255 rgb
f
440.168 1288.72 mo
436.311 1288.81 li
436.337 1289.99 438.718 1407.52 417.275 1479 cv
398.325 1542.17 336.835 1612.72 322.478 1628.6 cv
310.555 1617.43 303.458 1604.22 303.458 1604.22 cv
300.655 1607.83 297.722 1611.44 294.662 1615.03 cv
294.662 1615.03 312.853 1647.36 332.452 1651.72 cv
336.342 1648.48 340.117 1645.22 343.775 1641.94 cv
336.913 1639.71 330.715 1635.73 325.352 1631.18 cv
339.904 1615.07 401.805 1544 420.971 1480.11 cv
442.59 1408.04 440.194 1289.91 440.168 1288.72 cv
cp
.462745 .25098 .8 rgb
f
468.498 1030.45 mo
470.891 1044.05 475.713 1059.34 486.608 1068.2 cv
486.626 1068.2 li
480.553 1060.88 476.593 1044.36 476.593 1044.36 cv
479.307 1036.95 li
526.415 1021 521.697 982.821 521.697 982.821 cv
491.184 961.602 461.828 999.336 468.498 1030.45 cv
cp
.898039 .490196 .380392 rgb
f
516.733 979.753 mo
516.733 979.753 521.08 1017.17 478.947 1033.16 cv
463.625 1024.99 li
448.379 996.117 474.62 953.044 516.733 979.753 cv
cp
.113725 .247059 .439216 rgb
f
467.133 968.926 mo
477.466 1004.47 518.864 993.105 509.603 957.271 cv
499.27 921.732 457.872 933.093 467.133 968.926 cv
cp
f
546.968 1391.84 mo
538.821 1329.01 517.153 1295.63 516.935 1295.3 cv
514.092 1297.18 li
514.306 1297.5 535.609 1330.39 543.621 1392.52 cv
550.885 1448.85 548.366 1541.21 496.143 1663.41 cv
489.326 1662.58 481.466 1660.77 474.601 1657.05 cv
505.781 1563.64 511.227 1409.82 464.946 1385.63 cv
464.946 1385.63 512.896 1477.34 467.106 1651.73 cv
467.093 1651.73 li
465.792 1656.75 464.399 1661.83 462.916 1667 cv
462.916 1667 480.925 1681.72 505.818 1676.9 cv
505.818 1676.9 508.303 1672.03 512.701 1663.55 cv
512.701 1663.55 507.364 1664.39 499.694 1663.77 cv
522.294 1610.7 537.477 1558.9 544.841 1509.67 cv
551.027 1468.31 551.744 1428.67 546.968 1391.84 cv
cp
.462745 .25098 .8 rgb
f
553.863 1200.01 mo
547.394 1218.98 537.581 1238.87 549.715 1276.44 cv
551.072 1286.44 546.192 1290.23 546.192 1290.23 cv
499.354 1305.87 432.609 1291.64 392.561 1272.45 cv
369.618 1253.77 400.946 1218.26 402.779 1206.09 cv
422.314 1076.25 464.933 1081.84 486.133 1081.84 cv
493.117 1089.94 510.171 1103.45 516.068 1089.32 cv
530.502 1095.52 537.678 1127.65 545.651 1140.18 cv
553.895 1153.22 557.425 1163.72 558.222 1172.97 cv
559.084 1182.86 556.821 1191.34 553.863 1200.01 cv
cp
.227451 .447059 .666667 rgb
f
529.702 1041.88 mo
531.078 1041.88 532.011 1041.49 532.09 1041.46 cv
532.573 1041.25 532.794 1040.69 532.585 1040.21 cv
532.377 1039.73 531.822 1039.51 531.339 1039.71 cv
531.204 1039.77 528.349 1040.89 525.402 1038.09 cv
525.021 1037.72 524.421 1037.74 524.056 1038.12 cv
523.694 1038.5 523.708 1039.1 524.088 1039.46 cv
526.131 1041.41 528.185 1041.88 529.702 1041.88 cv
cp
.756863 .384314 .337255 rgb
f
581.725 1491.85 mo
567.369 1497.34 550.161 1491.85 550.161 1491.85 cv
550.161 1491.85 562.31 1427.29 548.475 1354.69 cv
542.739 1324.56 539.639 1300.54 538.201 1278.53 cv
536.829 1257.7 536.945 1238.68 537.714 1217.96 cv
538.086 1207.78 538.615 1197.21 539.21 1185.81 cv
542.276 1126.66 516.068 1089.32 516.068 1089.32 cv
535.069 1091.1 566.526 1149.58 567.187 1169.07 cv
567.84 1188.55 554.715 1226.39 564.228 1283.21 cv
573.749 1340.02 581.725 1491.85 581.725 1491.85 cv
cp
.913725 .956863 1 rgb
f
510.405 1013.96 mo
510.525 1013.96 510.646 1013.94 510.762 1013.9 cv
519.571 1010.33 li
520.059 1010.13 520.294 1009.58 520.097 1009.09 cv
519.9 1008.6 519.342 1008.37 518.858 1008.57 cv
510.049 1012.13 li
509.561 1012.33 509.326 1012.88 509.523 1013.37 cv
509.673 1013.74 510.03 1013.96 510.405 1013.96 cv
cp
.756863 .384314 .337255 rgb
f
489.702 1195.86 mo
489.702 1195.86 li
488.553 1204.75 487.082 1214.14 485.239 1224.03 cv
482.156 1240.51 479.66 1258.07 477.577 1276.06 cv
467.849 1360.17 467.262 1453.74 459.485 1490.59 cv
459.485 1490.59 394.96 1497.34 351.601 1479.62 cv
351.601 1479.62 355.998 1327.06 379.859 1252.55 cv
386.513 1231.78 393.497 1211.2 400.456 1192.01 cv
411.878 1160.55 423.267 1132.87 433.111 1114.35 cv
438.797 1103.66 443.971 1096.02 448.352 1092.46 cv
464.956 1078.95 483.04 1078.58 486.131 1081.84 cv
486.131 1081.84 499.38 1120.76 489.702 1195.86 cv
cp
.913725 .956863 1 rgb
f
482.942 1080.46 mo
482.942 1080.46 490.532 1109.67 489.702 1138.91 cv
488.872 1168.15 487.146 1199.92 479.673 1234.86 cv
472.201 1269.8 466.645 1293.62 461.58 1354.68 cv
456.516 1415.75 451.157 1491.23 451.157 1491.23 cv
451.157 1491.23 460.736 1490.59 468.614 1489.47 cv
468.614 1489.47 475.54 1378.47 479.041 1350.76 cv
482.542 1323.04 483.906 1294.99 489.765 1257.74 cv
495.625 1220.48 503.943 1153.01 498.157 1120.46 cv
492.372 1087.9 486.454 1080.14 486.454 1080.14 cv
486.454 1080.14 484.328 1079.29 482.942 1080.46 cv
cp
.819608 .878431 .94902 rgb
f
516.068 1089.32 mo
516.068 1089.32 537.398 1128.8 534.87 1185.83 cv
532.343 1242.85 531.411 1271.44 539.993 1339.71 cv
547.605 1400.27 550.073 1444.22 543.697 1491.23 cv
543.697 1491.23 549.658 1492.4 556.095 1493.25 cv
556.095 1493.25 561.417 1437.08 556.095 1390.96 cv
550.772 1344.84 542.894 1294.48 543.175 1274.5 cv
543.457 1254.53 542.331 1209.79 544.301 1182.22 cv
546.271 1154.64 541.47 1125.4 521.934 1090 cv
521.934 1090 518.627 1088.7 516.068 1089.32 cv
cp
f
527.891 1009.32 mo
535.847 1009.32 li
536.373 1009.32 536.799 1008.89 536.799 1008.37 cv
536.799 1007.84 536.373 1007.42 535.847 1007.42 cv
527.891 1007.42 li
527.365 1007.42 526.939 1007.84 526.939 1008.37 cv
526.939 1008.89 527.365 1009.32 527.891 1009.32 cv
cp
.756863 .384314 .337255 rgb
f
538.201 1278.53 mo
536.829 1257.7 536.945 1238.68 537.714 1217.96 cv
538.193 1218.11 555.434 1223.91 557.484 1235.62 cv
559.566 1247.5 568.526 1271.15 538.201 1278.53 cv
cp
.819608 .878431 .94902 rgb
f
489.702 1195.86 mo
489.702 1195.86 li
488.553 1204.75 487.082 1214.14 485.239 1224.03 cv
482.156 1240.51 479.66 1258.07 477.577 1276.06 cv
416.242 1264.1 400.456 1192.01 400.456 1192.01 cv
411.878 1160.55 423.267 1132.87 433.111 1114.35 cv
482.222 1095.59 li
487.818 1119.26 484.652 1136.07 481.891 1161.82 cv
479.139 1187.57 489.694 1195.84 489.694 1195.84 cv
489.702 1195.86 li
cp
f
434.056 1108.43 mo
426.368 1143.46 420.657 1181.98 435.204 1216.33 cv
460.285 1266.45 525.442 1267.91 573.151 1256.36 cv
580.706 1255 589.846 1252.25 587.547 1242.54 cv
584.348 1231.71 571.686 1236.62 563.456 1235.85 cv
475.451 1233.05 451.156 1206.25 476.211 1125.1 cv
486.071 1090.95 444.214 1074.39 434.056 1108.43 cv
cp
.976471 .576471 .439216 rgb
f
575.696 1256.21 mo
575.696 1256.21 570.371 1248.25 575.908 1235.35 cv
575.908 1235.35 572.719 1234.02 569.808 1235.73 cv
569.808 1235.73 563.781 1245.47 569.991 1257.61 cv
569.991 1257.61 572.698 1258.36 575.696 1256.21 cv
cp
.0627451 .196078 .356863 rgb
f
479.675 1081.85 mo
479.675 1081.85 487.304 1106.53 479.673 1141.98 cv
476.431 1157.05 475.295 1175.16 481.116 1189.41 cv
486.936 1203.66 497.327 1216.53 515.942 1219.84 cv
532.966 1222.86 550.618 1226.53 552.554 1235.35 cv
552.554 1235.35 550.262 1249.07 556.326 1259.74 cv
556.326 1259.74 549.346 1281.79 491.709 1274.64 cv
434.071 1267.49 406.967 1204.98 403.717 1178.05 cv
398.698 1136.47 421.423 1096.95 452.619 1084.95 cv
466.187 1079.73 479.675 1081.85 479.675 1081.85 cv
cp
.913725 .956863 1 rgb
f
560.181 1334.44 mo
539.207 1320.28 li
771.025 976.797 li
791.998 990.951 li
560.181 1334.44 li
.921569 .337255 .282353 rgb
f
560.181 1334.44 mo
539.207 1320.28 li
660.546 1140.49 li
681.519 1154.65 li
560.181 1334.44 li
cp
.807843 .223529 .196078 rgb
f
751.482 956.757 mo
729.732 931.073 717.49 899.196 715.746 866.497 cv
715.755 866.501 li
728.907 872.677 li
771.114 892.512 li
771.056 894.292 770.998 896.074 770.94 897.854 cv
762.855 916.227 756.327 935.862 751.482 956.757 cv
.807843 .870588 .980392 rgb
f
770.94 897.854 mo
770.998 896.074 771.056 894.292 771.114 892.512 cv
772.953 893.376 li
772.268 894.868 771.604 896.345 770.94 897.854 cv
.984314 .85098 .85098 rgb
f
867.517 1010.63 mo
838.638 1010.63 809.452 1002.42 783.66 985.324 cv
781.512 983.874 li
770.072 976.014 760.039 966.863 751.482 956.757 cv
756.327 935.862 762.855 916.227 770.94 897.854 cv
771.604 896.345 772.268 894.868 772.953 893.376 cv
916.917 961.032 li
917.878 965.465 918.482 969.693 918.596 973.547 cv
919.174 993.22 895.036 998.146 871.999 1010.56 cv
870.505 1010.61 869.014 1010.63 867.517 1010.63 cv
f
871.999 1010.56 mo
895.036 998.146 919.174 993.22 918.596 973.547 cv
918.482 969.693 917.878 965.465 916.917 961.032 cv
945.276 974.36 li
958.484 980.566 li
958.489 980.569 li
933.213 999.382 902.886 1009.66 871.999 1010.56 cv
.972549 .772549 .772549 rgb
f
772.807 812.54 mo
741.955 798.042 li
730.509 792.663 li
733.845 785.736 737.753 778.971 742.238 772.436 cv
753.86 777.897 li
772.731 786.764 li
772.827 795.354 772.847 803.951 772.807 812.54 cv
.807843 .870588 .980392 rgb
f
811.615 830.778 mo
772.807 812.54 li
772.847 803.951 772.827 795.354 772.731 786.764 cv
827.611 812.554 li
822.032 818.4 816.707 824.464 811.615 830.778 cv
.984314 .85098 .85098 rgb
f
863.223 855.031 mo
811.615 830.778 li
816.707 824.464 822.032 818.4 827.611 812.554 cv
856.221 825.999 li
857.257 834.908 859.355 844.825 863.223 855.031 cv
f
1005.87 922.068 mo
994.405 916.68 li
863.223 855.031 li
859.355 844.825 857.257 834.908 856.221 825.999 cv
1002.35 894.669 li
1013.99 900.138 li
1014 900.142 li
1011.88 907.577 1009.18 914.903 1005.87 922.068 cv
.972549 .772549 .772549 rgb
f
860.518 777.146 mo
788.831 743.458 li
788.825 743.461 li
775.698 737.292 li
775.694 737.29 li
802.407 717.019 834.905 706.384 867.789 706.384 cv
874.32 706.384 880.862 706.803 887.38 707.651 cv
874.781 732.815 866.26 756.786 860.518 777.146 cv
.984314 .85098 .85098 rgb
f
865.089 779.294 mo
860.518 777.146 li
866.26 756.786 874.781 732.815 887.38 707.651 cv
906.974 710.199 926.337 716.614 944.279 727.101 cv
913.305 738.63 885.544 755.367 865.089 779.294 cv
.972549 .772549 .772549 rgb
f
1019.63 851.915 mo
1019.62 851.914 li
1006.46 845.729 li
865.089 779.294 li
885.544 755.367 913.305 738.63 944.279 727.101 cv
947.499 728.983 950.671 730.995 953.794 733.141 cv
994.723 761.263 1017.59 805.854 1019.63 851.915 cv
f
783.66 985.324 mo
782.94 984.847 782.226 984.365 781.512 983.874 cv
781.512 983.874 li
783.66 985.324 li
.952941 .603922 .568627 rgb
f
1025.56 905.574 mo
1014 900.142 li
1018.5 884.314 1020.34 868.024 1019.63 851.915 cv
1032.35 857.896 li
1032.44 873.874 1030.21 889.947 1025.56 905.574 cv
.972549 .772549 .772549 rgb
f
769.884 741.929 mo
765.183 740.439 760.476 738.964 755.784 737.518 cv
758.114 735.363 760.497 733.286 762.93 731.286 cv
771.167 735.16 li
771.249 737 771.328 738.834 771.406 740.668 cv
770.899 741.082 770.386 741.508 769.884 741.929 cv
1 1 1 rgb
f
742.238 772.436 mo
730.644 766.988 li
731.044 766.394 731.45 765.798 731.858 765.202 cv
738.928 754.907 746.974 745.664 755.784 737.518 cv
760.476 738.964 765.183 740.439 769.884 741.929 cv
759.583 750.577 750.274 760.74 742.286 772.366 cv
742.268 772.391 742.255 772.41 742.238 772.436 cv
.807843 .870588 .980392 rgb
f
771.406 740.668 mo
771.328 738.834 771.249 737 771.167 735.16 cv
775.694 737.29 li
774.245 738.389 772.819 739.513 771.406 740.668 cv
.984314 .85098 .85098 rgb
f
771.486 742.437 mo
770.95 742.267 770.42 742.099 769.884 741.929 cv
770.386 741.508 770.899 741.082 771.406 740.668 cv
771.413 740.853 771.421 741.037 771.429 741.222 cv
771.448 741.628 771.467 742.031 771.486 742.437 cv
1 1 1 rgb
f
772.731 786.764 mo
753.86 777.897 li
742.238 772.436 li
742.255 772.41 742.268 772.391 742.286 772.366 cv
750.274 760.74 759.583 750.577 769.884 741.929 cv
770.42 742.099 770.95 742.267 771.486 742.437 cv
772.175 757.203 772.565 771.982 772.731 786.764 cv
.886274 .921569 .988235 rgb
f
827.611 812.554 mo
772.731 786.764 li
772.565 771.982 772.175 757.203 771.486 742.437 cv
771.467 742.031 771.448 741.628 771.429 741.222 cv
771.421 741.037 771.413 740.853 771.406 740.668 cv
772.819 739.513 774.245 738.389 775.694 737.29 cv
775.698 737.292 li
788.825 743.461 li
788.831 743.458 li
860.518 777.146 li
859.819 779.624 859.162 782.046 858.543 784.413 cv
847.569 793.082 837.221 802.483 827.611 812.554 cv
.992157 .909804 .909804 rgb
f
858.543 784.413 mo
859.162 782.046 859.819 779.624 860.518 777.146 cv
865.089 779.294 li
865.018 779.378 864.947 779.46 864.876 779.544 cv
862.734 781.147 860.637 782.759 858.543 784.413 cv
.984314 .862745 .862745 rgb
f
856.221 825.999 mo
827.611 812.554 li
837.221 802.483 847.569 793.082 858.543 784.413 cv
860.637 782.759 862.734 781.147 864.876 779.544 cv
862.23 782.654 859.704 785.888 857.313 789.243 cv
857.313 789.243 853.749 804.754 856.221 825.999 cv
.992157 .909804 .909804 rgb
f
1014 900.142 mo
1013.99 900.138 li
1002.35 894.669 li
856.221 825.999 li
853.749 804.754 857.313 789.243 857.313 789.243 cv
859.704 785.888 862.23 782.654 864.876 779.544 cv
864.947 779.46 865.018 779.378 865.089 779.294 cv
1006.46 845.729 li
1019.62 851.914 li
1019.63 851.915 li
1020.34 868.024 1018.5 884.314 1014 900.142 cv
.984314 .862745 .862745 rgb
f
971.314 986.595 mo
967.38 984.747 li
969.001 979.545 969.978 974.722 970.557 970.571 cv
973.359 967.994 976.069 965.306 978.698 962.491 cv
981.813 965.357 984.786 968.341 987.595 971.49 cv
982.468 976.94 977.024 981.978 971.314 986.595 cv
.984314 .85098 .85098 rgb
f
967.38 984.747 mo
958.489 980.569 li
962.654 977.469 966.687 974.131 970.557 970.571 cv
969.978 974.722 969.001 979.545 967.38 984.747 cv
987.595 971.49 mo
984.786 968.341 981.813 965.357 978.698 962.491 cv
983.834 956.992 988.629 951.039 993.019 944.649 cv
998.017 937.376 1002.3 929.819 1005.87 922.068 cv
1005.87 922.069 li
1017.31 927.445 li
1013.46 935.815 1008.84 943.972 1003.44 951.818 cv
998.597 958.874 993.291 965.436 987.595 971.49 cv
.972549 .772549 .772549 rgb
f
715.746 866.497 mo
702.863 860.443 li
702.511 835.089 708.024 810.157 719.046 787.276 cv
730.509 792.663 li
719.191 816.164 714.416 841.569 715.746 866.497 cv
.807843 .870588 .980392 rgb
f
771.114 892.512 mo
728.907 872.677 li
715.755 866.501 li
715.746 866.497 li
714.416 841.569 719.191 816.164 730.509 792.663 cv
741.955 798.042 li
772.807 812.54 li
772.682 839.236 771.969 865.91 771.114 892.512 cv
.886274 .921569 .988235 rgb
f
772.953 893.376 mo
771.114 892.512 li
771.969 865.91 772.682 839.236 772.807 812.54 cv
811.615 830.778 li
796.447 849.583 783.467 870.478 772.953 893.376 cv
.992157 .909804 .909804 rgb
f
970.557 970.571 mo
971.779 961.806 971.227 956.039 971.227 956.039 cv
973.796 958.132 976.29 960.277 978.698 962.491 cv
976.069 965.306 973.359 967.994 970.557 970.571 cv
916.917 961.032 mo
772.953 893.376 li
783.467 870.478 796.447 849.583 811.615 830.778 cv
863.223 855.031 li
868.399 868.691 876.746 882.867 889.961 895.831 cv
889.951 895.832 li
889.951 895.832 910.758 932.618 916.917 961.032 cv
f
958.489 980.569 mo
958.484 980.566 li
945.276 974.36 li
916.917 961.032 li
910.758 932.618 889.951 895.832 889.951 895.832 cv
889.961 895.831 li
876.746 882.867 868.399 868.691 863.223 855.031 cv
994.405 916.68 li
1005.87 922.068 li
1002.3 929.819 998.017 937.376 993.019 944.649 cv
988.629 951.039 983.834 956.992 978.698 962.491 cv
976.29 960.277 973.796 958.132 971.227 956.039 cv
971.227 956.039 971.779 961.806 970.557 970.571 cv
966.687 974.131 962.654 977.469 958.489 980.569 cv
.984314 .862745 .862745 rgb
f
1006.46 845.728 mo
1011.79 895.105 986.768 947.441 945.276 974.359 cv
829.324 1052.6 680.493 925.366 741.958 798.039 cv
802.432 671.694 994.212 706.38 1006.46 845.728 cv
cp
960.955 722.714 mo
841.503 639.049 677.436 747.706 705.655 888.552 cv
723.787 1008.85 881.056 1065.1 971.315 986.59 cv
1055.34 921.147 1051.88 782.963 960.955 722.714 cv
cp
.807843 .223529 .196078 rgb
f
605.489 1222.07 mo
598.557 1232.34 li
605.2 1234.37 612.225 1234.42 612.254 1234.45 cv
618.068 1233.79 628.147 1233.73 628.147 1233.73 cv
638.928 1239.73 618.132 1240.34 615.145 1241.69 cv
615.155 1241.82 li
615.155 1241.82 614.438 1242.17 623.411 1241.32 cv
635.584 1247.72 617.657 1248.63 614.271 1249.06 cv
614.252 1249.12 li
617.345 1249.74 li
629.038 1257.27 614.235 1257.18 610.851 1256.48 cv
610.797 1256.57 li
611.946 1257.74 li
617.258 1263.02 608.424 1264.05 605.392 1263.08 cv
602.965 1263.45 590.676 1260.55 576.872 1253.79 cv
572.348 1251.57 575.193 1237.77 579.265 1234.96 cv
583.083 1232.32 588.456 1228.9 590.543 1227.97 cv
592.89 1226.91 598.881 1220.68 605.489 1222.07 cv
cp
.976471 .576471 .439216 rgb
f
729.078 1079.86 mo
738.746 1085.25 744.196 1072.13 732.114 1072.86 cv
732.285 1072.95 li
727.009 1070.12 724.073 1077.34 729.078 1079.86 cv
cp
f
734.291 1074.53 mo
746.314 1078.55 746.904 1063.13 736.586 1066.96 cv
736.828 1066.94 735.528 1066.89 735.755 1066.87 cv
729.959 1065.14 729.164 1073.14 734.291 1074.53 cv
cp
f
739.929 1069.12 mo
744.153 1069.2 li
750.055 1069.09 747.837 1060.85 742.925 1061.08 cv
738.701 1061 li
732.799 1061.11 735.016 1069.35 739.929 1069.12 cv
cp
f
744.089 1063.65 mo
748.313 1063.73 li
754.215 1063.63 751.997 1055.38 747.085 1055.62 cv
742.861 1055.54 li
736.959 1055.64 739.176 1063.89 744.089 1063.65 cv
cp
f
705.899 1071.51 mo
705.899 1071.51 704.287 1052.61 723.374 1047.4 cv
733.638 1044.6 731.951 1052.34 725.378 1054.5 cv
718.805 1056.66 709.561 1067.87 709.561 1067.87 cv
705.899 1071.51 li
cp
f
477.469 1033.29 mo
477.04 1033.29 476.677 1032.96 476.646 1032.52 cv
476.612 1032.07 476.954 1031.67 477.409 1031.64 cv
492.216 1030.55 li
492.672 1030.51 493.067 1030.85 493.101 1031.31 cv
493.134 1031.76 492.792 1032.16 492.337 1032.19 cv
477.53 1033.28 li
477.469 1033.29 li
cp
.756863 .384314 .337255 rgb
f
487.303 1057.31 mo
487.107 1057.31 486.909 1057.24 486.751 1057.1 cv
473.365 1045.07 li
473.026 1044.77 472.998 1044.25 473.303 1043.91 cv
473.608 1043.57 474.13 1043.54 474.47 1043.84 cv
487.856 1055.87 li
488.196 1056.17 488.224 1056.69 487.919 1057.03 cv
487.755 1057.22 487.53 1057.31 487.303 1057.31 cv
cp
f
459.94 1037.46 mo
463.24 1052.83 482.592 1048.45 478.946 1033.16 cv
475.647 1017.79 456.294 1022.17 459.94 1037.46 cv
cp
.976471 .576471 .439216 rgb
f
464.994 1040.59 mo
461.739 1037.27 462.907 1030.48 464.569 1029.29 cv
467.622 1026.8 473.15 1028.05 472.762 1029.61 cv
471.802 1031.17 468.627 1027.92 465.645 1030.43 cv
462.587 1032.75 466.817 1039.26 464.994 1040.59 cv
cp
.756863 .384314 .337255 rgb
f
472.268 1039.39 mo
470.67 1039.33 470.002 1033.53 463.86 1033 cv
463.429 1032.98 463.098 1032.61 463.12 1032.18 cv
467.379 1028.88 475.188 1039.67 472.268 1039.39 cv
cp
f
468.577 1044.48 mo
468.577 1046.76 472.149 1046.71 472.083 1044.43 cv
472.083 1042.16 468.511 1042.21 468.577 1044.48 cv
cp
.956863 .831373 .745098 rgb
f
486.13 1056.88 mo
486.13 1056.89 524.659 1079.86 540.769 1065.71 cv
554.984 1053.23 557.256 1038.2 550.692 1026 cv
550.692 1026 532.565 1032.32 491.603 1030.59 cv
491.603 1030.59 494.466 1049.06 486.13 1056.88 cv
cp
.913725 .956863 1 rgb
f
2567.81 1346.57 mo
2567.81 1706.78 li
2567.81 1724.87 2633.69 1739.54 2714.96 1739.54 cv
2796.23 1739.54 2862.11 1724.87 2862.11 1706.78 cv
2862.11 1346.57 li
2567.81 1346.57 li
cp
.227451 .447059 .666667 rgb
f
2862.11 1346.57 mo
2862.11 1364.66 2796.23 1379.32 2714.96 1379.32 cv
2633.69 1379.32 2567.81 1364.66 2567.81 1346.57 cv
2567.81 1328.48 2633.69 1313.82 2714.96 1313.82 cv
2796.23 1313.82 2862.11 1328.48 2862.11 1346.57 cv
cp
.137255 .396078 .607843 rgb
f
2602.79 1251.98 mo
2602.79 1333.26 li
2602.79 1347.05 2653.01 1358.22 2714.96 1358.22 cv
2776.91 1358.22 2827.13 1347.05 2827.13 1333.26 cv
2827.13 1251.98 li
2602.79 1251.98 li
cp
.227451 .447059 .666667 rgb
f
2827.13 1251.46 mo
2827.13 1265.24 2776.91 1276.42 2714.96 1276.42 cv
2653.01 1276.42 2602.79 1265.24 2602.79 1251.46 cv
2602.79 1237.67 2653.01 1226.49 2714.96 1226.49 cv
2776.91 1226.49 2827.13 1237.67 2827.13 1251.46 cv
cp
.137255 .396078 .607843 rgb
f
2820.8 1539.03 mo
2820.8 1597.49 2773.41 1644.87 2714.96 1644.87 cv
2656.51 1644.87 2609.12 1597.49 2609.12 1539.03 cv
2609.12 1480.58 2656.51 1433.19 2714.96 1433.19 cv
2773.41 1433.19 2820.8 1480.58 2820.8 1539.03 cv
cp
.988235 .705882 .705882 rgb
f
2784.11 1543.42 mo
2645.81 1543.42 li
2643.39 1543.42 2641.42 1541.46 2641.42 1539.03 cv
2641.42 1536.61 2643.39 1534.64 2645.81 1534.64 cv
2784.11 1534.64 li
2786.53 1534.64 2788.5 1536.61 2788.5 1539.03 cv
2788.5 1541.46 2786.53 1543.42 2784.11 1543.42 cv
cp
.956863 .623529 .623529 rgb
f
2784.11 1509.51 mo
2645.81 1509.51 li
2643.39 1509.51 2641.42 1507.55 2641.42 1505.12 cv
2641.42 1502.7 2643.39 1500.73 2645.81 1500.73 cv
2784.11 1500.73 li
2786.53 1500.73 2788.5 1502.7 2788.5 1505.12 cv
2788.5 1507.55 2786.53 1509.51 2784.11 1509.51 cv
cp
f
2784.11 1577.33 mo
2645.81 1577.33 li
2643.39 1577.33 2641.42 1575.37 2641.42 1572.94 cv
2641.42 1570.51 2643.39 1568.55 2645.81 1568.55 cv
2784.11 1568.55 li
2786.53 1568.55 2788.5 1570.51 2788.5 1572.94 cv
2788.5 1575.37 2786.53 1577.33 2784.11 1577.33 cv
cp
f
2924.72 1702.36 mo
2924.72 1733.71 li
2924.72 1759.01 2881.04 1779.51 2827.16 1779.51 cv
2799.98 1779.51 2775.4 1774.3 2757.7 1765.88 cv
2740.32 1757.61 2729.59 1746.25 2729.59 1733.71 cv
2729.59 1702.36 li
2924.72 1702.36 li
cp
.952941 .572549 0 rgb
f
2924.72 1702.36 mo
2923.81 1757.17 2741.31 1768.81 2729.97 1706.45 cv
2729.56 1704.16 2729.44 1701.94 2729.6 1699.8 cv
2732.31 1663.5 2814.64 1648.47 2871.58 1661.52 cv
2899.75 1667.98 2921.71 1681.32 2924.72 1702.36 cv
cp
.976471 .698039 .2 rgb
f
2871.86 1661.64 mo
2786.26 1747.32 li
2784.04 1746.88 2782.36 1745.59 2780.23 1745.07 cv
2864.04 1659.91 li
2866.26 1660.35 2869.73 1661.12 2871.86 1661.64 cv
cp
.952941 .572549 0 rgb
f
2548.99 1742.06 mo
2557.03 1673.42 li
2629.57 1681.89 li
2659.64 1684.38 2671.83 1725.63 2647.64 1743.41 cv
2640.7 1748.9 2631.67 1751.74 2622.19 1750.63 cv
2548.99 1742.06 li
cp
.921569 .337255 .282353 rgb
f
2445.48 1694.93 mo
2447.82 1676.1 2464.93 1662.67 2483.79 1664.87 cv
2556.97 1673.41 li
2548.95 1742.08 li
2518.02 1734.58 2440.35 1746.16 2445.48 1694.93 cv
cp
1 1 1 rgb
f
1971.77 659.029 mo
1970.73 689.566 1945.47 715.521 1923.92 735.61 cv
1887.21 772.549 1834.01 825.946 1797.2 862.987 cv
1760.24 826.238 1706.66 772.959 1669.79 736.291 cv
1648.14 716.355 1622.76 690.41 1621.55 659.909 cv
1614.34 609.088 1660.04 558.832 1710.65 560.581 cv
1745.25 558.552 1774.12 584.071 1796.52 608.883 cv
1796.61 608.706 1817.9 587.49 1818.69 586.591 cv
1876.15 526.482 1981.83 576.919 1971.77 659.029 cv
cp
.921569 .337255 .282353 rgb
f
1971.77 659.029 mo
1970.73 689.566 1945.47 715.521 1923.92 735.61 cv
1887.21 772.549 1834.01 825.946 1797.2 862.987 cv
1796.52 608.883 li
1796.61 608.706 1817.9 587.49 1818.69 586.591 cv
1876.15 526.482 1981.83 576.919 1971.77 659.029 cv
cp
.807843 .223529 .196078 rgb
f
1806.14 799.505 mo
1803.11 799.505 1800.4 797.595 1799.39 794.733 cv
1745.08 641.806 li
1708.16 714.831 li
1706.94 717.245 1704.46 718.767 1701.76 718.767 cv
1587.99 718.767 li
1584.03 718.767 1580.81 715.557 1580.81 711.596 cv
1580.81 707.634 1584.03 704.423 1587.99 704.423 cv
1697.35 704.423 li
1739.83 620.39 li
1741.13 617.829 1743.83 616.293 1746.69 616.468 cv
1749.55 616.65 1752.03 618.522 1752.99 621.226 cv
1806.08 770.722 li
1848.21 649.832 li
1849.19 647.032 1851.79 645.122 1854.75 645.024 cv
1857.7 644.924 1860.43 646.662 1861.59 649.391 cv
1884.94 704.423 li
1987.18 704.423 li
1991.14 704.423 1994.35 707.634 1994.35 711.596 cv
1994.35 715.557 1991.14 718.767 1987.18 718.767 cv
1880.19 718.767 li
1877.31 718.767 1874.71 717.047 1873.59 714.397 cv
1855.64 672.102 li
1812.92 794.693 li
1811.91 797.567 1809.21 799.496 1806.16 799.505 cv
1806.14 799.505 li
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (VSI611.eps)
%%CreationDate: 1/23/2022 3:54 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQD`BOX9dn!<5DoJ-JWP>M9")BGUb]7RUuJBXJ2If!Gci"+k!eeXYTn^g`Quqs2kZ0lt,(7RWE]LX\I"GuZ';nim"\DKa7j
%ptu&+c)VpnIeW3j+)YE`n"9'_N7mU4%*lChkjhODnA4#\h1'kHS#8K`qm=8A-U5=iqXVm4Y?sG<qSNj@=3k6ero*%PrLY.Gh#6O.
%+65AAGMbN2rqt:gG;mhi5P\Z,c1Na]UYBG-TAI;.rSm@:?+Fti`^d]:[m.r6EWc6/o(qR:01>I*dl24+:#t/YmVdPoZ[S]@H$o-8
%hq$`#Xgrg`;inbXr11U)ea)*1s#L#SJ,B_a\c-0fa+"!Zqo>l^^NoP<V**u)4"nVjo#okJl+]F]nbF,PTA=ORr:A1ZG.>Nk[JTXk
%OSlnpMS+W*iU"p`I%,_-I-L19jg=W/iSS&[G=eFueQ2u<,NoHQm8B6W#J7dD4WpC`pl]=HIsUtNqra$t4CqmrkhK1(k<&[VrGc'b
%IDh=Rm8koQ]Pcs+Wl3V7^'8f3.tlH,X6=?*bE`b1oVZ=ts7l3AIsq1g];Mj7j0)h)q>/eE-QO0O`fWC0IdrmLT0Ic&gR$7C837U0
%](X@O?@DS?\\.HQKA5RM3=])^c2Y7/rort=5<O?=U\E=1+42h6!V7c?pu@9^Gl4J;(o#k.o'>b:^AOm1s.->C%?SJ-NSX&$-s+hJ
%C$4R;H:ho7ZOa\!bNR+bG<V6k+-238Nk!tk;FU>.-"H`%YFkdPfup#b+?0/FH^AQ!s5N^Xn!<KLjXL%Ur2Qg+qQGt[m,b&mhRn.1
%EdWiWO7p=lbnPBpX0;'_j3-obY?ml'I__"':ZXHEqE09##Q*oZ"+M]-q!i_.)@@Paj"%[ufh:,qiIcX0hmGs]4o\B.q2<k.If023
%0E:^q_ZsORJ+r7&:Nuj;l'"'0?;!M4\,5jes/5eaZeZGT`XokD`I/\hr)^Q1Q^u90_FBrt0aIW*VnYdQIc6V$'7S4Nc[&?gEprh:
%X2iQ#s4KJ?:>5(-e"-J=Y2t`)n,$?C.R>oCEeA;*$i3&3YNhEtPM%,ZQg>sXmh4a>nm>*Q^";f9:J[UtqB!u7gYV)s^62@d]mT@V
%T>kO1G`pkCSL:LfFg";DGeJR:4+?ot)Yf>j^%Io!s7lB6PCNIbB>=K*?I*utpuUPfoAYgFgA`E7bIFP!#2<n^e[j5GKcb7G#MU5H
%rsA'<0Cnb[n*]emqo@$T5Pr@aa5?pOZR<ASf0B9(DnCLFp$2@n^V15Z2]Q`R=*#eCr2KMmcDRoC7/W/&o)1H)e(4!2f>ZLYrBmE>
%s6X0c]bE?<qte?GDk?69pA4XGmV+LeelJ-fBmE4_\%R-JqMf1NH/l*cdF:Cnq=2_YYA_2Pm4U/l^46&K-M"M+BOt<mSj1+5T"KOG
%qtCuY^OD$[J'oqWER@s$FH'MYk:PL6$_+lW4o=<DmSi7JT6:k#qGDmI)aWAG2uNRkGCIQ`:H5XT5JiHnYu7S!\LnP&5:G_KpgJ=X
%^Xs=uC5[QO;]444ru,6Ca2@MH0>IDC'9%X=n"'D?hO!'s&$iS.PO?tMIsUY^=3mN;n3WVh?=hr/I"SdC?"<l?8bJAA<hf\>.q<EI
%&Rd3qI^dsX]^'82BPSX?$a'oAh`Q8Vr9;g_qVf]JGF1g6rp>11P,8\)OOp[Zq]C<4oBHLVj"q>)HH%VQHM!D:ma:\\6[JC>96q;b
%$a/s4rBfkVh0pI,VqiGe]p'9!BD5Q0rqS'MX8_qJGLH4m^Nob:qsi/"8sLKT$,/=&^\mZi`j\aUS!WG>Ie!:)GL+4?s7u)@hnFL6
%pk9RAIk]8FS2tr>A[sc;H$Al9_[$54nA5/%n:A)Zig%%5]%ai$msPnJVtk+hY7De1)LAn"LN&2I(5OO5W5\)4O2lL7I$,)/9'YY%
%h5#H[VV?k:Z8bfd`_A(ra`3O=q2gY+*`7:k7I5YY5HXQu/]YRFbADB%grh0W^?/U6X\Fg^YNnp=5C?9<EZFC^P8A#.aU>J/>;s)!
%:2I'*FtL`DO*s+2EGW,O[Q>PEb=D1QLV.@<Dms@>j9<+WUpmLVY'Jgp]c77u7io-!Y+6R33nPTME1M5a3Q-90:Qa8BDKar=bF]_8
%p,iiV36H6!j2RW2%j0SO*e?iBOZ#_<URW=SN])rY6giSca7\_"s4M=N_oZn'%_:Wi4ce@,*IIVI]t=$tmrQPjmrdJNh"QmlhYZ*C
%V)pkgn6Zrj&m]Z\VV\_&e:DolpuI?,i%BY.muPhte1W+)C7'E/;TF%01.dcSka;oToC)dgbqV6+2aK8q(6)6kj7KrT#<>3@Utb6)
%mm-Iid6(FY""*h$oa`m@kb*;r*@,,]o['=h.Wpkg,>=bY3J^ECX[Kk`9K/qoJpr<+;B84!!A,TYC+kA-W?ZPN/1f:Pcrbj&.oC)I
%Q.B^">\i.!m=jTin,[YK[Fe*8WA`Mr1Hk:uVi@H'LM4B/Sf?DO`\cPHop4XJeq!(=g/)C^BuP(FeIh74d`IW<6gdKnqAr.Tq]U02
%`u1qQh<0k]hWqi?Ic!N\Gjf_RQL9!p;&],Ld6#`&YZ'gZS+mO`Rq/j,TM9='9ql<bCt]#MkTS*[-+;"D-HYo%Y[O2!7%]8Mj/GbG
%:\)1VMHK#<;r46K9WtP*b0V[8VZBs[)lVNL]U9[MX(-mM=_jI>2Nh68Ag`F)W@PZgBV+N_qI^kiH/+u4ElV,7UtTNCJfXCB87r/H
%f.=8i.!H[(/hM9na;s$Bn34g`CUrIQSdM+Ypm8SP8u(21O1-@d+Y#pn,uG03c<q8p!fE6fGJ'g+%Vt5Up5Yoe'?0**U8Nl^.Temd
%e5cf7DH@`L/YHloXi&LiU8%cI="udmR`k?S\^oK(c5N9UTsfQM3`8V-k9W/]/s0L@RNTsL#<>a"5n?E35cT63ha#ZG;Th>+5b$[u
%eJupMC8529A#>;iXn*3I%P80k@bMB*-,9`+X*&m!p<&hsJ(.DKIrmN.-u;#>35(sCm0p11q*TX#HkcLlp_[e95H^$Z3U4`6QU<<4
%r-a"P\@LXEq]At%p;d%O#Bug#iIh#uGOY>ijGrsupM];V6_iGnhB$3PFdXrZ2W";jmI;;/DjQ/=Mt>p=[tfSE`%F\t&XOd`h#;JH
%OKm2E\LfRfj5.uS4N_WRO\m[1[29?E`jrj(1(+TOUgM:RWA87PbTD?%A4@SM+C<6[e79$41A@Ne6RO\\-nG(P9W'La[EA?<`#=a5
%0,B/')1@_MI3V[nb=o*KF(DO>U1aO6S_,8Zd0Y/'/CuY>RqR^(3WkfqMM:)KbOU4Y;[uqm1JYc%d53O5Wb<FN8[Oq<fM=[mG\3\>
%i2,fI>JT=g:aS#GE+?FDoU.,>,k!->)3h!HfdP)N^JFJC%STboI&IQ5,%0J.D8GRrHt_SXUAbHY7#uX8<8HN!a-"EYNo@b`'f0*^
%@D&smcsV4qJ:Eo2jOKAn8),)^J,F?.*V$U#5Q'mha769eBYF-WjS+6rjGrs:;JtoLa;s_tmbc;1Df7jUPg:90ZUXbl;*NMN5AQM0
%)We:pq5dFWh&T4bUtsok\p=8DJQr*!O8jY+0E4JZ=#G3Z_TlF%bT>i]b2elaNo\jNZi&ojDEQtO+(:KV,2TgM;IU_rR_.DR+E*)>
%i4-u0b)'Go%lb/^1Q0$=nn/cf<Ui(d:-\^5\>ID3E[\QXY%$U;F3Wt<`\g<6hjd4<IL@!',TViVJc"UCpcEL&4E:bf.[OOMAX+Be
%100q2>HS?S%*8RH%*;p2^Ljui8.75:j5,qRB^cd_5L5K?hl`S6T@jbHhf=eUephTCA<!l!@-#feb5hP#?.:#CCIUS_\EhH7EoA+,
%L?'_m+$*QmeXW^>\4+T;o,g.ahFc@LK(87IE]>]L6Ul=5WhD<*EqOaNlB_-u+8rU>[d?8po^M,9oFUi?oXKut;`*%E*si,R#ehVk
%Hn33e#/Rp='EEO`+l@#XDaM-Hg&UISV8dK(XX2UFL7^M*CC]H>i,1G\pP(u0>DA,h"f)_C63(\;60DGVDBctORNA5<0aJ'B=rN?O
%\-h+O96/]AV<-:d=sg=Aj(>0a1a\`+HHAGd6"\h>"F_r&UC_0/r+Q/4"$A^Xr4Fn#;f)Tg7Bj@2[ilXp1`Mf>U/k)<Wcs!mb2im,
%F0st.O/'V_n:CMP5DIEKX6u?U7m<6`@8XOEgDn/Cjc54E?a"KWm_EmFa7djHq@M]C>r_8Z]e1:5HcR5F7ih-lO?9&U5482na7m8f
%'eo@j<&I=cdBL0V/YBOl,&2`ZGb!aaaE513_5P87O<Y7X&k!h8-m[k5$Unb`lM<jBHlY>a*m&q8`j6rnk*^bK/5UegHT+h('*I=7
%!`PXbiEen0(AcU4[k-'q=OTs5h,keH"K41K2+#P482V#hp7gM8b)7RUM"qTo>0E)=EY>Ze>k*QOms1)Rm3]Nm>>j?m.-n$h^3Wj1
%hib]$GC4`=hcnP'/go`9Ob.ed2ta?'0c?7G5hk%SFItqgGd$`*..9@\NqYO!I?))14&XP+j7[2<V<]_;6jI29!L@7kap^GU>eM;b
%<+RChRG!/,dSXU=J0fo7`+fIWe7@\ZXE5ShoQF>.6)=`c1/Nh3&j[g(`(@ZK.KtDrNhFg+OO=1Y!E'7,:(g?4$RhR_8HVX9'27*]
%8S90o_Zq\'BaZ(iJrcoPVkDEE/s8;fK1-/AF;HKM!r]22_EdjJBWge`:3)BUN[GIsmX<SX#G&[A43HYPmWccj54nVc^>fNQ]pC%Q
%h%nNu[n^c$4gdutX#r]**1`JGcoBXOEN8d<8Z%[fX`G2YZ^9cVohOXA&nJL4d6._e[@=8,798@qdfdJ[U4G@J:bd2V(r1PF`-jF,
%mY;=OO4)NK[fj;R#'XFX1m<LIcqi.d6U*$lXl-\PWJ;"OE1E=C(cb$uBrkOM,)6mQIa.d0eR"N?Lj;>IOji#??.#'(]4HR**@THR
%#+&[q];^73L9&gE`AATWSK<Z&_\WadVgHsDV?:`G>hA"Da0IZXoaFJ_0T@p:L70"4<_$F9jlFK1a4VQFA%Zc63tM@OK,XX$a8J\V
%Uo(lHEI@L(GJ(t!mrSCahf5E*i-7WD^b!33hKtGX>,Z^#X<SNa%o8^%qN5+^T%XI<CRmKmY)5p$LCZ)d3"7&D"tYI'1_l+.,PBT<
%8;.uIf*7*jC9U<PUMu[e'GC#qi<+uJ@2WW;QWR6INmr+Tl8ni?=$Rc>`Ek.>f94n<VB]nMpi]>+[E+-^YUn)^'25$,nKo#9_]C:n
%gj\:QXG`+i`COieeBP6IDk_*9:QBPUL_l+kI`NN3FoC'TZN@7%a7/g/I)"!II+KNcI-3M.4V"@p_=:<II(nY<*:FP/A)s?HUtBjm
%3OYqu3*38J:k?fF,dr1K(uF>GQXUCGHA>MA/*55nQUq,"!N9s-0rrC;QF%e$X5\_(70`(`K%&_28j@?%>+i=ZC%8u"Sc!)c:FS?=
%h\8e%8uK%(l<=&VN^B_P.?DW@!iPWFVsuj79YG(2q`XuW#IpP,iD`rNGiSMSZ02F,oEQS+Bnl="dn;/h9_.QM!8NY/pL8P0QGBHl
%%GTXbo#;:MS"'+pPr:L(Hbfkn>H:bpBh-'e<\31Klt"be@KDt+$[]>1.ZMR!Y#CCqdrUSt1WAC/^3:?2g<iR-Ta.#sBHOLLaHm]_
%k3m!.s"`N!Bi_Eu]CE+`X6$o8:[WI:N1V*Wm&4R;`]0;H?8BpSNV%E6k@T*;1JJGc$]%opjCkFC_1F3sArmIcC`6l*/4LN%1,787
%Asbl*04rnk,X_T,;f$$"M$[]>f_%)7lAUt.RAK&r0WC)]J@[HkBp_;'paj=3;-.N]H`:C;SlDjGb!k9)S:5=:omoSeK%5='mjr^m
%K^\UZHtSPF#4M,sbeW$l6Zr\Df3,=10MIfNTPFt\h(U*uZlklO^eI14PsMcm#0[Vk]4I?;iMIl4G<(`*B3D>JlBR&RpKF"`W'pi7
%&JFL\]+-#BUiAfLkN+2.NG0%ureR%WA/gdk%cM@ES%]YB>=20A+[TI)3_:tr-M=4cq*XW?na#K]&aXHP_-Tj20o<n<>#1kP]ULp8
%Q>*^t7,m6&mq+Y@Ca(HpLf7u30PeEL:Hp/N1A/-R.#X]Q@O,18AF5FW_kP1kmW#?,MN+O<Z0Mq,7S"RSMk$r,.J6E_nAR9AN^YHO
%`RM7<(o[i]:mC[.=W_C8S/->;:QCDr-HbH4c8)u?rOGm\8JNOqX=Gge>t9A<YpgGO\+-otHQCRer+(T>E@>X%k!P9OM(]oN0of`,
%U75#?DQ0snf$&]m%9bIs+/fW9$V$m0JGi@TZs-qGTJ;!"`e(R"9Jb<OeRB7g-ES0h9pTG2a?joEit$r.BZpKgLa`Od/0$7%TTK>,
%M@&L]XM^F6MUOL.[pmI8CCh&&Q5(,J'#V#[HkNlYs,5NlTC;Q)p`9Bn5*"f."L5anA\/f#RH;".f"GWG$b6ite#eRl?*D<Q!pKjq
%Mfb'tEC7$p>>bhW\Nj_gmL=4^(7LD"=V8`5(g.Fi6@n-Qe`S,t]TbudEc#n"$JDQ'"ItS\k`M5g0sW.[U_;T/hT_].\=")7#<QhD
%@H7K-Am&r2@JM]A+F7]qa)q,Z8-ettjhMuZ=A]S_'5^H0E(3$169DCuHFcX-YX&LH@060b<bmp;i7m9D<!;YRb`i!YLYd%4.l,2F
%5uG$(e7qik=$s83U`ETJcDCT%nL%MG:kB)#)YVA]U5&r8a%.*HTpEj:>R.8kl5N4LSHc2R^WbBim8s]1`h14Ibk!7SR'T(*jWqfI
%NJKG@c%6M1ZV_45j#"EQ$,gXH4f;__XoE\gJ/Z8'jj1K0SBo&XKdg)i%\&l,a)aKDD:[#N1!f)-GJ&kT>X%S<R3Qp'pK<j0NB<1_
%d#a;JE5s7UADC*6`k-Gk\ug5GQ=RIu`9$D'q!SF!e4A1S(u*6&rGJFBF\U\gi]J\@M^^tmG(UI.bs^ENb'Uc')^q$+ejioI\/1U\
%G+?ZjIO;:qRBe_iJj'jr7KV;k&;,NO"A9'M%aN!'cBEb0l+`"9!j"u/``s'e&hnoG,7un>YcQ,li+>06,4@HH.<qWl+5W.rXN*4N
%33JEra)R[f>i1\[]KWd<l.Zi(cdIL.Ncu`WDi]gu_\\AjW-tt(GF\8;'.,ha^i.LbKBE9O'3C\1k3!o&-+nFFKQfrED&pu+dsA**
%QIdLeq`$4?nE.`S*V/!Vhn&Ga[smGoYE%l(>8Ud0qWm13X_gB)gLC<jLt9'D(q9Yl3'#j?`cJmZmr'8t%mMBhYs.R\:u$%q1^ZJD
%N[MY0<%u:V[Tglq7_s^l1t?+=>tq2oWbEa+4L7dt*Jhk="QsZ:c%Zd6H,h?tXGP'NgS@XI#DGa,Oi`F^4?*m7\0cGsR:_hR:?X9H
%nAp9u)^b9dnV1[*QqLFt[Bu`0qW0("Eg:l0mUkD<d3-PH,5MX6-H5K]4WY#T<60'0NLDPE$i\V9a.c@,i"*MRU<l%_Bb@#W0GOA>
%nFkqJK?7,l.H<$\mrCqCf14Uaha4o^2?o=S$Jl:=><]m^"qf6oe7Q*c-[&D>ojQI%/.N`<72T:J-W+Ke84qeTN,l/)C*j^,?q"O>
%jB[4'hDON/(/hF?m>aIR(?kF]dYHX\DX?6:_V89COk;oJk\eZBN]VQ^:"7&%[NQsOc`bdcMO]pQ*':j/\oB[$!0-Lr#9Q#TB=2u9
%`Y%X1W+![OhE"NsI5NZNF0`qmSoI%:Cgn"MUj6=lr7[du5G-d3oIE\.0YZXRX[pLCcH8aVDCihM\Va_T]]_.*KNJicN]#mF5-7$2
%/ip7)pTYlm`/D?hr*.qfhU49pAKBa03D!NCiF4\<VmtL%:AT2q[j7+a4fp(0.P*I+m8ejKUta_L@CV?h0'RIfmC8_Bf`t/45.>lo
%PrgPOo-C_<TP:9ZW?&UY>IX<AT9eb5Ar^J1\okdo2W;"SSB3_3cBd`H4_[L5K@-GJ\QKT8O#&am`OjZr$@,i+[:nP5-`laAZB*ps
%$jS+W*4U/:9>DpqoEbXG(lGQiM/*;<YY*]6rS\YpgS3acgjfNbjMFF&_gbGFq;:e(hKUT:U\f@GY-\@gM[stO=@%_3qNH'paencB
%P*_,rPAR_LW&'PWJ,!DPQRijtI[YhsZW:V9#T;/6UJ_1Z\Ybm,BuLHMY+59>i"C)tG]:)8+O%KeCVn%aro$/d&ddkpeAb#:'l\fu
%&@__u*:DIl@"E4H^s)r8&@?`X@":-KYXs&g>^HQdZ@OeVD<%iTaNpohf?"rc</m)0NOt?17.EtdE0>U?mQC&ENj9XFa0I_jS]<&O
%Itdui6gf39;h!p"epRgi6ghHKF1i?*0NuHt!@UU`=ja'!:ANHu>1nb[87'85SDu0H@tjSNCZ@ATSPdp#.Y$(=3%UJ7_U:tXRWk6O
%6s9U$9D6/@qq`:82j1h'Z$l@TNYDR\-Nq!^5m`1h&Z&Y&d43:O,1fBF3k'brh-Em5V"X"BRS74E$td]*0C%psXG4%+Z2'L)LJsCP
%-.t\Jfbr)*Orf#5*HD]e8afK-Qr?1d>al8=MnOo0>>ON&Oi;;F?cAT*]L-\(qaOI@gE$3WW2."RO,pf/]a)-3KHT7Y\hrj5@5d*T
%B"@RclLL+!pE>lQXL2+^)LLRYgc9LGe<,^I\Z])Salki,13K,<'-a&D#bC,=EaDI^/#(os\'S9JBQ4HI#fF6HIPT?p'[%7U^4VQ>
%'5]:&,BR`VLUjmJT*q"@E><a9]^lNor6[jJ,8@fIc!p%Tdl1k48$Kn'm(]l[>h:]eo;op[aFqMZjt8aMm)9.!JmJtgQpdFKLr3g:
%*3k66k%9Y8%uXd0Fh&l?(8TXLZ(9QtSh/f6Nfh=W4<5g(Oj[pK/.T=k;-=%QY'.7pWO_G<oW7#)BTZ&LCpl?aDDY6OG;WLr2;!qd
%CYLRT^Y1JT]ur]N@@p#n33J3%DiCc/ClR7LdbO5_c2F0P?3c89%OuOt!uYZi[F`6@LP$o$FZ^UWV`R&$?(R(f#Jk/>brqYq+b^N:
%V63tbC[g7<;bC"_gmCrcRSZ%g0QJL9PlWrO"*T8bEsE`*ddF/]Cp!,]<2NC>YY'6qo6JRE&RZMMkRpP<@i2#"=aICkVd`?TRYco.
%=:E_:c.++'7!i@0X[e\P/j3XV+mkiagZ;#9Z/1%IXTNGVo@D>IP_*BcRuC%P)^b%-o^,R)%*bI%kKj]fp1GN"A=2R<dNM+;1N+u7
%3;2Y^Q,&Od>unRZXj\q9,fZcJQ5IeJ2!#DJM%^ek4"`D`dInYQ[Kf*A>0"8A7*qhrG=-T;0L/'QFasKU'CqH[#o3uXBW&bjcl4+j
%8:N\VWB`;(dDKeP[_pm1A\2"E2:!TU8k6P^&Z=r\-9VeN.u[i3JcU^.-NT0h^I4)Kd(PP)Kd/*&$0Rb!0'YEIZ:/sQ\?T3)\OKtT
%\>G1;fc?(H^Pc<<QsBMpVRO-)ST,C(W?@cVX3o-lmiu&-7_*-2bLG40P%l0)odh<3<^>qamOEasKb*VT5fLCN"AZZU=tt#o,m?/c
%,594/pE#%VB4^L(Oh4`Cghiq4&pM*ahfos@l^$)OkVkmk0!V#pnh]8h9@RU2q.KehP&,B/?lt4Lh2kH#hXNEhore)>Blo4D"Mfd`
%ciK0T/]!0)@>7O-Tb(=^KG5c#nBkb)":h>6qM@[oNWj$C]R;WLa*=h1j\IiW0H+IqI*rVC>d=#D&YEl5=:_S3E8?H<IU)X.\hD[K
%R:s^$*aR+\Fe>g_FYh4mrAo:+enVtbh0&b+eU1`un@F\4]kmWu(?$CA(k'*cmE>,`GK##&4n8$Xm.GM900R)<qfVB%<Q'4>s%9%B
%`kZm7g_IA+O+d1.n:W&u/BF42DoT\@6nDhW>Q=$NILNm+nfihHH]I`]CJ(@npL<+Mqd-9T^@RaiB-7n^[@C+a99<[P@o+k,_7>'A
%$U<@I^KeQRd[=U[L;(jl`]MJims*jIh\GB]*.)hQnnG1LAbqp80=OOkgmF(Mj^&FA^9(Ya`Qd0kB&*S:7_BSmCh>Hi<9#h#1X4MO
%Mq(l\%d7B_JH<!I(pol%1QoLP_Zjs]_o).1OCQY`q"8m,10_/LS`tH1CuW369V6$:C*Xp+<'/@6Z=Mtp+<d/Zq"599raZ5*/b$&&
%I&+;snn-(W/T8,2hsuNF4'mk\,>%HX6*eGScXPY8P&Dsd(\h%>n$[\WmJ@o"fN-`&*Q:.%B9e:rH`l7JqlYC4n"-T<-k:2jN)Y^i
%du\_AU`ai`7M624JuBqt0JHM(YirbnHMQ%FO3605\E@k3O>$S'A!LrFW,q8f<:8"1\I5.CfcP-bMk/e*W",3,"J>R]a#eJ<>UeRZ
%N,>gC(%JkA@9p?`^[`[lHO9X"^2dJP>@VSZU0??aZe%kGg[F"6r,h[R@](b`3Q4bFaQ]#%oXrn)S^1$;Mcm4'KppM1dkl-V7jds9
%+s'g:`(O+fW,k2K5U(U<VH>>Hj`;tq/9KR2\TJngE0:F5:4h2mW1's/]dX^:FcB;#;:MFMCV`jE#o7I>8*9bn%%UjQ'@!kg'F[8Z
%'9uok?lW,;<,U"neFg>_HO&j'rmPG=ZI:OO2fdV1aQ`\?KLID@c,M.cWWgtKlZPYp^!mBo$:sK=)?K(\"4Arf3/.VEhsVBq_`0a6
%;0+l=l@n<,@6fd_V"8iTd;"RT9RUT:'0P*jJfD[V<hXSlWF$PS>>5"o`l*1&]\g5\OWe4D.J^R`=^UVj^=G_q2,:#$]!r9]^OW_q
%j#M`=kMkphX%`-6IE):L=R%`q=RLINCqGM*%U?DF($'tKY0^0Ag:TRAg0A-gr<-?\L<r`9W$MZgmp+u2[L;GF%p7Qe<_$<?XT>`H
%!cO$,Hb2/N_010"6rgM8X.lV6U8lkjop4,5ENUkFXn?@ls-YsRhQ/E]3`A`g4LHrX7+"tEV^IYfXn'n)A#Z**eG$aV5ECZIA)d*I
%pcKn[2CAEOZ.-P$H[^7lY3Is&mGi80pF(EM-J@@1pfi3pMOJS6<IX.cR[XS\E8qS";m:6J/t%B)'PpGElg2mg^R+<)LW"IMi<NY+
%79f5%l$5n[#@7<P:HhDqr1M5'p0`bO0W`rccJbV-1H$B0:%SN1YTQ!(?hhZqAAXDBgNu]*DoHu#[O1`c/OBAonmBt?CQ\Yp[l)@D
%Zern)"o5nWdNiJdCffQ;.)/='IM%n[C;cs9^jh3]X@_:(Q)JkVoUqmn&M+Q$6UA"o2#a(Q1M8d!L(\uo9#.iTp]NNY?=l-6_\eQn
%A2iq])n4JQ*A/+-I`uYN^jbc)ngA^Fr6b!'8RCEZVFa<:7a!R^0J`0>$=aWrW<*K0$uV$LA4(W&8LMHS]]!Jd'B(UKP#OB[Juj<V
%2/p\-b*l7h=7.<C=kSb^@$G]JjO415?p!$]pab1B7^MK)Me!ZL\j:@I.2>OfLA)f`XVWc')6;B/n<Q#qgO?JAbqS$;$`\(l6S6Nj
%KGQS%g-*]g6In*J;R^_^R3`Q]h.^J=<t'alDGkj)?u[k&DS*)G1LmS(l?m3/O%0(K<BaIB_[)r:pgc2QXJuLZbGLRq.s[EfSn.0a
%L0&9H(^l]/RaZ_Z>s/ha#2FW:U_MR8]K0b/lXZ_s3$FVD4Y+bZ&3<B0p-pMdMXZ/$Bc>uG,achti/"ldOJ\Pf`OH=$@5g,jNK;Nh
%fFtPhL?$*i>`>($YnU".)=b^k4AmsF":&l-N[(+1@C9RX6<I*K2/MH<LC]bCW_".b3W<pYG20"-NtfH+A+pSiJRmG^jPM\\)n8,h
%NB<<pD=C.BNSe4CXNr=?WmBKb]^<ViD'.%gd(`cd,LRBd[(m-'6\*_fX<#7+7C"*[f'<XB,uQg(l/S7^,d8=I<RH?h>D:F*M<lHe
%0c7,qXceSKM]-p#Se+O8f0X`b8r26P5*mCF.$M1'Hl'tArGP^82mMCeiPtbY(ma(?rsu25ajp9GPN\6rBH:fs`(P2nb"BV>oti2A
%[:V'5PlU\!cWW+;7>kgg-6e@_M:*4l7*7bOpkQl_UW_epe]R%ND",Q`@1?!R%YggHm6p8N#J)heT>C"Q9"`/ES&rh97QHtS\'8B0
%j8J7!.WI8TZ^/\NLeWilK]`/mpr%tb0Ld2n`I=BRIhE>6g&LA/`G)F5U^DX0_bZ`<)7*Gm'Q.UkB?Xg"[91FT1?Gs)Dlk6#q_`NS
%.Vc6LT$NP/e=hu1k2s#dj`36$-N5m&;:bCgACS'3^,pU04q'q:etYsRk/ZFON:Ukk2*VjH@NjbY>Ou?E,a.ApE]$&s7lg_QG/F=8
%%Jrr3&OtJXR6+[2[@d0uhn`-`&%FZICsJS8nf>_UCnL,@_ZCm2=Ot0E.`p1+^OW+Dh&p7Z9qLgtrB]&M^MdOUD(uD_(GYfN?Td/(
%hf-o*5:<[_:13mf_"'L:j`:LHk6.*s#qV\^=?\+:Hk&i":0.-P-9dKIcXYsU!m@K6?kLMUIsgq[X4P[(^3TGC%psdrG4O8"H2-;>
%^ZY'[rpHi-Dr*U)rK@/pY8S'Md@u$Xi/>2DGPl@A6b]R0H0h=AY#97RQZBk+188rspoBQcB&T5^orm9O&V'hZ58Y4(mWX0/TDtDY
%qgXLqO4$k:?g[jSJ%4<Y%sc]D\-M;Df!t>>"iP$ah#5,[4Q#KI2E/06]Y2E[r86C=^OC6Kp>jK)="bZ1rmU;u\f^7qhn4:.I.tVQ
%0<GO&*PZspk1/cf2ijU/059W?s7G[Rdmq/uqW,oIG5jM(pj_d_oAflBO*[.FIeg/VkR#PBVNm`^DUu(lC^#5e=K7[9pK4WU2IMF0
%._8f,5/sWS-C_D=XB2Y!6nEsh-LsnYj-A8N<I1iUq34>+YC,\_MAN%9pI)3,dR:WCS7:tLRDNuWQUN*"MY4K;]j61PC$/F*W]fM#
%*g]4[S_RCdIjNrKQ4rSL9_0BiF=!Ok6rL0k/6sOk9'j`oQ\qrU$<c6"V^p.:@40dh.QR<IO&np>kM8p[>.tWWj``jm7BoC-&@<9u
%*E:$1n7T#WGHG5oZc=GM0K5E(X^2%3j3=(W`a(+c*=8'$)$rIo)U>Eu>SjQKkc7u^=!aLKP;HF""Tk(bdY@_#L`V-jZr0@,2Z28r
%.Oke'a[\Gg[G9X9<(.q5SK(uZa;^*(j>ikiPP6Uf:#8EI7n.P$p/p&:)f=^[9p8Qs`7UFJjLnekm%K"iNm[n_J@*XsGb:adUn,/G
%T:C<u70SO8rc0eBmjK]F2DiBd&FZne%!V'r(6^)2*kl[SQ1,Yd'XUD_]UlU`NbIP@+SPSc49NhJ0IoSTA;H-h?bs-I8IG(;,eCC+
%($h^E;\"GE''TKhWjCHX'%4;>bE.p%!caKLgr8!N;PuoD-h?G*,;-&7mrk6mV6(tHUrm_s#O!R*e&_huX#KjqC+Yl/Dt(h#CChfJ
%([6\ZnmA2F8C&ROjK6t=kntB9:6rn*bVGs+N!C6fTpF*g3Qg9_(u*]P9$[";M9H;%+pUF!;]r.=q!o\9=Wm%WCba%r$[>d`$69Yp
%*"AM6D-9?)>p]I'4m,mhBNLT8"bTk4WAjf)'.i17g$X$K[#HoQ9^=;`-I7k.-1e>+8B5Ru$=ME%G+@SJ)$%b/_ar/U:`GdYV4lsK
%JuBB#A!+VM(3-hsdfc4t-^@.m(9<4RS8+ri1h='R0(g]OeKUQ89;P"p34X((K=mOOB;9ek"rPcpPfTjJRP^nSR[;UO1+_o$OW$h;
%@csC9jB!ce]p5ZBj%>C0i)4jfaq"!B%`BiZ&Q(>'aGI;IOsgsPC<)(cP/`a3('Q2]OD%iJlmd<"e#UWi&Q=YB1uK,A6Ub7C=)gQ;
%!0Z^$7SnP2-))(FS0$`OH>2S$]n.XLYo\*D1c/7.`$;(O,>ip<2'<U\R*bX!NuIh*U*bK!7?kctK4'h)-7W67$rlqHU3qaK7rffb
%fL`]u_f?Q7#ngBp3gZ4;jB$LRp.^TB]<G]nMPQ,,bJd2j9J2Ul!8U<X;TGVSKtO8k_(4jt\&3""kWG>5\et/S]`DGW8=HW5j2th7
%!XgG1XjUcOZh-$/C6ns2@oGEbcJFDo.lt&r6s7@!9/EFiq@KP=%/u3ZfuM9%gbA5.K$3A\qM9r_MBmsp&&f.bM1"1teablE3nfE2
%/e^tI(pQOe]LH<lC?UZ`XbTC_Zo4CZ3kIgcRdf=b!g3?]a>41S60\%ij&-cVElTZUW/Zj'@YY69%iJFaHYA+*(F<`r8f+O*K`K(%
%5=ZS)PVapPOJl1qM%&N$F0J>X!*%06cN3@MU6j3H3/k2gZONee6qak-j@ou90J,F[UcW-EnB5+'B3EF"Ld<ZtdIn16hr8ClON8W-
%A]ooCRgga/?#4D>AA62e')s,25h`&EjN&b[7SFAI+Jr=Gg5W.\J:5r.jWS?tRu&DCp(Nc^4KFACX6VH1d)+5O3)O"r?oH,GQA63;
%5Qqp?3dFi*6qkNRQt2THjugUXI(118;]\ta1GOo_KH2,"q:%)7=4*A.j^@Q3FG6M*ieo?Jd+5YR3OoZH7s'pc+m?MW-!_eDFjIHk
%%6K^5.UQT+.:KYnTZGh9X,Hb7dJsI,J=28_65Ho;Yj<2c7mqnTO>fGnaKY'E&pZl]Fh&O\-$g+ABA`l>Mt>B:\W953Bo*mRM&4;_
%_fl=;5_4>7X3+8U+tbKYMOhdILG9?Kf?395<epVcFn*C$ig9+hTi,9/5cbV9Q=D<mJJerm-WR'Gb2:*+QLjlpi\675$/)K"FH]_4
%i3RkN-e9WU;>M=g@.Zd<_O'_8dP!Tcg3pM48:oRSqI-[_QOM/B&^+'MBm"XikiE]1jYD$..A2sr*LaYOA^H?=%j$HbQka</<S.$e
%+dFcQjO$80BFY#Fn8Ush?P'"K3j%#td$dLnGKjr#=gG5]5dRKn]S$tQjk+(1BelR9fGCA:3Zn;P*S!Sc,qPdbbH,Jj2&11'`g<TR
%#,<*b=LN7J<$jP!X&u-s:15#q+q]g_3(Ln4BgYt>.?`dPktlr6L8860`H]qbKtemo&..asq9Z">.p?40/")1@`G3[4YNFb%UQ$eP
%k+TZNM8;i"ZHQ4kjc&FMSs0`'/EbTLP9eTkD(b":dcp0jUNK14/rQ&qLU9FF-S`DgN%^HP8u9H1[Rd,#_r["E#u8IibH+>jRrBlT
%?s-YO5M*".61h<c#$[!$5.VYE%Su\igU@h@5dE`NqUmIqE@K':<6'(-'Yi^d2Mh^XFFp1&9MSh5RLFeeXfET\MUaVLd7l3M,rs)q
%2&[HDkW+$KbJd50741lt(!@lp%Pf#u53G;BBq<@#*I+<;$T/GeD(:A`Mc]3!H%(_DJp6GNICXU=^S:j/J'LtHr<9HRg),M6R8H,,
%!ll9u-EoD^2m@_V]ma;_YBM-+?[O;^guQlIB=kqYqT\>=0E89Rio]D"acdfRr8uP!a#Nl/Z>b\"?k@N#8CDag/nP8(0Sm+SA;&*5
%adiB?5?7E\(lqLbdP'94?(1Yto>Hh*a%_=YL15dt?SN=m,:h">FD.<f"c@(of4#XpkJG-1qJ03r?uO-)&/2fWQ\rHnko:Di&Pn.e
%EiADV3/@aaWMtUe/EH4uZMi'Ehk^;J\"E;1)`UF=@)habF%]I<l#($FaZkbEbkT&FiCN0c-7u$R(&X%-A*qTr&.THW//7_sFmeI.
%.W*s%<fRU558I1#m[E<,&XT^eEHl<=<QmkHXYAOA>eo]YnsF/d`\9(dnWsZU&HOe-(.j4D$7-[rRnfhdiN]B-IQ4UH6[+?CSXb?(
%"ujp_!aSH1H:>R'4AR;##]Qs-<C1D3j(<WIZ&6QJJY,fEcJ`')Bk\UnC,Q&!%e/GA!/(X,5GT-&PSauq_gC@eTE6'o!+(P\!e)9S
%e&u4^l0C5&hTcW6f+GZomaTJ2:E>%qo'<Q%]SV2V8__dIfd.Y?`#2ROLdjl)[QZ\d[X'C=o9j&>WP/uI(QX*S([D.oaZ=uQ(m_($
%:f"f0(=QZYbYLTK3"2Yqd!`]kbf^=PN-,siYRtPO"ur9h9XPg^1l:lTXU`so",)?47X$0E6_002OiVL(Sm<lad2S5-LrBFYJ-LNl
%N1`QFO;8+BSW+-(%aP!&:4[b^A:`'7nV9M[.9ZPe#XANIQS/8b&lT"<(:a;Coej3JJ4\@$$YbePO1[W`_J&*4@2.`^X'O<;AH>L0
%PS(auP6jAg'ANk@Iq%4L+<uuh,aG9.34<9\r\RZHLj:S`=lsM-'5?\fJB@mK;\jX<,6:CZ%TN`i/;i=:@VPe"mg*l``!cr]n&fr*
%YD8^&Q@spGKO$(&/to1ObXt+IiejsS+Mj:5ToZf5DHF5$\6taa%*.cr>RO0(JkRN:9WA3I,_;0::QuTEG(S@S2:r4OG#@d72ltQK
%S.IcH;Xp:(`go_R!i!]?\.cu8Ue>>1HOElL/7]nh6P44%h?e."ACW3XD'TSfqG#$K@SpR-5gPl2K096H<m*%IJODb=&XYG/?H&Cm
%dpt20iQD&iQ%71"G.UAQ]beC;'BIAbpHgB&'XMn2j[W?9^e%ZQY3>;JblI0!5YR4O%m;%uk$4Z,a)";2(m\X&Y[9kY5rts]bS3uP
%S-Dj[3[U?&O+O[Vnd>cX8p#fUGjm'_a#@%c!Jj*_!b%?s,9JFqPsed&X+H"ZS'4uZZ^h2i0WAC4Bf]db%WTX&1';?HpF&fK>?lJ[
%e.[C>]WG;`j.S.06ksdCH/O0%&YCnqb3lL*E@J\BFAn)2^o)XFO+;5/`Ak^/*Ia?b9BJ?nMH"NG6^@A&?3O*V<+G+p&oZBC4eec1
%hbM+H(_cN][ZcB?,#UgiZCuF&V49SdEcN5(B82S$UDX=Q8IoJ([tn`q=(6]d^Tn+2K$K0TJYF+mfG6iFh'38-iFCZd[:4'@K6\M7
%k7uk^$1JJ`EM@40kF_gHb\/lfmD<7Z&`@QLB8cb?+.]sb@*]W]!^7;2EDgYRM3=+\'>X^N-'L:8)1oDX\4DI_e[l\Oi^hPrQ>rt@
%W@Z(Yg'`L1\W?o\Dh`";f_'o?AS$POPi]q.@L-Rf.Ke6LMD`=4&#03l3.-78BhPA#dDiTQ.Wu`7`l:HY(MWaT/%WM;Kf0.hYEDR0
%6Ylsrq'qAqk(rf*@CP#bAq[g/ZA0WI5tj<9nPHk=!_G.#IHT@E09@UpAa7pG_M]:p-aQAu]i9rP()iAk_1oI.*+fC?7H3$G]nSOE
%SZ5.diU()gOH*2n'Pga>G+m,,7K9BonVX7lUC6WY<99O.:fl7/!NENZ$cB^mb=#t#/gC?&'*WP1([atp!O-C?W\a$?\;ig`Jbm:E
%blD0d[:0#gTcrR(]E_+VH&a<51&A/@2$Ci/c/d='3R\[NUVVSfM#\ij>i*Xn(o/'kJguA<8u3a"((%i-@SpNq@oQO-d&5.RTO8ku
%-1SlX;T+/a."klJFLjBi]i@3R8f1/#`mN/Ko2<@KEIdnRlRAD;(g+S/_9@H&8I8CkW-f+sT9o6P-t!C.YoFU:L'8kTO^MDoKdI49
%PLE_i;*Hc9/jh0SHU8=k@_$GPP>5+KNI#;'Q5:FX<C;#*`jhInV%so]'NH6q3X"oT1(#>.:Zcp7EF@2>N;mAg6S9\e>^7M-=F>YN
%!#q,?OgBp=Dc-@-\6-``+ttcf+V:D]?3fjB;b+j4Y;2-kK>8=30(ZZ;c*)<k-3c/\`F).fUVf(6abDh,$/gfsBRi)]'YV"Yln0,:
%RI6M7)T!ANO=.XS#298.S1KS7$Yh^jq:0'l_c,(O!9!nn,<>fI"Q'W=lZ0bs'W=_I7^RCe=Ng:5"qT]!;%V/$U']r\LbHXW'L;^t
%X,LpbZDF\"T8"MKOX<[1W<?]"b#sO?b@<S4.Y;[(X,J?)hH\'(>)[Z\3ZU\:kuihU.7P*UgF+]5XcSaB_=-J[@FR!fj&'09E@+:H
%HuT8)lL:.oJ:)5,@)*&#9[jlr<K-fr5)CNcn=4GmVPdGQV)ofU'tkG5;0*1-#.o[G+p,)g5?bg3[oT4S9d)r4M]tUtH-iY?W&1#\
%CCO5K6'"BC6D)&/f*E8S#Dc]Y!W_]+3s#Jb^:umc"M[G/jY.&sj^/Gf>)^$`9d&;a%&JpX.VA79Lft?cXY6$p$n3F(KJ`lA8-uLX
%=]]06<4`iQ%%;bmi31IW4"NaX_-F]EUME"=G[[ZSgIopcM9GmC"soX+o0(C5p!YkcgL-ff\D%cg9&^+j!h1_IZ._F#m?qk1a]QC$
%r1[Rs7]aTSI0QBFBuq1/VFaV9!/s&,''O=0\q/fbK2,-DZ&N9`%%G0ZAdCK>o$#W#IZp\YRUCG6j(D$dr[+$lP!_P5:,12D3_[j&
%;lVQQbQnQWes\;96p`Rt0?)AX&-iu*./lkOW"_lgJhLSafb01p+B>+&=:IJAr1bM+"q-DSDUh.9R7<EP5n(u<@(Z^t>&7>\fM.h'
%=iDZQEL#++G9p@A"H<OW$jL_D9T_Yr,`Qi5At)dJ9050/Q#I\R1b7p&VLi5uA%-+W(k.h?i,WP`!JISd(<K7uo/'U+7_e1RS4>(L
%;R&"=K>_&'5R4D@.Tb>l!BQUJE$2"[!eZLC,?-F>FC6p>)@`uKF/AbJ3,eHR]E:8!cOpL9%6DGA&8Y&X2+S9GV_*0GE"Hfh<0Mor
%S:J"ErSl7W<?BQ"%_EOV9M;r55n9iAB*\YdN4<k)8T\4"(=RAn&]8(VGVLH^9JTmi?mEGiM.ctZe8C!sRjo'?&;,#@oANWY(3nWG
%cmnA7dY`jjIP]2,`rLg,rnPoDLhnkpMmSZn*LbBYoIGJC/ZVF^B/65NZkS5pUGIkc8T,4LYeX,Fg_,Zm@C+;g1FEc>[Y-^Z`OJpK
%e(\L*&=a<AB$t2-73&F0pj%FqWee.6jHs1AKEYfib8;*P@dGG5k]nsX%*dC6Y$b\@8K*[H*uaW$!CO>@^7<i0;0*_>c@Yf:W0i9,
%VYGOG\4BUU:h5$4k6"?hmNqu:@Woc=lIh-a,jN@RNO+U+7aRf.0Qt,i&i(WZ0M>h:T]qOp"YV\U<3!JUd!.1i(cI'nRU\YC1*WJZ
%`JBXddF'-g\sg&30H#juA@4Um$oCK@=.BP8#*&h65N]X5E#00(7a6Tpe8@TRM"W&,'k5$rpk%.nL=64Z7XSstKFAP\&(M%:2):n?
%7=Is&Ys;QMf"N'-&ddit#)6)7`X;m(ck://Q`EUK`0VG\;H<>n;C2f!=^Nrs'*JIVRB1AI\pB-OTXo)$2<h)Ja4dVd.Ni<+NNWC-
%54CCVT9pO[Kc?4oMWWtFAdgN(!Cd%1pk%\Q0aOh!qOdP=!e_GW@"B&C&(S0S:^ELJ5d6VP=DVPq1;"K.lOCp$j.)DVa*2-$mVH93
%/1UF>LDU/C<m2f+LaepA7-@d_..EFo7p82"-O(H/WdkJVo8*ViSi\2'Sj?32.9^'ZI`4Z9ek=4>5]08p6V=@#p^u>UN0!0Z3\roG
%eHW^f<J7R=li<p(r1'`WI4"`F>cFke=Id,m#senHFBYiWF92B7q*!0HJ=JFaP[GX9NK>QsM:FnuK!9EYcm%$Ra1*i:Rh;UCa9kH]
%EKG.QZ,KMG=pg_k^a(+5AZ_n!`eGlId?FtS']t/[,D5<4f=,p&oZ0#/JrVKWAJuH-JE_=CXK)oXbKPTh$fuq1GcuES?r?-90)\(5
%<HK<J3dFrl*]Zrf_7S-6KnQMo>ksfD"`]FpJrV/#CGHA(2,&ur]Fuo@?Vig=G+f;+)c:">!QQ]2>AH3O@@RCJ9lH?INM#?moB]L+
%Ttj1^HnL^lr69ISTVW1\$(=%AP\(rj2\^Zgc&E>nr\c>p)*s.Ql',T".omud;'eRr6j]#?Z\_+FWkT!&P3H)!Sm!RoYq4F=5_DPQ
%CM$]MB2U]M+CRMr2'\:,'U>C@Gt-d?nc=l3')FEuOirkEgEgoS7JTGBp^NDg*/";jI<R_%R>88=^6tR+ct"][aPIXp;9`dUOT928
%FGCO@T4f%'&gTMHFT?O7W2PiX"H_rInTKpQ'XB,@:dYMM[MtM=N:T`DU0)Y]UA+^'(%D<fM.$W\"j@$EOH;>-7a:70PWoRfKigI,
%TE=gV'-QVd=fr03JA)oJS)t#%(BapJ>>LGHA/I/s[!,K2>`$HC!D&ubNQID,@`06E#S\*aP*pHNV3&M?l*DoJb^gQDVkH-q,Fcup
%H,Z61-PY7likmT`lksjIJZW\_Q)nhQ`9rY15osCZn6FPp#!*gc+D?WMb&c[,E0KNPEu5EAR0g]3i/+k`&B2\*1+4n-O>-@P)!9O.
%)6'5<XTf(er=VE"UmJ(a!=(Pk8$7&<,EQRf]db\q/9MB-/<"b9%]"`9-o@/%,ap_1OTkksToKF"_qJro1I=7A7MB\R:I$Xb+5+ee
%\mY`g;$]`D3UBXG!`!T)Sb[N1T'3St,Qi/NKY[43,A</,;O[n@&!?UF86f"Z(:j8Z7RBp-G"E[saEjUu#Q5d6G,K"md;0nE(#(KA
%'dQ+6+*e(_.Ufb2VqhdEPBK++aEcFjl>7j_b81;mS"^ORRYd.j+u%K=0Md6/[i]QKU)I\SH4EWrPD'[1.rt>+kSOTH$I$[Paa/M,
%&2%XI#EK9e%tD99N;->\s'8Gk6&W?ShA\b4p<jconp2tq?];GCcP=XX+]tmaR5L&:TF:hC;1"n#j.'<Z3)sG0d,%N!7lBt%Mb:n.
%_baCgPbf'iL?586NkB:ps1tL'SZZ,X8q;Ut-O8/e6lN>WC8+h;9M_aA2Y8TCp\[ZKIA=Lc5PfoBD6)A%Rjc'nAItV3,:di`-tX,7
%W]BM!Q,KLM"sC`#e9Ius$cNZD-sKk=!D11bfg:OinSoa'[:#2>"[c$VWA@;,giYT=!Ga$VAIPh!=Vcg<?sL>0Ef*s[=*\kRS#3Fq
%`#Au%@o7gG*LNL#)BH-+4OICk83S]'(-pq;"T\+T?suC_<$"8%2";!C'?G",W5LKjZOfuFE!$^h&5K+FW%.ks,BGfb=HAobOO\`4
%7-5Y5/T"`i;H?qhZCZ/14fV85"46t&DIa&uC[u/8P'3g'1l=:G,Di-\;)3;'p^%S$H@_]WVaWEU4OGJbQ9O/cfE`E,M7qf*f4/)*
%`1R_$b?.O?_[;j3On`?&L1hXB2A3(KE<K8)jcO?#%as.9;*]pOTSTr\i8k)Vn3OHY5X:kX.IbG.R>FqfqK7%L8:W9IUW"NB%ob7,
%.A"jr:rST-RUYu<Q%ZSu"JuhYd/B'!@$qYi.+tFcj09b1YQGM8lkm^`O9"(;9-4Baq)11(.W:+#T30ES!Wia,ZQA525[#^'VHEa9
%l5]X/'($cD(2sWeR#:s\;KIPn-d>XXcbY/uH;l=Cn>M`(7Y`YDQm4CBE0*(Sf*C8GR/_sHYmrF+E(loH:1$gH*:j;dQ<E`e65HH8
%!p>2;)IV0^l1R2d%(sDm.C7;R7@g\#,&f7WY=(GELn-e)fJ>2]WEEW:0UKgoBpjoXGTNFhVPi+4PlNb=Pp*;@aCluf;eRbS't?U(
%LcW)g!f0PI@5]/QBVC#=W]kH@i0^mQ-aJmFl!4Ii5+]T76#<aA^8,;-_O^sLTfBrm9ZX7>&<(6U%h95LVMAV,NHT#DNLVCR2%"=V
%'dTnL^fuWlfU5C]QgR5'8qOg;=t+!0iWC$q@<P?Rg.73`0l`:5nrb+J6,f;1Sk\/D;djQC1A_1e2QpH/lF*Ft6psX%Bg>2(A0@1!
%>CcgtF>,<t#!D&]>dL.PZ<iBUD1JXK?F1&)ET-'S2Cj>KSlNhSLr%DX4aAh\rQ'^;3]qKFJSHAJOT@G?6R9o!=GIkU7aCP</<WK*
%ge>tJ#7"NE+d6"g`<hM(Q)8#A\n?U@;u"KD>^7oLC=1NZ@9mOr+Bm-Y2DD2o^S&2\>)F8l;]#DTd=l['\GYi_VS`fkZeK6#S2#8D
%E-mtD8<b]K/I-j&eNQuWd*/E7R0=X2!<\r&]kb=::I>.-`H`7#q]s0q=jH%rK!3.F!A=O>kLHRKPNH7AW$1dIX4`T>ma1Ghe*3RJ
%UU+K=]?jGu+Ef&8g-'Cg4to9&,+L,I;,WL9AX?jS6TXM^JU/)B5?=R=Pe8PmquVZ^>^W^0*_E;$1/J?&gL="hPW)McWk/u`#Of7f
%(T^GX(Zm[S1er^!``Hi2BkDUBTAK`_1[G@e;t(PYFX(,Q5_NI%)P1M6++hM.++T?,\jO@2reY!/'XCYr]E[FEZM6<j[q%7I;_U>>
%19:rcE.HE"a?)c)5oh;"!+1A?S2U1p@c9YTU_k,ZX_Bs"45a@5EJucceIT".\Y]omc)LuTX9M-5@UW4EY)ao"R9[baDbX0YQr8Zb
%[g7qP3XINiAi>"6f]g>;RB.C%8tB+j/<5NMC(W!_A&)4<S0nC_Vird:K+0kNVegM6Zj;EVS>uPGHZ%$'`'Dt[SZ-Tt4XSQQl>*.:
%>etI$a3RP(6PF"4T1/X?T`NUY,VU-,kc+pBZjCJ$;].Pl5kA#k[6b0*C_i,"Oo9e5:*utS;1VX1[]1\*j'`Oa90#-NOI-Bh@6eSA
%O3<ieX:&"881_,!iuguE%p'i`l3!SEe3d;D'FE(GGk_UK$@s-M)\^%JNX/&S+<[c'Q#`:Xh(*B%>\0''+N-i%&`81V;N#K@eJf(#
%O+EZQqC40r%U,i59qB->_b;o1W2`lJMG@f-&2\#<CK+au(3&6,\^C%:m*Z+18(VT>Z'o6ZP$NT_GVd>E!p_844k6;sOWgU&N><Y6
%KWJ8\Hbu4(.i/@`)<N1Z>O_,$c%Ek7L)a#4\8JJ(W0jB3_Qk6fC8#m>f'G9Fr6mq-=j[fE^+^DZCaFb+9dZR;%8"Xad-4.+'&^KC
%1',Y@[*G^Pr&(@6,oY8sc$""2RhrYsXGYSZ"&cCTq$)jHl,/B"91J8%6bJt%0nQ,3H5"IX-4.tUE#i<pi'Td=JCduAb"+5oKT)<q
%*3AA633@(c$,qos%=0pGhFs!OSqYDr(]b7,CGFd:h^rT,kVSGl&PI\jdl6Sna+Ml^<&$_VQSf4\bRA/D_XO#mc/dcbECEDTPo?M!
%91TQA26aZe-p3*S=)]\mM3_RuL'YF"#H8!Ia_6##oH]ZadqM<&U*!a$2H>MP;]VQ=kR(eFR.F(ZNY&S=3\//DRu[2U)]1dnC$G2/
%Z66f:"?q(97;"PG9lYp*JM8o<Hf=(%"<5o'm<c2r*,8GtiI)ThTAI8Yj"kG*9+aH!lGt*MB6X?OT>"1["tmUhh<qr/"YQZZrp],Q
%O.X+5["%cIT,t]B=)p+qiq9>o^UK\=^>q4K^OQ+Tc-u,&a[8gqhKN?)D"kPk`]l*f35&tD*U;+QBMqh@s+O&iIE'KQ&XKjaW%EbA
%]CH!PL2]di.0a=u9/fIe7MsQ/n1[r0:,F]oK&g?.;ejna'5&j1E^`hCasOgQ/pNa>W5h;p"hiEa]L?_(Gp'MSfcub#<C8M1RdB40
%oH]Yt/>m`PMBcSh&m9mtZ/l33buuEB"aMLmpXr[6YA&Ip>ELlO1%-P>X)qm;b'1`36]S5(8@1j1)BuZRF`?3A4C>92YD%X7k;>a_
%J2O)L9tJqp6i&57/WT.cQB+q4eCA0j4A6QA8De+X_As@3J;;!T5Q`egT!`?2h/#brUh7jSD?+Or/eaDZM9qm5G`_>[7L-@VC+>SW
%LLPFoA5JoH]7n?YoWB@b4JZY1592@aDt2'(,0Ym*M)"J,T""c@6h*4DJ!%Ve7LY$?>f/K9%YB?7HLdn_o`Pm:B8L.*L_(s;!5k$9
%_CVtWZ4@8*nc<nK`\W`s)[:BfYY/I[+;BAG$6@er-H9T"5)K_]``-l%@YrrR<\t*X=\Q<"9uQ$#,jq<h6<bJ\kRACe0`$nC$OPK[
%$sh4<7m/t5>8hU#[F<4HdO_kt?rpudLfk;c'ffH753rT#h8$*/pdI%G6bItQ4AP3)>9!7X!2Sg1+ObpN:Tj!m;)@9%lKeu?p0I8n
%o[8o(0EX.:=MG1:!(KFWQEu\eT:AuQk^Hi1s"^g1K5i8():n.CM_;Ej&["M)N+mZGNGL3;J->0YOTq]C,%i'[RWt,@Z9f`lF]$gT
%U_SM*P2&M>e^2aRUUY*q!-?oiG3!#1Q;WB>6d>*A'"o!UYVCp`M25hbbjoAE_HS:J1a7)hHo!)qQsIg\2'XmaI#C$`(lRs.fp@^I
%OY`mJ5)`Oj\>&IP]pbOWH]=^J?4&n-r1)8+%-PMO,\3mc\;pDhP$)=tX^Ndu,R&?S\rbcM"R6dWcI#g5Gj#`e1`GJ:MMQh!8Llhu
%FGKVn30Y'LYJ]!G1S>3:-WunN<]bpPWbUoKT"rdVaBSgqgSJ3i>Z5+YA.>47:/OU5Z>;S7OD&ZX[3S_`'T0&l?>%ISUp3jqC8+Hg
%#A2<)490dpF>SOC"@a&ma#K:@)C8;>H$,^\VjeI#5tmQ='HBu<bYS`W8I)3t,Xa2j]3'9@<1+NOVN]gd?q<Ou:*9a7@jO/FoJ3$i
%P3g;8qq*pWRoa!-f?Do3(^2.I*?<cCeZnmU8>N/j;F_,IJU^m`:0KWGEmhZ-=e.BicXD!J%gu6W#X%i8"C;tdHimXmb=*#iL;&Si
%$O1<N;;rb\efZ*m20l`Z`Su\KU1QM$</Wd<:]f5QYuQFoP.:(G"VUJ7!EH]BbcDI38;K%m;[Uf9VVi\E)?qal&%sNB4fiqoOLGa0
%JF9d.MbK"aY<Wm_(/dQ&CI'k)8[E:YC9e]W<Fg-q)kh?Z+4',,dVkEQVjHqU6toV4dd?14")\+JNddNmV'1(=)Z_aO;IWs0=h]uD
%P9pYQE%Xt5C$r6tk.qd_N+//+OX\X4Gd0f93pGKt!M4L?&htr"pBW,[=]/)N?qLd#rukd+9])ig#%"CT0X?jH\i(@1UiAjo?6)\+
%rT*-,c4lgR&=J-=[;3W8gh<&h+E1fN&jB&0/mZDQ<=o7K\ibPCNAtOLC=NmDK*;9L"e`;Q*n't:#sc[AU-_+\QT-G,YAWD%W$rd]
%6?"V$4-.33HjhFG5`:o5(,FTK,ngl`G[n"R!42hsj,W^lE!W7#8\l$4b7U13TF3;e%$=CP%0s`o&4XW=q("X3]Er6S?"]kQ,0YI7
%s7P@5@l`i4&ZT0\V?<e_7;5i$/>$%9A:9`glY@D!3#RQe#-;mbU;5AJAg'c$CcTW&hH$;>T^"lC?j5tXqB[gVaZ;fk==j2qG._I4
%H3^#`(t1_rM=2ZX3:j2<+Q;6%7E<7m]o]aMgjR9Qh8Iq63hj0M&ra-QFPbDSWDcr$/OSkqYlc>*JfKg3VIWY<V^-s56'mfA#$OJL
%laif[DjZ#[R.rkHP[p2mM"n?[+]R/]80pO&_JI,ifi*`=A"IoWl)C<_M8pd$M@,]k'\DmKaC[rXPoRQC4X.sNffU>L5U,)R6:j]j
%1"ieN3Oj54+W/9g7N:b&h,kM^-_UMqWnXlcO\HtP)+LB&MM_CY_0a-)[IP9E!HFBZM^PdBgLnc6"2;TF?\#[Xau9.OCNb+`jUVA_
%N-F>Z9F;tag/P,/2d=RA4:Y2n2aF3L@>Dfh1TMAC.0Fb2;^*<9Hl;1%R#;9k%+':Jgeb;4^]Ocol)56qVF37$W1G,Q?==_CNlj0(
%r*?8B#?SbsoEDQ/Fr[CPMd[?IJF,4-qC7VJjKqS]M.4B8b[uD8=tTn2_]_;CYeqVM[6?7%/5ROoQsRhFB<@h;Le1s(jXW^8(JXS`
%9(WGpp3ZiC8>hiYE;G-X^+')PeScOq]`\N&4AuQeEp5$>Ou$]-\FG9-0gf6N:Z6hVpE?gn_J@*t8L."d,+jQ)Um65ROKIC7aWbT[
%TGAQ35N=.<%j:$#;9Ko?K?Iq#0lAnnn,Rp0cnmnMNl\kpGs"bo"SEi_W83.J.n6GU0),Q#n75E#p^+7i_C?<OPe\N^>jIV*3Ac;i
%.U7ar2:PD\WA@s;EMkt>FBW,Hj-jB\Y+6/.BB@EiFtZQAAb3jE3d,"aXb0LT@b):!(3[3g@Xf6X/)h(u`NrZ+=p]jf)Ap"-4W?3C
%jlKs)^Q,aEH)rh")QiRK+GjVKb49TKCqN.e?7",2C^l1scg]PLOq^:!4<I9DXC_^T2.o2ZoNLaA5V_`TP2ba""!F@L,$1I?2'p4\
%$3C;3n0CQoX9-_q^pqBLN1aWWUZF?`?-gD8I[!7h1^'M+C1LltfuHLM1Kj.G(*%'5%Em22-=lUXXXgFhq5rdXah>j>,Yq.u"s5!r
%RP7nbTa!P*V.s`lj)*L+9rAIHU]jY6`%W#%@!GMVW_K-_H'$@`3:[NGk>bYm1gge-Eeg`_"sWB3rrk\&99(>T+iGpL+AW/=oT8sI
%gr=#cgb_B[=9R&H_^$4TR.]?%*$RKiV@p<kVCRl'MQVH)g8ktMLfRNtr:%KpWs5Y&fE?L\OYk<uJV7-uR3Wn?$7Zfu/^Z>reV_oa
%fil9PFJV;Q5'J=4+_qk0Q'tC`\g[bNg5)>1BPY.;!fJ,9WpI),!RFSM&d=)%\:eC\_BX,]'ZDJ876lfKTfMaN-"IKNqL)Rr=_>=4
%FTj(i/P#eCTG*mKB6JoTUTN`++_Gm0`3i[;S6TF/#_:hW=>H)gGm$&UV'mZ\!K$4]9SMA<Huj+*8=5A##Ci)JP1'a`TIFE<_sF'M
%ataOhmf,*t64uFKbc4lZZ*O?<p`-$i`"?/NfYZ?]J0UD;fL0Rf8BC3!:m2W5aHFGAo0a%'ShLIK1GS]^F]'LeROCe.6\gDY`2FqC
%P?3ttEQW2eZ:re9/1YC^-l>dVT^R`(enK2U8ZV(X9U@e7GX7sRo)5%d6kO#rGNn0VQr0j[RZ7XTQ\1j=L:KQoeINqt;d_4+H:BS*
%ku!Oe:q^V_8tYr!X-V?eVUiCX5KSFH/9gYmd5(rDBtdae`?`9uo[5:i.N3_t<E0@*<sp++m3B7H=rC;2SHo_J[@$1[F.,-1=42eO
%19>O`,Bs:U@qhMn9HRmL'G>4u8-udcmE2*pgWFf"<<<aMQ:R/VGnB\5mL:6=E<ZjdQZ#p@TN,\p+?&]@oj4u3$m7,od7PHnbn#@\
%A[u-r.YOG6M4+P4\j?26?-1+>:&[2B&VEA/ccRIpRdM22Waau)g]psr9)XsNT.nP+ZsLOAl_*A%'Z7J8lV1i/8-isbJU$.A$POIq
%DGir;2-m%/:R%/VH$fq:Ok:bYBoUcXOrtR\8FC^<bc$]3ku_<ec+pYanu<;?gTllJ;)17=-Fq$;X5;>.N4AgO82L+q"5,%!7l$U-
%?4_9@Unjb&#a/F_Hl8jrfcC62`^-@Z?u(!d,UJ,cb='d(NZeO#ImOSa`uRic?"^fMf'>=uAN`C^bE^;R7O+,0Oq7Y/&jbs9@7-fr
%\Fg#*AfpYBJWO5>j?$`g'f7VB,UP6(];1*OeC4bPfEa1GeR\);>j7+Y@!["mga*.&=-\%_.Bqg]bjsSU=$S+nAb"R!V9B]Hb(ttZ
%BG_H!BUD:XW\CMR\<Q\:WP\MeZ+tG<*nAI<[ULB0",s#_[[.km,j@7q=OD^Di$P.EX'&pJ-]*k`/mul`"<J;g35L\f?SbcLEM]JU
%]'L+C@+R4]L'*%b8P)=W1?u:M`3qe7:D[J?/EI_*Yf8C(\3E:/E.dS/_."I`URE6\>q'9r>Go^Z*JmpdlBa=UTqnU-[p8-e=XaXZ
%'+cLBJS5$-`%WH_O#)sG[(_l-%C)Zl<kdk+,$8&*-f`@@]53Gk=dC7D!21\'n6/@N,'7T^BCosn0Zcp,#1#Jreh\U_XS,,i4;+s)
%haM#8(R:5T:oJric78`I2s<MkXt$&`?8gKP.Y88T//$m-_-)aD[[08qFS)r!RM&d7)PbBe$HTu@H?'#'R*B/^;`;-+&4?toV67!Z
%#C?V(KP(q6VG8DS1]3V&8eJ!=djW.q*1oe[4>#3Y\s$mGO/7'c:?:)kI6XsJP-,BB.VFnI1nLUVbn0,k+qrHq]2d4X0\FBa2Y::`
%Pg-:7gM,?k"7m6RmljnU42Z&7gBbo739ptipp28$5m_9O),XZ2iesN!R?u*U#fW'#S*@IbM:Z?:5)X.q[khWr]=,N5JRqL3=(b-,
%O;1MBnQcb:k.0\::"lCO>I$;0luof.K:5`P29jq75#g"Qf>o>J<N(Xbdh-+L-@WeqLORNWqMXGh+bE93ZQTcR`V)S9SDeFl<,!4_
%3<!NPopRY+V8rY:#%Mm8lJbAPc9Q0i-[al<3D$b9pqjkf`1?9"?$L;-!OQ8Ca4f<R?:_k/o[d2M^*X4XOanbdR$;[qV(Pa+aOelY
%ZXsQbmKT'u)%<B][nqai'5hc5V/_Sg%?@L.+R0=lGbC&Z:RJu]b7%j!]Pb-q&FtDtb5c(d>@)8r4OLH#$P'$AKIjU6i#PR,m?85(
%``DA5i<3e[O8s"4#nA=7_Oh[0i4pgEIC<Pe0:&jt#f1Sk>iWX*:>ZZ-ZPtrE,W%PT2.Ah3afgYK(`>;W4j)`:$_1<8MuASAS8#:M
%@382$9W(VaKF+1,)Yn<2#TT)*4nXL6S9=#ZKE]#/T.[nJJ0X03F<b!2E6k(n?oSQ9E%hn[O*'rCK/SSfngtA3=;o8L12+Is8=;9I
%@0).mROo\Qb98gJ6[&qKE,<<[V7pOA7tM;X$ml"bMur>i]C:;+Hk%6?6iRVaK=orkrOYSCN&L6F1+h[:_Yr;kL;,,12]*fk)GfX:
%Zk)ua2pC/mUP,Xt62V0]/YdGk&V#F0.g)W?`8BAG/[Q8a2i+V!2QbUeIrjp7`2"dP2uCKKkM2H>=->H4[u/(2m&nM*V'U'"l-91d
%=PgH_r^NI_fhLXD,`56DiVm./)tIn^Z]NSe^NhIXbY7_KdW!#1hm.`!bY;4erAWsPOK(#!^WG)]D&]qUho)7?1f*sd;J/"QGd$AH
%FV?ed)'f)=(CG-8:B#00B6eN;YP>kH7QMV,rbl\J`feferscl5H$LA*DpeZMfm;"pPQ$En"UtBK89AL:%KAA;=61bfqJQ_nIE)92
%Xk-[R]OCgEZo\r@)=3%0(F$u4fC[tE*E+?@keEP$l%%t-qJQLc3$,R$hk%5q4tlQcOH@:pdXRJ*fD*,tp2;K_,iG-XhcQe@XaS+d
%9dg7#AX!(^&0MY`NW#?6?+%iIL&Dr`!bgdEq7#P$/'s*)rYlt$M8?XmhcOd'.gGs]-db"PP<o3XM3c%tkeB9ii[SB1s$kq&jWe"+
%Do@J<QOWe0&k-uTW_3;nfs!*"d!l9Uj0h)7^B4cVdg>n1WIhYSfaqYYA%6WdIq,$jj>>_tItOL=PFuiuIp6L&MZ$a*_4T)(X-iCg
%d=3f.)t`%a<.`G3qJUdFqRB#p]mR[>qpnPK$(`\"1<%@%DCNR=p2;iDQCH"qc%)H7dB0['PF[n)HGfaLbM\!km,(+.+8s(U%?-Q`
%:0[F1^hO40&,'pLE>jBHm,'e#EPKj0qfcHH>RLr:2iq<#2,*^^d_mUWpmV.#;qLf_NW#=HJ@!<+bo7`^=6,&6)kJ@<^IeG7$-g(R
%s,G7;3:M]WrgQ#ibpXZ*s%Q6s17N+D^Zk6M+_f;QX/+:"rd21t6iTk.NTn-/rgU8m]$[M)J!4EgRIe&;J"m75VU4PARB@BR4e_o<
%-DCo+&,L4jN<<p&keBDj@q=k?qJRo3/:O2_hrmt8-Z&%^+k@Z,#QH_Y":@0a^Tg`M.p;InA"dtb9HO,hb,uWYjT!6HLu?8.0X3)l
%XVMSSmYtM.d.ZDtp*B?Nre1<@KL[WEL&W+8Zju^;s#3J/Q0*A]J!3:-[_D6\HN9tk/tMptNE_]$m,-'UTt2EIL>S#uXMOiEfX-o)
%WP=j^#J/YIT6;e)RN9?(2(5`Ii;G96BsZEuh]-%/9\+,u@$1BJr%94rHUIU7J69[<1raHC7Xf<\6;TM8FNaE<GR?6C#Mlj:)$LG>
%(#:g<T!\>`pWZBAm^G%:^0,QNFS'@[DhoWdW'U1&U'9A%b36P_dG:<NFPi'^cc+$"%6K4>+q1bqg+Yu=]!-Tqk#dk%loU9Dr#kl#
%o@s:]),?b<h`dQLI?X8go^%4`Rm^NR;\r#*k?prRNEMGie)?9r>:#sq4PY63H>>n#NG%JS_1UEFhZG"PP`WHf)Lm)_/,.NX&JW16
%>F^-+s&lm-+2mf2N&rW4=u1TEjPWdG`q2tp7!LhHl5M&h#3MB=S!@gucSr<eA];_5qY%"\Nr=XpRrKP+.GKZmJSEcfc:7HN!h77F
%V)?XZD<]gkSo4n9G[o"ibrnoi3]WSA+UEPfI/C0id"^^&n&t"=_=UH&<$[2.VJj0sJFF#s2[aj1#7RJJg:gl2_TDGparN4G[`]%&
%0(:%id5S+O^aLmm^'QFf]&i`7d3CZG#L>=\B\i0,`UcgP9U6+sSo;UaWK%2/2j*%@6EN,k2`IcaX4cG,-F58*K+6-cZY&^CKBAZc
%!\LlIo*r,tf(s<!^:A5A$Uk9E2qci^FpH8N8I\h;ZD%)+&>BcZ1,+<,H_ML,dX4F!9_C!^\(Z_B0/VRJLjAA(RW$N00j$1MRVtBT
%COjf['-1-qoejuQ949["@PltA01tJF1uGMDF^NB&br6sZpELb2hk!NKJ20&7h`sJp*].$6q5OItD(OQu)TZ?nV>98:M$V1uq=_o&
%VH#Zj^*+YbjbDmOPBE7]H=Z%rg[93iI,i?Ne6p2bc"E35FKg/AU1(ak@/9LA;Y;C_htTr@C)J;SUt9-SeqW7T#t`oXAWV9q]8<;#
%OF1!db[4IC^AZh@Bom`6*KXbc8\XHW8)nYq8A85h6O_U<^<pC8esI`?SpOkq'96uD:\'W;nVn<+gb.+o^<onRUY[bRZfnQYZnQmf
%ofX2g#K+#PHAAe;pnj:UGVFMD_X3p!_`&kI+`&%1kp-GeMM^O/bF]?gfeRs(aGECM9o<ktQa7>snP*1[AfIj$^9J4\qO&&TWfMO5
%350YJG&Q5XI+)W+@t/!\[*gfM!B2IAahl/QK+5dYW?$WEK;A9shaa-L8b%d+@G,g>MJitS.f)I%bq(d/!I%9/XYK(OUA=M89P)Y"
%.rVOIa[5S.Ym$JRk*ls3md2iE^&\HeH233X)fNtLp#PqgQg*Sfn9i^P8XBCLk#_,N%L16<DT:Cd%F$h8TI6W5(sP#4,:e!Dc*mn_
%>rn\TL00kQ#0jVdJd][Zf*6mS[j9iJl`;.p,i?f[@nuQKjI=gGTs%#$$&NZjKgG:Sbdh13Qj_"p@]2nJ1.]+sUs`Pbf-K6A@N*uI
%&#6UI_VJbuAfQYXn:p%o#,ot$/'U"g4c-HRU2R0X[%6S#MBq)<-=@C51Y[tdH\:N$QA0E6DMZ"E%O0rY+Sl:uVYg,tU2NSe_/D^5
%%5AO5#15@N@GAZ&M7s;bOV`6RI5Aj(B&+U+k!Nj$Cl#e[.WsXV61g-h-ACk5qIZ[[`%N((D[[4(ar*V)kU19$2i58:TJg7^PLbmk
%>KanTNP)*<4Z+S6[jHh1JD1W`lRqpK`UrP#Hob.fCJd`%G@T;[IFIma.5"<OT&K0@(8c"^G&`l%%F_d1>?9Y)<IuZL<7i.eD^O"7
%_eLdJ/fD)RR(e236I[U92qoN[=Hh6&#4o:ZAGQem&E#.h2]Ag'#mSj;D!okh4^n0kbZ9/Y$e%%=O"[S.hs>ae"WO=W`9qs9FZ5`&
%Ol<G&B#XBO##SO3lY\J+ZX,.DS]f1'R>kBt_t;2g0:#cPVJkN6lWt?Zl'jP?HM9;G2_*+;[_SiU=\?[SW!:j4hP)EpqjQgiY=i);
%:jliHCE`S0l5Kh2]4OlfWrsQlT_dfI.To\u"8+U=#,D#a;]:eg6M7IcdC:lY,Q!um*_`GL8Baq81OZ#?FGl0qoZ`VJV<^%:Dk'0r
%@70[HFS8&`qa'l!LXrd#Hm=NBdp^/cNK6u\BCL9nC9%?H&Uf9F=8QCCoM*%-;DATWD^)r;CS&Z?N<--UcsZ^I?TBON4^HiPgU1jr
%^=D'3IA-LLE/3+OKBaBg<Y')I^:@:'m<#]<O8L!gYX.sl!GhKhAD[e'@5/a4hu%j=++s"YbkHT'hXSF(hoq@]n%#.hp.Vu+;2WbL
%CP-YW4JVe.5)aV$O^ihh)2?-$aS*lC6JYMdfY3bJ:=>+2h)?[%*I2b&qdpm?ZUu(/"5!mI'4aK)c./a3/n^<E5/t@bI@l#RVf1)b
%G]_iE7KS+TV>I._#\SM4I:KXJY]S<APFmT+LE!gC1bl\c8b^Jk.a-WPh7"It-<n'"L]JVl[VsA0_Xs&Z)`+&7n6<>>>cHu[KC,-@
%-9?(t^A/&#&Ic*d4G1Z=AG]Dr"gB(dfY6SaU549(I5>Ek8m'`[iJl$b8mA`B\F/G(*G"&\".6SZaM%ZT1tnH=Z>YOjcnWYViCYW0
%fHC(bg`r72i&01H`6E@aBd<L%S/7R!YU97egNh6/%^L$!IHnp:B4TnE%jch`OF753CPgS.7eR8t3BK-(hh\gqmV5XJ,J$_2MX$Z;
%.'B*pI3W^Y94!FgOb:fFJO/qaD/Za4cSsds'%92=%=sFS@JL,oQUht'-M`D96I9jqI']cdKn\Nug[6(dL@9#l@8)8k^`[C;D[='?
%CD]ZG#ehJ04u%Y-c],`^"MH/W#$2gdO9WHY$lbH)D>CjqLM0fR]htUpT4bBT1I)!D?pj>kJ!s?G7dc6kI56opDK!miJUMZ6m0s`.
%nn-&2>mMX7aVf@GQCVl<^#>j#L"2[I<AR@i8A1-_`IbN-Vg"-C2*<n4d8XhAJ1[;J'U*NKE-amG%-3&iRh>ke[[c1k]e'2TSDJ3;
%qhic?ZlUnG[tNV51ii/4U[HE[6upY"_c'5V>i&S`kaW&6mq2HP:G-SHMY2/0jA!M6g_V/Q]JY<qPK96'S2,SsM7b9L>)3c9;ZPH_
%&pZi2gLEn;h8u);(ERMiH-u@")Xm)/U73^jW)'QN/L92oAQJBQ22=++j4"hKDZhGLh(e]:Z%oK;jh7AVmUe(FqJPlZ@/:B,DT%Z(
%bT$+jluNIORE=9Ea\0-R:j5:m'W0*VRCa%V-+Wt^mT-9P`4TmJDM\*#PIVVFP3Yj)DW\jA3+kV7%5HlCPIhcs*itf;d508VYp*o"
%h2RR'Qbu/G%>>.QF$n`B08lX&2Vr<U/5Y+UBY1nDR^(i=Agf]DR1Y&WTPssY4*eF=oi!YbM7\W=,Kj[3G8'8F2(Z]%"SP]G\g?c6
%I)9;jlH.gU80#!:>NTh)?i5`%gl7"_grm2]G@RJHhn3Og`ed6KS]'=uF>@m?M7Xq.[[kXuO>'EbWOqDqFHWf.WOiHV,Nq@j]4"u!
%.R0oE@=^+[^8:7pOjm!.W4RW#4+MgE\f29aZIr&u/*\,F6JYAW54gP.]1H:1N'Mdp9JKt74_s-7["bmVV(^oc1sKK9\@_PO0%>Te
%RjJuQ%Q<+u^qR3WD/a\T+"W_^E-HZ_/1C8HE-IMr+JcU<E\!64+[*?IC&'!c@a!TpeS4I[GIQS*EM;gO;t:692q*g!+e6d49HI'6
%!b:Xf!.hcXXbjY-4(4i_+RV_Z1.ud'GI+'ED;VQoG8'eLh)hRIl$b*JaI9[Z+%sgu;KmIS,]R8\L202MGg"l:gm9MHR(FMLan934
%Auro3'B3oli,H(A`8.ZdR<,\Xm\\N1%S\29#,FKs_*QlD\W)nN-cFgll/r[9LqB'd7^I$Ng^Sa1RDfDP2ge4!As9c0WAgo9IUVXK
%Ehf+J%-DHF1%W9;9rsOZ_hP^kjY$VO-?D+s5pcIfk&.gL+oa-82o'irKdUq#RXfk6L:A1#nd#]]DP$!,_[oIKEhnNDnob+K;F>!a
%Fq]uK[c,EHgJ)(Il1]h>)\QE\#B)OtHJQbX_qRm6O-Kd![i:J=SMGK&)2em@kLR<%X?#gu0>uZb6:br:m\XopaeZNqmO$OXjtht+
%)q!IC(<XbSbpXQqY;ate$l(!mBMs%Q)8cC+;Kl%cE[qWpm\V`J`@o`sO:ZWk0R#=`R%(;gl>Fgo/e=/XS!i6l`tRlY!dP,/)L".'
%.lqEcG=/)5SK%!7:09^o<;"C/J9"J1T6p>$_DFHdl4#4>lOc&)h981/1rbNdRjE>*@MmVNjOSHc^Fn$lRUd946JY?@[eb]g)fDYC
%9!r*qL;?<%OMT_S;<a/Yk&,LcNI0B\RCd0+0U$r>G;F`@BrZfsqts)OIA?cNQ+b_`Xfd4TJZl.1pIP\E'Y)$Z)UdkNp-tVrco#6R
%+H!7CD[7E%YsSgL=#'&!_br<C!X9NOA@6S8IaqT@KiJD/,`@1]IUYqr1/ri\OD3G]ECto:,9dp[FVA42++_Oq29ZZcWX,/HI?:GE
%Z.fILOLR&$fs-ULmbr`f+5N/EC%WjeQf?&G?"ET$h[sr@/:_DE,QKJo<C+%K.VMI;);"-H$7)Xj4q,eqc&-Y2KnPd8r#D)`4okD3
%eAQ5D"uY4`a=EYt,dtAu<ap,D(aOD_\jn\J!4`Hl'Q!<gS/%DFn;\OK1a5IDEGc'!fEQ+i7-ii#;Ll%kh.sj7Ec?3VRuV(GaQal[
%.(ijX<s/=3=?u,i6B]eCS:pW.K)pq:JY]#86P?(3%e.q,;&cC%6P##kJq+Qp%L,D`MFEj%K@FdZlN5s5'`b7DI3\tFC,+\,FK`b7
%3(P'Q:E_/q;Pg+NMi0X7H7:lTQ2i3dX<FRuScP!2*9[Z4//d,/""G-r!HfWgU[]?b5,.n0j?D$c@8dc<l:jQ"4@=mH0Ioa7Ss=*B
%W7@(\(+K1'L]p%r'H=)R)^R3![G<VMb+t7I!=LBVDnYP)Pn7f[G0dD#D*ooiiILc*pM=XMq8_!?,cm(o0`!,M!bcL?m+&o")%^7%
%=",nSaK&N@XO/ZEb-+?S+"ICPK+#^R@e.=.+pkiD(1+<dm*_]!3e.^\.G:q!4!b9ni5a)b:M\O#%jji[MO%dr_pTd_0;0Wmp4"!&
%Z`mR7[7O3T'a1`l*In9A2[#r.O!mqoZ)<E-C=H45MuY2!7/@KSg&`T:.pLT5J]\l[S*ek.HA,T>nHl:YUVG)YV5Ps@6j%%4-tlad
%HVERabc^N:,N+D=Y^rI$=K"/M2eGE4dgfh=f*@jIUcq<)(-`K_$FIRq(d[d]\JqnW0tj't/XP-Y=c(oWM4NfDV/=XRK>flCVZ;=7
%aR(-BVna4\27!Kg#[b!Z$KMr-$7(lZDh+W'SW"#V4dc_m=Ja#oA3L%["0;5`m8,=D[mBn']\eBkm8BiEAaDb[_F,60dXg_N0c]KO
%nOq[XY!=NXY:53EjomLb4e%W\,G5e!c+RKm\&l5*NS8s`^sqGAj:;F)Ggqm,)jsRHNaad/?V!/>e"@*mXT@o&,\)OjQp<BnpE<93
%:A=sfdR1mA5tX[i%K!PoFCTE"/f`)1o/*_LZC2f/fp>QD'3SCl7q:%iK<ii=[u]=]c)ZG20IB*C9gZ99j&0?BOY.Wg)qZ=22_]Ta
%95rKD4;E\oZbQc%`#-D9rkPa)r#<XiA?GGG.Ya7L.#4B;dAUcWSRN?E@Dk4f1.E$h:3DY80QH,;Fq4"X4=aWH.<>;?P)K2P'kN>)
%Q:h;`2=4?l>hCSjCpmS:&Sc?PKL=l<KKp05P`ap^F-n#e>rsF`VlR3![RhiC[:l]_G9$jWM:WjV,512AdoJaJbA>(Q:"e;UGIb$q
%,T-rOXc#:E87HY(JVJ:^T&P9*)NI`qYi$D#mDKhfk`#7<W^AI<"6l]Y_G/WU=sb(F%;FA$n2W(0_t)kcK[+-=MgXSt6>4t_H`9A1
%JY&6T8fCPN"#l@n&o<=fe1^n36EcRW%t,,PXmPcmk2?66#YH4A`W6p^2LGX2$Q<qqpYuqJf4.&h/gGe"bu"cS7`#_hE"P\^[$VG%
%:#Wbs_]1iV`5RG3&+-/4#Es#UHSCZqOgTjr1ia7h@F7PFIprJ0#`$m=&U[Oa&TsI-WB.`"9c=>.aOe<o(r+Kl1$OeY:^2+_`8#DL
%jqr_\&UA%1b<'l9,BGrJ/8k=i`i*#W+2KUaA28rkQL.4@-4DJ*M5'nROog+Fn(IYIM.TP'In/..T!q1ZaE;?O0\:)n4'GSSL:$Gp
%(hX_1ILJhlc]gL^A3>pT2h>(4NXDg-9gl)9AR5Jl[S^ed9qehKY3lpXrD,_%XaLQaAeLS[h8hP#9kOc(F@rlWRTq_NMt7cGl.Eb\
%1es:.S7#rsHekD1K0m&H`6@A$g8hn>n>O89['53H[+Q@U$51]$7+-'$2=8OW,sr>e[p(79H>C#Ha^qF;,#q^NOU1.`.E0c"@O42P
%3HmoBlbf6`#eUUlcI7uW6VJ8CCo/1KG"kQj?E%LpmB69Jjq2aTeaSO.+#[K8N]k=Bn?$m$?i`tqq8T93k\F9^4Nm=WY8Ld$6&\hD
%r9uIc/KHoq_q`co7F;O2O%9lKI/0ckNKCZd(W_Zu:8u%gn0CsAG,*;06(g)[\,@^X0F;r\P+WGB@4?cF^dW_*`r]^FlXXNm3bZc-
%i9gi30J*_HP5Euf0,fk*`od]Kc,$*iFSS1Q*'EEC6?&-L-c<j",K=7,CljT;B<2h5f!*]G3B$@Z@)d3Jp[;Hn(J3IOS&K/"nAQ6a
%g(:?=D5r7]j=VUKn7fHYL$gjV+Z,EH]Tck-6OCi6mDt!AltR4gW:U%qpNFf(*(RI$]-?khn1kUH`"8s;WZF<kPjLR,8@$+<kLqYZ
%:d?-K@133"+=LIclYinj=k2>T"5'(C-oT.1F)5n6qQ%3.ZEdMCY!ikZ5nLHV=]COJ>gNI;?A<n6(g'UU9s\$5PBMTfO.3POQ53a,
%1o".3@)5\eMr7W#+9%P^L3;>2CA/lOnr+i@Gu:C2IaK-cR#(>ZTo>;.YKR_a:Jl$hW8^Jkq#.fOWAiq9&g`M<p$Xo?UL9f)G`mA<
%IY32-R4G4(a.o:/QhV"R-cF?9\RW>g1mSBN1;US1H,d2!V6pSK@i*+Y;[aOY@C-5=f$Ha^nMoebA!;UOf0Et%l*?/dkalZ+3`eEM
%'7Va/*=Wr\0F.ul(4a!0<^W=\QU:>_o2S;[iJ054<#E.n$kSPoY#3RgNh!@D2BT$V`<W-D.iiI9H*YK""j7XM]rG!Y:9u@*[!ul[
%gdEAR.j?M1]u1WK)kpet3#-sk@P1cM3u1A9-@B4@$FlrVU(j[q2*X%K@5+&MF+dpP#2S\MaF56H%BCfR98L.U?M&q`Ni'Ud0+9&i
%g#8olV^Ln.P*C.b"hmprJYOIl(3Q50Z=n3%!>J0s'FQM.?I6L[RVqK6.8:t-Cm*alP%Yg6"'KU%B]fC-VOR#=K;fB,!/Dk4TW7Y-
%q%8LgC9#Xk'`o%n@J"U@5A&7N_oi)e"Q31B>>PJZjM%!hkGgSBX@Ya:"n=ElDLG05`i;Ba1C0fmA>/T[3]^Yf5fHr8W@Q?FN:c5G
%S,t0p/6']jc\<6ALO<\Anef_>RRkLJdtuF-UM+WNmb4DJ00`:#)DhdJ;`29rSWnGq^D02(RUm!HXU2R8JZ7pZpTOg?8-3FQ(UPRR
%%BMW?ciu-hhE$0QX;^rdiDdY.7Mu:t$i&Y4XB1!'_]L%l"!#cI-neEl",e`B*%S6N",nC:Z-9"T>3moeY]oSkJpK*VZU;s,M$5'&
%DG"hEB./])pip1U@>%s%n7)Q=fc53MNV[=_6XIG:R<mp+LB+q3@h:S9SV.>s&R`-Ls$m0R4g_GdR#:6bZWoM<j@nWV'n2JbLS,@M
%O===*aWqTr2VKO5PC]ZbEWA_F.B8"jp)f<5Q2-S<Z'745osmVB!O\?%%L.5s@F1fuNqh$kN*03meYf32c]FM`20^7I"-p$sSsk^%
%Zm&j6;a)%>c#YPR(.uu,S0,I$:'F$\\TceJI9JSW\n>7]QO%Hc`F)md:?I#W1J^<eW`]<.QV"%c_V\UX!5t?*FA0[Vh?/.n.b#n>
%8M=AA7&=\#?b2(5\SWOL'K2DIf,,Egq3TJ%Kr&UE6BO::=nbr^MkX.G)\\cL-UOU>89/*`6e_c4VqV^8.s*_5:PFF_3gS/R61M1$
%jHdQ=<r!@VDi-L`)*(,(Wa?Flim:>cg>#7mU=F>l_C6b$&D`&]2/AF4_fuck"f-$X^6+=FF<W)(!"W5okHSEMfI@OZp*IY#0p(@B
%7q@u"-q6jj?c?'3gRD\h/d4+PX%sh"B$<sW(4=_mDaZE&q2]b;0RlT#EX5SU+9_Bk/WifJaI"HZ=OWXO>-6J&.<mDB:6Bl)V%Bc]
%`c&qR_b;F\/K_-<!+$9teYK*r?aSq)^CnaCBh"nVRB=D&N9'TPCI_8T_<n&;SnOg7"EMCBGC1;p:E(\%ZSn3S![M8ZI6%KpR<99u
%*$oV=1s!CVA@[_Zl#Cp6,fUm&&I\>dLb2Zpl8T)e'"/FL9s0;".b*<_4$a&-#TT-O)plH:g*3>oW!Q#pWPoGoehNDBGd!iS6&]@e
%,Rp=T7OFPKaVNYW44,Mi.)Z.J^]99]g&b'TeKe1XPlRD].D?6bb0m"gTI+*VN)n\B6cnCh)47;.E,_,V)I"%O!6Bbno^PmSWNOD\
%a_dE!AXO/D!R;?(4/IY^&DeFKg2LfM9Fhh/FM^Gjof+3KFomsp"@2.IQ11O3:r42-?()m('Ko,%2_WTGX7WKq/Th>3Q,s.C>-(]k
%]0U*rF:E8G9GR\+L>5$6jr#<H2a8.3Y^3juA2!!d2Ja#LS;U.*a-[MVOB9O<\>!Q`JZ6LXQmYE#!Osg!O>YL(_'6]+agbkYEY2Dl
%DXC#dhn_mc#@g:<,"Pg7A?\Sn)%IQ/#0[^qHnMFj%'HA@dYbu?6!T%NoUr+&J)(\D;kdqddG+m\XBEqO@_/!hQ(]KC&&RBsO(]B+
%Kn(a,HtK)qTW?o[gI*7TY(f5mkot.XOkH-*kl>M27XCg^[2!6f.bGpo&WiN@)I[/'+?]?c5m^q[4g>[FV#B8qKD.rr-3R1X9o.ig
%@UsZq`RXt#+IcmIaCl;LO;=i!qP_mU\pZ%;!cI<1',_DXK6.HP=Nh?7,f=RRV.5HpBJ22YA0O8H8Ju4,0MX`us.+g73lME?cTmj^
%M=Mj6=I*>EMAQYMd*7]g[HUSta=7F+(ZTk,fe$(]Ajp`3\++uSnAh*QR]m<c=F0OI#$s-9Ro2DR%TK-U'3lRW4DB@BQLcf%Wm`9%
%BN$)1Qo%3f,-u5Tc9u1F*He2?ge#DjfW&q%i%YMMO"FC)1,hu$8Q9-=Ha!ZncLr)Z4am*l\i@-qLtI\uWXX-Rno<WR#d"**#nS,7
%fP!ZId=EMVUDMOJWNX"N)9iSc8VohU"Hgo%L"XZNg-$%1F%@`X'cN9=ejl&pWfj&^A0se,R4$"-UBFR@nP`&U7_s<0<9/-DlG3W+
%.E.E8<9gD9`7DS401%;Dd2SEs=:d?^/<X5"45[+W+[,EFJs+J1V(m;b1qlPii\JT];N8#98bNB1=BJBK4I;TubMF#"bAi(C42&)u
%H;n0tCa"]fA`,Y0/;n-rM/'mq;K!$pVIqu+3ZNH""(7OsRmK,s#tCMUJu6eF"6l_YRArO):Ir.=WHqV<V5<=7_AI]N&h&ZI`(2\h
%#EFMfOF^B>9*#6oOq\MhAe>SZ%8kD:BFFppJ.3;nb_Bg=%/,`-BubF/U1F=k!3@nNKo6`Yh&E(:[u;C[OGu;5PlV,'JbM;Q?)4`1
%"qaLoPp`#$CDU*rK.O@&q%3$n4GtkOpsn$_;R`#SbDd'n2s&1i<1<lZ)eo!_*<7/X\)u\T)Vd-n)K4<Ef/"&XXs:E99b:fSgBfQV
%>ZK]0PU(jkb]7@_L;?%&D%&S+1hclF;7Sr\8gHKl-":B*<'1r%%&/O/nIXBL@.VC/J'_Xo$Lj_&Ks@bql38af^j<#Ib&S1Z:b3).
%Q5;o6OC\66TjE7+8Et^^mg>d,\>A7c`mYBOY3R3%0B`GEAC3_8n/__UR,cCX5r):?W@)kb9YMrMlo266`!K[D=u`m.i%]]oYRt&P
%&$a_'8_!oFc#\uj%W56s6V%?s%?`srKLj0UEo./Q792H@1W/EY`["07O%nd>W/ZI"U:;Gg%I[`m59OQ=Op11^R3%""b&d*[RP9B$
%J\K_G,c3#B4;3N<(]<2;i"iQ%6slMGD,?WC\"-,j"3p1)W-Y3bBrm>P>^T6SBa'cm;OAn+'UVI/5bHtOPM^s0,I&!E!E]K=K2s<;
%!`LA2Y=&iai]A<0j+];_JWc!^DF)A[U[2Si:kIba_;WjR,G:.^h)>fMJs:t'3_?W$!j`4Fqa.j&'tf`P7uYgg9e&2dJ3eO^&HFWl
%EH4s<;Oj;ZMU6%q6?h5Y4ET_ZRXe[*MKM2(M`8T):PU8(Vt`<oie?7kN'QqRmh[lLVHhIrnSp?2e42d17pH8>OmGqJLu8VE(su`"
%6m'i&bf<EiQ_WVfQK1qg:(_#'5I\p>LHqSVjDr,/9'cSCqW)e+l%(+8&14:('!sopVX3BJ4%YlZ!#QqWbgd)Sg#E,frKJ75%P;])
%#UV;>M'\_N-^G"Z*AX?KWM^5(*o]1mlN3q'eefK6DKP7j,FXlL58&s3V3N;X,U\Z6YSe^)Js$s+5tL'LjcLPr:=2C;=`fREaZh]q
%%n5<u/\iQ`j%.D4*"Q"A7E/^@B9u2`3$+N6QP/T/>_\Z=A0f%s&'KAQpI6HqETq*C(n+$B(n9(j=u`<&o>q:`F3$7@`JQi!'-)%O
%K`@]&/eJp+VadZ:YhZ^,Vr,0-P(s.&-[S'q+gX1D<q>/%4WHWb(kdKlGGUA@2b_g179rJ_;]).mmU9C6/CX?(64hV^11lbQ*%f+!
%&GWLn#<@+dN&/D/S1T7i"k6cX@tXI`d@M*e)cO"l71!:[:QBW6OWqsg(9L2e/D^EW&,*0]4[p%&Q&HH<0$ed+Q^jt@Lpl$R#T1?n
%^!R@NgmL2pfRh"7;AB[LqUETG"JX(]%;\Y/F[QXOMI]$(`<#0@[C2KNMJ1VfmGSJ;/:a'0P!b1iW"?LT!uu]hZN9%2N\CJb-RcoT
%anjuC6LkdcA?ZtL^lX`W8`ebtAr$gm6k$jX*#l\4en?B>'86A9coFZD%]UTh"Yg[LO9PFSdalc-7c?Oo(B=k6&g4SW3J*9A_hN_q
%<h:.rS]fNj,T=f;eHj8)m)mK$LqkKBa`+MIlm5QA$C6ObBqX:D,0?:0aT;dUkiIpsho&24PuOKZ2ScP:*&G=EAcT>#1.uYLbad%$
%`$/-8KB/"I7Xu9tH)'HpCi%uGlLK4POc"I!5t7M#_Q1INV$0/A7fF-dZEkcIKj'<F-nuq[+QON^G6aj4jp*u!`R#ehL7#Sp(il+s
%+@$jS;2hV]aVZAfDTp7"+dpTB@+<G0p2cU?dRJNb7U/TSs1#*LkbM*&@K^^T==_nsa/s"6plMomG)UMNim4pE1Eq;._PfJo-[JKJ
%L7(:i[NNU^$4BC/gP;k<8#-aY^63X]KIm&JfT1o:O+j==g9U_]^uJP)13!7RY^db>+tE;\30OFCO?2E)_p,G'U4A1A#WsVhcJ6Qo
%1(Ps(jK:@3FhMrJMInTPUlZ*QMj#&[C3jba!kV9j4**BtN(G]3-l,;3MtT'*a,hH0=C'crPe:d,3@'^XgXCZ='+CS6>bm1+F=LB>
%`T<.M;U_o/jsV;9.#\Ub9AVa^%c@G>@hf49dA!]J=Hd<NGWS27,=eoRF\E+$S3\.nRM*9hdt`FP&'Nr(*gPkbd[1Y5XSJr);AdN\
%D.!Mq!hi_0;:`t0>7a:ZB,AO\#1,!eb=;_ZL<M)V_r2o3I?>^^8/k5HTu6O-$q)([S@6;%<eM9FBm5Rq+:ET<!u9m'UC94(%QOuL
%`^jrX,caI]\8Z[X;nF^L'L>>gq8#KrW<`q[F^nAcM%OKAHB4(2.8D9-8o>Fq[pU3^eRX:$/0qD#/e!F!R8GLGq&<I\e-[SM,/W0/
%UCJHGXEMc+@_$b`Q>e$%.#_^T)&7G%Rrt]%Ftc<(]39HF\087gH(a2N:8ApN0eRo8jD$\QOrO5.XHCNC+qHK0OG/b7.kdm7FVah:
%?<2uEW0Ke\+_)m9#AaUO"i<Y>T;P=UKdH**4Sd."/#53.\UhqaAYF@Hj@(f?K.dq$j?Ug2Pg"qI>0*TdVkQ5.G6!Y?KQ/dMes$rJ
%*1W647E_XcD5ht0#L`.:q":;U]Te";$d0o'e,Rcn_+.ZsBntKHi(CuY?F>1BV5&o.$hG/B@N5cS-nQ11O:6f?"UdLt-="oR8<N>%
%)a@<lPNlIci2aWD(a]70P/OXSF#i?8WL*]@.[!mM2mtEZiE/j_9O&^4Cc&._A;a\ckc]eW8%C]_8N@H<D^>\6W=\hLq)(VV=%oDE
%c&um=q84iCKP")F!6/`J<UhB^RPk!TQa]\ebBKZk<(qo8$"H@nKU(=P&sh6PJP%\#aO`IR*V6nC6n;H^4@EN55bY>)M.8<j)6P3:
%,7BeXhe'84OZ*p\[A!Z(>bf%I1's-oQ85S<9NH=EC'S/HJCFU+aE6EpX9mI<]L;OD.*X')(lR!Z;3IrX!=Uo!ng]?7!N^H8c,2d^
%eNWGTqgnn>M"Hg4%2b3#ZO"IYd"`sA\.-rA%n9I3.Cic0%+m6pLIH5UCZ&/[%?^-Jh(:"K.O4fq[cj7PJ;2.9m80[:(0:55%O+sZ
%\bgF1Th+1f3#9XOiOTT'!LT5uFR2]:GGKDM10=f:)STQ*?Np5#@#^]mA`6T6jU0b7mG&d\Zk0`V6"cGCQB!58E-htL1'q]gTlf^M
%6r#1KO":X.#bG]*hrM<J5-)?%#U1Xi=X7dm,IWT916OglLkfK%TF[Jqe#=VF9QeHRKGU9T!';h/E)Fcp(>s%CR:ndXYR0i?OFRU@
%HWIsj6kLRcXIh!KrskKcf$=k$[^[TQJO71^KNNf@iGgrCRk:qHV(<&F%)ZIqU>@+PQ$H;=[Z+a>8Sc/pCdeU8OTW0;<3ei&%^o7L
%&F<*Dfa3id>$8Q>cK:hjmFADk\U9<q,\D,his]J1_>BmuW,#d)3fYa<I;M72OTtq;/[BS.HbcZ8+I+_\[4q^"'1<$,-5g0lPi#A/
%2DO?Z)6.(dWP:>DqOV.+Wm`Og2P@`1_$Pqh;#c-C\*g"n^-g66QtV$rA_=jX84\I(@Z(oR,r^bu_[7nRGE4$Hc4.qU6Ka"\T3*0`
%pj-6T$1PL%i7"FI*mbmb`a]cZ9f9Xk.HMaoKU`l;AZdJ^Bl8P1n3s2+;koS2$]UY[*"Ge*LJ\--(!FtOU/;dUAEr`1^`/tJ:L5jX
%Kd?UC.LIt$ZL9"6V<EKrBmc_K:Y\bcd?an`]8I(/'rdsPN!/WR;5b#te>Tcl7Z!Mj'l`r2!0)n+P4d;O8sJJY_BCX"-l-CfK%P`-
%:rn=M@fW`$aq@p5DRln#;)4q?L(p6E2*?\TrS.l.cS'?s3'SFhFi[T[.-h?R:^F4TFi$.?B8e_6J^'-G^_a1YkJ@eh5e_,Pa7GsW
%#,BrsAVVQtM/ci_JB4VN$NOG6hIr"0Il&t*63#F@JLM8>i5ZII+kuA1&fWR?RF6e789GM>m7-H^6o4(We/WPXZN81b";d("ITRh)
%'S`,(nY+2?4HfmgN+VRBd]s]-9\.T<>+tDH-t5-b.7f[86\=D*BZ[2^'q.7*5'dMFJbq*enPh%).NDrn$^S:WO9:&Hpp]sS--%E'
%h44S"+lNm]3Y\j/VK>G%;+)c-p.<pl)lIQhC'5\9NK`a.U'NLJIAB(HUdCG#E*JfAaG/hRKAAgq<OIccncD@Sg1XCsW$YLNj$U8I
%MQ/EVhk)M2%g:Z<h)CKZ5_t[gc]ai=T*C@l1T`r1$$[I)89@OB*JA!H,jJo!;;a_u/p`4Rl$5##gF`)dc/`>$6/k/l@C2,F?1X'/
%69S3lY''FV2I"rT4:QZaW9-Fr`!%`.7Z2m)]J*nS')j$/LY*+f[oaDn>W-b-oU'u/7"9C(nKECOPJ%5V;%f7N,ed!kR^A%XliLYa
%>`+:u0JS/aA"_P(d>"p=#-sS(.g6K8KIriA$"V[D&u"F8>l$.,2KdN35t3!npF47O/G'1Kj8fSMR1Br[$5,XW6'u8@Pm.:G0G4Jo
%.4dT[f5hCIG/U\DmO=77NdfB\Jp3/!md6#ur&\1\/KVVm7X1GM.dT$![.U%/;@&('Xas\_i.?uoE:1C^ND=(F)#r7'%<aIBN7?8]
%9nNUUJlUu2PZ5_bgZ9oH2b3^Z"M?aC'6#/45#-sIiCS;@5'"=X`0,M)qVlIfW&>56q7F+X9iu&+LKTIqj&&4J)(mOC9g"+g'1H"L
%QN^n27G!ZA/E(!2N_=:^P;Hlc*eZb?8[3:jD!MWenLCLPKo=PW"hjcmPor3AdK)#c<Aq4EVUue6>C0DA9!_>E$Wge7q$40]P*YRu
%``/ZtShRJ7EDP!k&tD;$L:LMO"WUQ6#\oG06cT<K6S,*8nX6#=+2X7&X!F0R$&5N4@O,qZ$[kYP=:c.qfnuIm&etU3E@&a8Z5,IA
%jH[#$=%)hZ].Y)Od3oT1,]lg.Eo08/a?EWO5n]W/YYgS=K^p]Y$^J3q8t1U<2:W3KeJS&NYXK1lEET\Fk`nY4"O!o$JW,oJC(;,4
%3X"rnH9>k5*pGCNr&$mAX\cJ5hBHuW0Nj3gTS,H^>Y-"$TA-(b3A9%l;^)aIUQ\]_&qoDoPS:3p/e8Z0(A/mQKZFMb-O-Op@I2T#
%]uN[7B4im[MN<WcZneg<)3G@OYm4uD=]E1p&!H97H<[K7J/^kr#?t#\6m,[VBh;62=f`Mg'KgteA&FBC?c2BaGFi?aOEV1Q!o=dc
%qlK;"M1Iq[!_-bkMVp=SI!ObN(LqSV*PR/)i\VEYZ&"nhl*83'1r#i3OHK_.]^ar_m?]ZULmdJCLTs9C"oRMXRiFt],E,]1%,U@'
%i[:P?Ch@i(*tOt^(Fr+3,`YiA\W'/d^pL-\2<(Y]m#NDB-?Gmb?n>7C#B!$Ggu56bAO_1]N&O6SA5qWe7m8\<VG`]f2K'\6.#/0a
%>,3nhTRgO^7hEl]/L6iLQ;^_?rd,e('S\mo'Qi4DgSFru#C__S1]>e/pt87`4gT9.2i;s,)?t(Tppah1-_log`C<Ft]VQoI2>7+%
%2RH!nGLHCg4Vd!,8Hq@'DN_YH,e9+M"Yqnh_^#3LKr0er'#9rG-)'\t7%"?(XR4k&<OB%cfeHDo.LME,R!$>FS5PT_34/X^Vg*M!
%;bBZ'Z@b/RX'db=d'\25L]SuM,(LG#[>4;Qo(,E>$j479e@aiO7,<@.W`/j2/[fmQoT@"7k-R^:cR>O5@Z`rW('dtV&q45?TaCg_
%G,F&>EekktU=1r<bWB79*X4BogGY@]m'qb:"+n&<6mKTP2PON6l:JMP]hktr."D`JST#MCA0MWeSsiWSTRj]/D!Bn/e5M6L6u,8H
%):S;iSms^pKJ6'9BfG.d_hT')Hn2%"A8*;:/dsPOJ$uR<#$L:9oQglu3GJ+YCa7!Y`B`;f)BIZLQp[0E3B<34#N$@s'7lsa"%e1^
%Uo+VRC<LUH-(&&f*/)s>!er]B`i$#r"527\b=)mdLC[Ma8c(s0gFTDg.!^UDR?UlU`[_+^-p,G37?^L3,QkL_kpAdh,!7)r8[^%K
%?Gr!s7tktp=MSq#J93ooWq\Kga=ChP3AB9"&E8Bdl82'p%TkhCkJC(5;Cb[6RSA2pKr8sS_Mq.Z"0k`N-9[!Q`ejF-X,56,RMJmt
%78eie_I@(o*XQ)%0Ye=;8-4=aWR1V_6kkSPGbchjDS`gsYUZ3o<[5H5[$!,(/NAi8Mc;Fu<2\H&dP:6)";/3ioa2\<8@QkMNMS!W
%dSTSSc?Y1)AX"T!(M:]M6Bu6c&Fd0;ILR-i^`'#tU`q*+@>&5lGTNE+C(o_jWs+Rnk93b-eq)Bl&Kt2$kUI8m<sp`2O_R-J,/_;L
%rM9C"jWm:C]1`sj3I9MS"Z9>db/qPSJ6A$)g\)C2A8C?G_-7KCA'u^=*sN+U,cXS[R"V0-(>=R>JjgBKS$C0\96H""o0K8!h\u.(
%ng%rT8X5cW#bts=8;$i,??"-:q19Gu5dIS1Pbk1tG#;f&aP*hHAQHc0i3t+3A&nat-"nH292Rs3B#>2QjB64);I^E2@aqmg,3&5`
%eaXdP5>f#q)8aa,*X.lu*Shm"'bMA8f&5McIZ%&SU5RrQZRmq)W@:]]'`ZW\i6jF</Q!.Z48C.2V3?['i1-J_UPd2Z>(imkQrn/b
%pa"Zc%R9J>Ta/$Mia<-]=%j"kMQsEC^V`-a40K?p0UVe9&e9c`\Y[<_RT+Lj=o/UAFsZ@83N'+;1QiLr!!jSbL:tI"0EG+8AcqoM
%bNL41&bW2d$ii,,$PD"pJD@[R:RI3Lm*];C?8S!Qjair_bYjFOKseStoeC82'+Ajt1s3bE`!SCQO<A#q'_36tB-H"qcNN/HkW!ho
%lcN0$125^rL:hd]4q_uEqE<3b.BUsgA$_p@s%4)/Mrtth621hEU-R471tTabFsB_474QAp-O0uWF+f"1gV1HGII-40_Z#5X&O6ei
%7rm@B;ZTZKQ%=Xk'N+RGe!e%0!(@I_eAGU&)c`%9[C@E7iCP;*cpEOYc9u+m^]pqVW+GN.TK3BS;:X[hFs-Hh?j_UC'8]^3&u(7?
%I5^MDNTPlcUa+IA)k;eCE3^_/5o>A.oD`qH=]".:A;r>@_mB3ZMKj":1m3;\>(1(NA1&E[]scUW"Jq!kC]ga!gL,5ZQOQS<i=@1o
%4!#&G6.JoE\I^Vj+Y+o"*h6m2$'HJQj@b2n:7XRJ+\VKdOk3@q.c`]iJ-_deN#NI'[NHJtXCV!cAs[ChdHpOugYRrp4pi?peJ'-E
%TqJOqVif`c36=/uo3Zkq*MC>'H(2(\Vq`t9CP/i,M_HYZT>iNrZ_/LU-Bu?2hpRf0c^engV-<_1Xdi6$JTG%K#aY]D873^+DDnJY
%i#0dmY^'/"&?%c]gk*IX'\Gd7^pY3d1'o:rn>JHX&FO%q(YiaR9HbEoUsNong/%qR:s*2L;C?`O,<-,&=euKB?N=XpbWS8/1=O?Q
%0p1h@Cb*mf/#)>6Bs,`fn!IX=hI5kR<4RgA5?N87I`iRp,^moo>N)J)g*EE8We"dC@RJ?29.^YaiNnP;B4_cl1)n1Ri=420E^;He
%ci[)"2"3DI8i5t\5Y):7Q";A\LF`4ZUZ=+md]I'60]qWA'&k`bdRr4SD'JZkN1K9B8#!H5129cjb>:WD;G]X)[)sM5cFVqb)*,k&
%B,DX$>B4KJ43K[_#rA=3f[(<h=0!-oc\m*(9N!8_]#ZEdXHeqtK0l`Tai;4,`eb0MYrFjq>neSs!m1]=dlJ)$B%H(Mp3sq<,MWJt
%'"3U^9TkAYh[i.YW/g)kp*`'Jp_L7?_)#$.9!"rtYH^-Q;/.JXKnq&,of$U+&G*G(WH",(3]T#1!'RS]iHHt^.\A0A8TIsk[me7n
%4/k!pf9t?HWbY5(G=I%F=/J.GWPe+8Q"Aj?14.281mV<^aBbI?.>ZO4k"nJS-JYFOU$09]LL+]c,$0QA*&F5<b,X(\!7qs-TA%A"
%ac%B4H8WQ@b4Ggr&KeL\+c6*C9_'<,BYsO6<Bk&G-Gq]3lAA=6OQ?jN5n=TO:g;.jc/gm:Dr7R.SeVMT,5,7i0;]I\k>(:Y=S\L7
%'PCsa%thgQ<L#+.=U6r`KJ'27S##CrN!r7q5p8-5W"MI.'G=Q+fRM#Ci$@>,FIaDtr&5@b@$Qmop+n-Jb;uCO4Xoh*pA#uo"br=I
%#]*>+;LoFa2+uauJR"$@o$l`q7>mkZ%^f0FYCT<EJ\$)02C^iXK)f53jVk)k,)/4^lGc1=1'g7@Np%La1qdSh;>-%0"@_I1mj3+$
%Atd^biGfJ/DW0n=6,kcENG+g0@@?,#'Wi&$%59:&fZ;'(NC9Vtahj7:@Np,5<6\Aj6]t=g'A#;$s0as=!eN]AKP1C?%\%MXn(7fW
%W=_;SOmS"$.AaC.MPOKW6ijBpSKn&/\2$,plr1Yn\)IB%#fcq1WqK1<J8!;3KW@tT0b]J`*Ko+kKg1<>RukBm'fn'kk3"eI=!9Sd
%Slui?2U!)+)RMbX035QY::Dld&9DFTJtiZ9$W2(&147'1-:tbFWXPb_56+)+P&/HuJTRJ?d`"bUlfZisT`cga@3C?@+FQ.E%&>"L
%.l%nPqs=0=J/WilndS-0JJKE]T`V.BMVTiJpE[Du1VIOmOTm@nWWbg8Qr;GWRXiINp2F!)4h`g<0>uKUd=3j'cof_id+Vs%2`]!/
%SApUYRPJEtZjrTAS^LYAfHj'T']h;h6)-nJ6o0D"RT;L8%O8"*0Jj7075.^ek1jLDp&l0EYDs0rn%=Y4YIc"35=2tSdRY*FMl7X=
%jdjr7/DjCE8FfR%Lo@jn)!K3)73tj0)PG@^^CE4=QtFAS8j.OKG2o"=@R]QfhjkM5;W^uP>`G#FaNT/CL`'P?MED,8fbST.(b!G+
%@T#45[`FC3\C#_EWZ9AT3foqc1t6'4d9nSJ&P3&J2L((X(NdP285((iM9fDK@>T[eUjqQd^uXl,[3U[.^LNP\QBf\tj&%<ld/_+$
%p^q>2UmA:^(r9,r%oVFZOQ&PoeW]<(m7c53jAlDNYec"?7ghO<GG=*I8!1GHDEC]K#t<pWjgLBFkO]En(9rh6QoZNDC_p!*Z52qh
%E8uK3/_mVJA+`_a9i``[*(RFGoTt0Ogk^Q%9Q[nVX$m)tnm'KaJR(7VSZD9//0\:oV,VfhhQ$2eg>bZUS4L$p'U5o-%+oP66oUNH
%A:Mc*SRKU=I\cs,Q7d0?i%WU\[8M9igtXT/rIH[hX*!h[X+39g/Y^N(&ikY"0"R3Fju"Y')h%rC1adO[Wt552+1</-N\2JBWOen5
%-U;,BJ7uC!o!`?Z0R1\"M@$-K'!ePib@@lW8A&VRV<!OY>`?HN-%"TlJP8<SOeW$_kTm#Hlp8oOB8]\P1J&%[b08`EZDOSK";cI=
%1aDu\BX=Ai5["dh$(R:h'P,5uWHr/-]q<GN,o56=eJ;ZB&gAhAmdJL#*b7nGf#s%3jO4qdFij\.q79Tn0I&;22hap0#?J]H#6_YA
%L"g.@a]i2,.;>SZV@tTiDc(2C"V$RR1mn@6RR(MHU?R#:0A1F-I;Bc;\Z"^h&7r*J@Q]qag[USm#g.C5$kg&r4Mhn9)RhICbmirl
%%]'F9Q.'Jh+&t\`A#_4n?!=ZR(=]oT#Qm+f\g4@XJl]q#U+E&,XH3mCe,Yk[U/`H]4%qT!H'-ZlSha5s5o[gU_U$Gqji08NU4ab^
%-8c_$6mg3a$>0oQ/J`',"`>qs:e#sEW6d4AVAG`o1,EpF#4<<2iUY<./4(ok")tM#W#c+Cj*k(0%q/g2=-/)J,/o+$,M.Ng.#MP_
%4_CZPAo(_d%LT%Ad58<H<#;@^ADtt4Z44rO`hK:V^Z84+.<"$PZkhVbO^&np1L65D4W%"0,f,L94L%rh,,:IJ*QUcF>)aop?=6e(
%\W$3,gk'[V%5+WE?&C5CQET&Nq<G@#F&5R3l6H&8k,-4`%.gpd\q5;4)9u>^&-U;<QUf//e"E(jOc&;<&6LQR(S<P_:u?U3:)Hc9
%BGF\tA%WVt,]+\J&>ZR/PH:,1*>1J<Xgc2;cKN+gM07b-TstJ6`]9"0c)Qq;KX?a<T;1SCdP['^aWsOnB%""VnS.M,Z"P>4Qh!d`
%:lNCNo%@Fc<^A8%q2pFgLh=!Eq?a]ddir2dP"?^")MlCF.ZIBb+Y1?0<+d@E9qJ#AiZ!$R^*=m"*ARmVd@GCiYR$'J+o>HD&W1+4
%UR<ce%Q/O&^l8c'bfk:DU?j5#.BM5XLk$H%0_\]I>Zkd3i.QGI9fI<h4j+'1P\mFR["tfmOaK0?Z<1U2HKd&Z_dWkEFWMeNbumfA
%%((h-EDgU"fm]nj["*oI\Udp^UNf2LJiK_=2Nf6$X=6n<jK")K`LrL$#jS?Ff;*'rZud;`/<P+M.EV3Y`cS/)O#dE\W8qD*qSto4
%O;61i6eUZG^a45Q=B;?NgIX,Q&H4(_7Vs2E"eiMk=g;pC.E"(rHPj.=P_#TJWR6U$0<4%9<Wku)<[(Z.G::V8q)f@=MbsSnKVWQc
%#2u]"8nak'NLoC!R;ciYmc7?SK5-#2U72e'(PkZ#W,V8R[nCmBPtODi1IqQq_>+T/ZSImdBM@E?C+>Q"]'i"m_.]][*X5>0AT]`\
%cE/KRd"uGa=^==`E-%[IQIFh.`3b1F*@lIJ`ruT8bk.;gfq_J5.uU_NGK'-2(.mL&1t*fh44,,]R(<^K'#j'Re1<tE-l&k/U?<!0
%Y[^jM/u6udJg9Fk>c:%Z2Cl^CR[(`VA$H9,,34p-+K;8:K`fAT5R"kU#`#$0\6K1--n.Dtfh#du?q$NH(:'3E9,`.rO.0T/g)lOt
%-_QGbNNIO>]#,`HbC5D%Udg5u"%u>:8-U=9C5QR@g%sY2]3^bZjoDAQIb-o4b!EZa^cC1oPF@_hELHG5/NoLnC/H`FKlf)kZpKBO
%7:Q\[=L+7"eMP,<(4WkO\J@ORi_7:(U)@bmJ51ND+Iun$/@Fgm@EA"&49Q%O;L]jiRR0]*n0Of,YQ@5LLgaD`!KF0k9k2`bQQRRI
%"03Xhc1F=8VY=nQC>I9l-"4RiC+3l"8T=d<Lc-XsbW[nH*^qcNBH'/nG[bAq+Ft/o^)F?$*F,&723RI,$+kI0eN)UM@BL>GRkSTJ
%,3DK-kNimn6h&i'\ub,11<\.fW9/7kcbtXjYLX4@A0=>K2STAs@4:i5d_rJ$:+10BJYAM`DkLW8Ts_GQ,kQsSH8J<')VW>hOGfo/
%AZ=GtKt+9?gK<E*Z6cU@hV/fN/hQAua?HX)i)rs8b;FuF7%:h(X]KDM79cj3i?98YRY;;`3e:fDYq/63Smc8bVQsl[9nESh@WXC#
%(514:Gf()BAV)aJcIBQ#ap?CI]qX*D_/'r6.\%qpi)OP5fWjL`;tXcA@7CS:DTX4tg-ZW)KD68e&V"TI:ZNOYKko448n[(m)C((s
%1_PI+L6`\$']q\=-]O;.F+%Hm!=OC=Li/IdO,p=th+6fK?C\h%J4(94#ngf;"+p_a#oFt*0jRX\MjGpQW^nJ7!&S"jBdM@e:gb(R
%JrQBO`k6TbdbqJ>!q836jGRX;4,T8)pe#P8+C;"3X<au3X\#pkNnYHsR`4cHi7E#8bF*rm=(]PiLgEJhXD&`:Rj1BDB)8p:[4=s/
%OA<NRoH`jgn\C+MpFX+TmPBm$fp/;Ha]Mm]-L,k`+9&\)L+p=:eK0nCBjVpZ2_2O.9T\sXVLce_\S>f9C`OY3BL`@kE[86'Tn%o[
%L?StSrTm\+\@V[17Fhl9m&'>taH%Q5Cm2V$&l!In<54'Ll;U2`'YhPc>>-"om0X_(r.aoN+opuL<Wjb2A(?k5*4]/+9_aWJTTnPS
%_KTTk]JCL)GD8qP+-l85G"UPPWR@?4lXi)/meW\8SNAH">-C=(#Xk".4uJP76e<XM?WHM*R76!1>i^qEF<3o24#g)GE21>l^W8[B
%b,N<"2I@NJ.o#!*mUM(4bQ[EtQ4e=g4-KDKMpg\R\17]qpIsBQAr/U@->o0;I@E]C4&iF_(i:a>-\^H_/)*p;)kq%@fT)UlYT(H&
%"O'ilM*X6ZK>>$6Z?@Ka$lbpaoh@3UdUhesr*n[H1Kcetcjus0S#i074)F0XMl`I<X`+Q`L9+\N6Lif1m9gs6B0?p9.o%j#\u&bQ
%;S1R-m82P'D5!r%?,9Ve$*idKObjCV)jRbI/d\q*F#?$q.8\=B`U'f4![1h#ZD2<)??i7VA&T@0=A?pJ.Z(rl]94232:VhB6?WHg
%"qb!S3d0(t!V<:NSOMTOd!O6HZNsaH1(ggm)fk'%QjMI)JdH!"9ur?e!uV/GaDTE]'sa$8QU`2\4re.DRm<OP7FJ[.8p1tLSe-8d
%&#@&C7V@pj)d?oXG1''aG7h1A[8=ln`U#/.J@W.\MV4\''S`*GSV8HU>o;,Yclu$l1Gq65Jn0X[2*4G\qs68km*I9j6;>_MK&FGB
%1s4KS9%d-GDCT:3JU\kQhrX4?W5Q9,/nYEd,\-o"ea,Qh'WBO4eEfF,-/+\[cH]<7M_]WX3BL&0M:S8ufs-)M:rVd?,1E^X@Wil(
%,!B[BZa1d+@`WVfAnP8lbIt<`fi^o\!2OIHFr":#jF#8'ln%6?D&h*mCnobKC3F8>.W78'fqIJqD"16DNXT5.+.S5A=UGPR`&'21
%1:^8WY)1i:*X%?=F"oaE<fqd`[HoG5KINn"C3GE=P/MgHAd<cDq%0Q<8%Q5Ne#6kKRQ/gJcIM84Flbn5h:1em-a0,t:p[K%.J7j`
%Za3sG<k=_?>(XNl;`-X,NMdCZ2*6P\?.]^p6R@j*-&p0*j"n`iMqO6dO>:)t0fu[::f'Ktm)YsC?qD$<P87dieEj!!J@_c6NRqo[
%G&l']15't)MJJaK:!ISB6.<!#Sk^2aa#DG95q2&`rd-80a*3JKFtl)%?jChC<6PhZ-?DT$`9]1uKY:X0lqm!l[GWNHkK&>\=(ipm
%LZDrr[[WX)GW-n@eAU\n@Ajn&@WnDpZ9rW,QlUDfRF0g.m"@?=fG(Y:EMSENBe:.bg'"*c@Wn'f3AGBLfidbYbA1j9BX*1-7Q!9N
%Z5<AL;`-WjDi'E=;mR]W)2YY2C3H7W&2s!SAg]/iYc6<8Vp<fY5l)UDKMB]$b\Rn(CMJ$s[DL$I;mV*b(-RYSAd>q<_3hd%*EFg#
%b&oR'9>8b8N,!O%1n_*iW7b=j*D0R)ei0ZU/AdjTfqDE/X.#P!O(0T:ak:*n+qs'Cc4901OFfAN3u_El>uf1q#*kpPb6M1m/u:PM
%g$q_@W2n%n=jg=i]-1elo1s)0/n]s9>))oJcH[V>T0d*`c44`QB-LlMZa4Ve]q.:-fcc`Fr?u7_c2`DoVHS/qOY_io8_IMs:c(%[
%1i@T#ZBr+`SVU8,;9'/-+'.82AF/7'V<g*>lo<jL)Fa#N&-P'efVR52kb\]1aHAn*9,Fg"I4HV8RXQ9I792LrjQd@4@1@H[YHnG5
%$:#hKl?-cPNdY!46]7e2GZ1fPVG4(YH6&G;pJal#c6@oag?PD=LBc-UT;gH$K.mM``9Z?*;"q;1f?pKnrL6Zs%bur_lK[)GZ%_&(
%G2:_-IMXb[k@-I<Fm-]eV<d%S;fT#Le\TKEdH%PYCKC=+$P%5+HEoGbAt1]f4NbggRB6=XlHeE)H"bqe$jq7g5ZPLO8U+>?k,4A-
%/PL&u#!Y;i<^.]*PqK4A:6HdB*Ae,TO\F(VL8_t3NfkVj0gi,L$&pKAR0hK-RqX'Nk882rG1<W=D_I'i>dk3'k.jusl.2P?9GEn`
%DB57uka@8aeZC(61RUj7[LNa=1GY5tZ\&T3G2YJ_4PN`Ac8Kh3\SN9-R2T(2\;iS+0f=Qo5ou?B[klu((=Arq7c?D%@91K3+j@lr
%ST3lH_Lp?,('lkT3m0%;*)UkE/E;&%6ak8qqS['FdXoibB#__^[LNPj+n)^ZfK"c7G*B&7<&=#X6adK->lZa3Y8=Ji)tAAE[a$X$
%+cWLEF=H/&Fk&N,kLL1&2cT*ZbNSDpFd=ikGo0QICc%S73E*%I1I7))>)/Et;`C`-TgdTIAu^"C.EFQu<U8#+`AFSuB1[,#P^.ZZ
%DorfgWRb4,c`GktXb5Z2nJ,'+6]2\-10(G$5qThD>d_jDYUqeG;7mMk.n)B5XTM,25^jNOUQIsl<>Vci6c!6+\S@Z]-hWQkeN+)4
%!NQ@$,e?E;d(o(:L22c`X*)fNZj>hh'<SSdJ'Dju[#R)Ai(arfUUrmVW$Y\\8OR>Q2!`Lea^o1TF[AsK=OgBW%aC^ngbe=fEJ@oR
%2=&n(FA"?'f%DYehDFQ&eRtR_f;p2:i(_nOXFh0;(ie$+_tl5Y9'WBfSYb\"hN4g+CTqeXXL!pJ>GGSs--N<J)hN3u1t=%6Jou<e
%>>-(Ald/KR,&pPt3]>GB2o.P`:uJtmf!,B5L:L\4r9<3?I[gD%`ME\$IAVU=BP-VA/(Rk,n:"H?Z]H&:RaFg6c8%/;ii#t7I4%\X
%\muhB!VPJXZHaXKZ/mYq,_gYj'pS:m>Qud-Rjlos=!/qJ9sMtJ0+!tNZ-JMf1YE5V3p^YIC,=8=_k[d8nsaFGTii'@Rq`u161V&G
%:6?Tb&s:J0WRdbGj3"B*LDE`DDlRqj?=p!E-<l8'-Acu2X[C-2nNN;Aj1ZpTh?3dd=].k:7V1n)/[FE]<9s#TL;43><NW$Q,hlX(
%Xg>89Z_sgGBH<6R7b'Q9$qJQ'/e3h0c8=i@eB(L[RW[]<B,:#2ZOVm3'8*l.*?d3gM)NU>b7rgo2Dj_bV/If*fJMp`IRQeIVHIPQ
%;o*7DFZ<C,m$_T.i&g3+cUI0he>dDaWc_]#&/;;3eqmR\M]96M[OC<Mf<$9-!VU>8[grC,0[\3hlen*TR_u",#G=lba-pld74$$/
%2q+m=h$(.#RVj-`;<N&Xd&eMo8:dh=>=[(tW&8WIDrY-fE6NFii,C]^iAKFPi&K5<lFM,>_l&[m9XbL3qqQ=<h)aIj.3cU/l..j1
%b%dkje?&i>6t!UJetKmLU(gnBNa`S<15[mD3]%4Dh1Y)F3R]gi'.IDOUWGN6#hRH9%`+4CFd>=4T17d#9*RS)DDU646,,r`Vo!T+
%BqW#.$.k=.QAXZr\;keV!MCcE7um,@8YM[]"8JUc\7H>V6OP>^\o=4)a:n<;$J.;h7Gn?JE#hLi;"HO\Xs5<GebW*^61F17\4sJn
%+.qi-1Z:C[GbcLD_K@DGkI?odf:c.pG`tYV3mn."Xhb^_Do=sjQT#S\,L$ck!h4-Lah4Rsg4\c_=!X-)$J/-jJPr19\W1em<*=.f
%Fa/ol.YUgc3nC_KDH*dV?l'HqR;s;O8GIV%Eh0RJ5:Y:T<,%aMf9*7,fL8fNN`9L4aYd)$6Z\s<SI3slm9G<,RrBAUJn4=.'s>I+
%&6mh@lU3t5%&7b^Nkq6Tldd5?4]0M0l.5C%4AKJRO>ehV@O>="atpUn9t$(Pg;Ms>DB7i7p_d\\FeiauO_>E2,>-`+VgF+F7^Bg!
%,$`0ZB%+6LLZXoPC#[mG>ULIef$1.6*AqW"c./'EW'nFKlBuZ5)*43WZk*V-=dE'lWa-tj=G,MXXomVhMefnIS`jeLM0du)0!G]j
%\T>G(ft+[$SZ15':lE#)l?2Yq0pPbP%X-7_k"<'R7\q8?[5IJ8l4hY?DrPn=)^8k[9YHJ7'p;.dl?-(X.BNfoW%="RP*pV:pX4Zq
%G0JFTemG>*Wn2+^o\j0BH`CCR+67Y=It.>;rk%'Y5M,M[&CL"'<u:%,f,e5J:-Elsm8$N,XH,15bJt]Qooag27fN2-J,\F$Ve>[#
%++Noss#3"6l!M4'iiA"#-i!E`5HoG(df0(%m(E>f$3'8gkf!k#qt`PWI!#'cra*5:+6Q_s^L$m0;Z9d*n`A.OgNPjWoBXTg?_<mZ
%+.rI'p]#%liqTG#ZfdZ&1+5>WO+>nn?CnfUI<N$a!C+,pIC\=0nM/jP53Cq13b0j=^OLZSnqm\'^U2&\[uKgsmIobfXWQ\rFD8DS
%ZpW^m]fPufjiRON>p&g-SNX%!Ea2M72P,B(F6B`6r:0RIk\$EiUM"I9h3pP%AtNC8SR*?:o]O]04Z[_7nI:Oc;Vu*4s)5@g]\3$$
%:7bb(G^8iEoP2Jpn+?OT_6dHoa(O7Vh5BEtqshqMlc\=P5?o8Cr9<iu=WQ5acc+(kbG2+rS]g]N*IfGB)'=5"FLfkFID5<,r:W@h
%qpl_XD;BDblZ;j0mWuXMS&k'bP26lKZ2)N9=OR1[8U\*\&c:`9lbYlq]C=:kl&S'rFondK<_qFZDg(:cVpDPa>#UdB)h%"R23g7j
%^RUp&mIhn[^Ajghj/]'oYKrimURkfI1c4)]s(3;)@4=G>r8`WccdnZC]!L_YfkY6p_rXbgbKmo63.:H@md1dtRQoTY/hEu+ldft0
%g9"SkHZj)Yg:dHeh4h"5]!Ya1(Y5_E14-?Fm2jC#mcaT@`R1DCSEI)"YG'P&1nNRGkhm\(m<oP`h/-I7eId5lc*#P:ldaDEDB!qE
%p5btU(=f,XjO[M2Z^q'*4F(r:o:i\Ho%9G&iM5bJYkGk]k0/C9otLqkY<G$ud#%S"ro%6V]kmZ#m,udfkGMCZ2h$nRLO4;i[&i3[
%q!;4uC<(eBkMHFCEU!8INM$+(FDfrhboRoJSK32_J*cOWX-[IskDT1Qj.gO@2P_\5520R%rT*lc=e2!FqR3Lrb1#O#/Ae=JcVK!L
%4hhjfGt/Xb5QC-lm03R_LSNJ)?C`..5<[cWrHF)!mG:ckIrc,9Z[L[D^0b&FDM%?O#./i+p@>,V-2$I_Qg`JTo?U3]51R<h*W=,R
%lHT7Khq/,q"qZ%*R<./po#K?@*PAToZl@b+0ID0+OF(^(m/t>9+/'GEqb7(d"C5-XkJ6\,^?NE0h7M6,otfP=O-s237J5pEk'2Fu
%br*N9n%63<W:0<O].GF(?1kC*=T3cu$X]n?ZhIQAO"O53IX6!S[4K)S*fK*G-^R's=psD6\&Rk?YKq,H<u5Fp:A<I'4i!W^^WPB\
%$62qM^@_fs"\/J3A,Yf[+(LVV=:\$4r\7"T!Y<M$@a\a-6)s`5BR"n`d2^(n):lp)?f.nAL:kNff,4&f0%-ITZGqu=rHZ^uaBU_:
%7<[h"`N:>"h"Uu2)^B*FZmZc6N>o'@j/%#iCY\\*]+Ji6Gi#Xu.;o(Zkmp"kIWb2bZFXh,epZ5BpLS>A0$:aY>PD]i?siWNak>@d
%5<eu7o&Sm0Zb#e"Hrf()diU5,qt]mDm,[H<bEM+]?!JGAh[%l<)n(H;fZnRbH#e:PG%5W.h6jAs[WU2F[p@bOVfhqt^\VE3o"fP6
%1EHG_l&40jPQ[:@@<)7N2dcL)=acsV[KgMD*L]+bm\0??[cbtJPHgq8EfV7;!df!L:&<<-L22"rY:kC(ma=%:S_Li</W+1^roDZA
%\Ga"HW%e5;_)H_KQNt%2"^"[k2ES.r5rAYg0$_!?5H[ekp$cndJ:-tZjLG%tQRc[T@R_k[ZslM>2J/`jO^LWc+;$Y<0r&*&Za=12
%.qZ/a:9Bo2MA[uO1YMpL3P4C:/-ZqoZ*4%)1r%HZe&"_H<n(fo'jFR[DMO5*E;JBT?e4mo*robQS_JJgbmqH2JlEci-1u0mI+8#-
%5CTsfUUpF!DsWKHL,/Gre[3(u`R0#`<=Aal.q-D,Yll-S@E#PKE-K0VZdYtYO%sUu<Zdkm?=:;=XumHB)Iacg]Dip?'oNDoY!a#j
%ijd(KEETX/reog2qK&:ZEO"C!LWebc6jIO>EI-LXa-FX.^+<$;>ROR:VelX977jSa$r5FICLqJ]F\M6r=g5\nLo#7UhNS2)"Pn>J
%dXjp0'&JhZi/^,#nEOQ+M+l6>CFh+'HT]&4A+BA4Oi:o)i>Rit4m_[WD.Dh8=^pV((<=U^kDP8V^45rJDe?G,Is,h:F$RH,X7bcC
%QT[+#IR#P3\)lM^5<Cq*qe$/^FReqcq"3j<IlE.@Z4#Be4.(cAAY\/#1+]R]'4^P277Hne>d&T;H@GCFB1r+Q+5l.b)jOcRcgI5=
%[5aASVF3"hOmW)t)"EO,JA-6DaPmfj[:3ZX93H(LhS4L&b*K>In<_Y,LLa'Ra%m'n93oY;(/L7%\oS7'kEaVceXKd$`)]*9aaVU+
%QiA[Q;Ef@$n"Xr\hRii58\J?oIil(4?gE3.d[fd^I!B&nA$?(X8;Yg$qQSQN/f6iZl[L!JL?Mh@qp)g\/rn,DokXNpqm8=8f"#/2
%J!\ZM[J]cI>8u2bhtr`>/j63(Y(Pa(J!gIEd"dIO^"HKcoBXTg?_<mZhoL5\K[76-s0]0dMt4[EG.[$*/ru$rNm>AM3*d:j0jaQK
%48bpY`47kNdArJg?_72Qf6'LK/ic$NMi)Om4T&gKc<n?]@i\Z9n%gKXX8qGU_)FIKlK\$,pnp?KT'aq+o8@O3oTK&/Hi?),)J9kQ
%?QRbXG1Ms3hj"/7hW!';\HS&?P/"Nob<.Br^<C`n3YTdDfu(`K)#_58rmb5=eD&Q\2`;>1K]HW=40d9Uf"G3A(>#=H,@`Kch?T("
%-]@OsmmrW3A5T,e3gP^f%G;g>%2dp=S1V-AGJ_-:6dTeu!Jdi9gVB4]dW`5t^hVPdkcQphMqe]B)0YJ@1HdT%M^j=ma7?Q91O!b]
%g)_lhJ%MUGc%Ql9$\,lQ3e-h?]4/SRrTj(85:q+(mtET(*IY]([GlM*M3%J)qZ/PA?r8'=m*X^8XCI@j@3&m:)e=a"^`4o*9D9K>
%:Y0$`]O>Co[5!$Oro[YSgAh'!b=-jNHao\@hRe3_d"e:\O(Y9U>?SJWg53H#*_S?q/+g+/M!d)gH]IQ+R\9u28%ab6jqn$ag"DNp
%b5RpBG8`,Q+FOoe.bZ.F\UjBI9_FGiLaETWDh=2QK`k.MI@P[`/^@hHE:sQA>4XC?lGYW#b<<_.$gY_gEQatLp>N@S`5ZB]UcnE`
%GQ)UYHlqdWL%Rp-H>E1Z`KM&bT(K'2da-%kc;.de/UD@/_r\jqh)/Wa$>RX<DpH(tM`pp!QdcO.nRaGGmuCM!&oTNYmj>[/oeghe
%eLS6m]%jto*M*/hka+_\Va'u7f)6r9GO3Z;abu(L(U[t=a561,dIZP!=/Ru@l*Nf2c]4<V;*7&><j15^?h*r9FD[X:P'>BkGrIX.
%H$j^Wr8kocD>#>iVroEtMkVaB++<J(*?W%FnbR'_`U]5aMt:M>a2t)pgVK4(7ou>O@FS*!T:c%#HG2(:^WH)^ZOQWuU68jNUIV\i
%NiWDGZZ!1K16VOd4YFri?gAbWX_I62h;e&.P91o'kd&d4%l@nm2BrelCBPhpTE.oG7G5oN4K&uU>on+a8@%GDS8-*RBf6sjPP@oh
%duf&9*DU(.+X4efjacD<G_uG'oA--IW*5L0c7NeV/IHQK+6M@Q?KgFAF'i6Y^AR6Tm,H'V]BXU.6[A>%o_!+ZBMk0Cm@!FI9j)Gd
%j?7Z;cVJH[\3K1_9/D:+E7p$RCai<,UCrd#W8YEn^*Qpr[%sD#>/&PX4fmaLeF7qbQLBt&Zh=eY/kqaQV:g10J>`.'Ant9$j,PZp
%bNd"$8[_)hp*FkFrDST%ZWY!N(%8=Z:7&0CrP,rp9:W!]Db4HuJ%%rA?<'/slc.cGI,`"hn^"\P$[Hmfb8s!sF7J+:?_"X1p>V+U
%$hTStVNpfQXY'-A\#PN_hj0P/[TeH5<U"r8=_mK$g&'^un.teA51!iQ7q_p(!Rc2=#Cg@kFG\^`pD"fVSF-/l`CD"M`,J^!IHOm>
%fqmOK]@8U@mT"OS=f_.tWBC#XP8gT$@3nK_kXc4\OreZC:/YEQ+*.-o;+pI#afsR+pknJDOtWmMpE7?\bNd24aflQ3Run+pbm/RL
%bLr<p[#c?b4!/-5A[lM>d)'g;epO.Pl@lp$Z.fuqGX,L)7MroRa7k@J"Y:ZdIJeW2,MVOf]G0[<D;D7@i-Vk#eR#A)[84r.^;h8g
%C<Pn[\lW+K?!d8?lX"GaX0$`VGICRW'OlJlOeT@ad+KF.MO)eLHc0LoZ6G_*CKu$O1_u*br9>IpD\:=*WdS$u0Y&"ErRJ%]ZQPG.
%2s#fRM^lAd3.goomAsB<pmZFMO.jk]"0>."RecqJMpgJU^5e/X8BA40Ds5c\]j==J3gT@]q%hk,caPI'r(]>fATcrQq`V9eT%nD%
%\$4_jqn7-e\*iuS,[%H4h=3'H5P3nmI#I:@]&?jPI-ZN*h=*SU%H!m6_0*Z)Lb>bJ^1I"Mh=*Rr%H%%.ZsaI]PmMK+eAgpqEEW:q
%h0$[QeW14cJ,BB\5$?._,;<WNg:lD!N%M%OpFp*XnQMaYH64VDSh(67]WUm<++(EjWm?)&etP3GT3@R-p#Ae)%?D^-[a3`2PZ)Up
%\Zr)nHpC!6IAZn9m+-;#b*tjY(H'hd0!`#91k(F#hR*'*Ier?kg!T?3Mj*b5099ElGQiE$QQjVIZMn090?(6C>.UY]gh/3E<(HAo
%*5=&.i3"6pjfb;k4T"C,r;>XBS!11Bj*c+I^Kj`u[\&#TJ,aoFrr$P&rS)et2dUNr6)a1oUO(_@B_'#!4GuN_mUN%/eWG2qG[B/`
%Xrc7sB2M=bFf(T<ZJ0.Q#OVO$[f0uRs'/HW>Nakq^:aW/YLsR/SY*X+)>[ZkD>iGail1=.f9->j4Rn_+\p.K7?p*mi+.hpBUn>Sp
%k4lQ>mU'>]<IKAfiuTPt/?0rkbh"E"=%AU(Ue[HYj62guFf7P#Q;Kb-450k<4?<5p7A5t:fUJElHN*j7lLa8q^<#CBTp6qsBRKNU
%?F=:Xiq)X&g)_5en"tU+?>OfUpuq)>bDY3C;4jALSt?uSMF26.oW9cjI/Ni[lW^+>;uH36=i57Mke$ep\$_3"e/Eb-D;:jHEhA`e
%U@tAVk$VJZ-bFE'Ie%#H1b3do6oeT'W4Ic7>#n/E9U,8o'BOIATpg>PNC@u#bsY^;h0OlNPkUGCbq9?)??8t]>(5>;>a.[fR<QtG
%3F5`+l5m"jU,m=e>a/gq"aA3[=oJc>k+Z\aDp:^RlBZ'cOP)dUoV+CPk+XDHl$UQW'YEM%4:VJ&W6ORT%,@R<EY#g(=dFAndS-P:
%Wh$PM.drMEdLTJ2CKXO%&,AjLOW<@h;F]M;ie\3dK#fVPW?M7""B@%kmmX?MGLS3KR'bB!FN`M[fs6<[NI.rLg1BqhAMm^q%3KUb
%hNJFc;:s*PA73%JMl!JKhMm?VjRQp'Dt,qhDq"=J;.uNbp#JR-p8j!d&V_niBkXT&DDcP113AEmc#7"RroLWh@Ej#24+H)r*nqm-
%^AI3Tr9N(5X4jU%:UL'LlJ/7dq=p_g?FK1hO5Km+iqnY?qS'\g`dO?B$d*T6S3sCX:;?VW*;oNjO3GFIs7,VLYM9(9#Cj[A=Uj$]
%ob[Q&J*XlKVmcQa^m]m/&,tn0c,'!tp0[jlnOHAQ)=0YtEB&m^0CX<Bjj9pA[Dpq[>lEPrZTh.?PY"M2opFp`Dq@aT?H)GQH6;t!
%F%X("GQdIo]o'8jqm>8@PDiRW:HRgeZ]@=sqE8/8r85tq@')Zhb;fddo7J,nW_VhEEpbjk:X#Leei7k]%Xfn2hS-_C_dH.ToPMa#
%5HUR"]>IHskO0ec#Od%R;@)shW>l,/e%sN08q4Vi4FPAuo<7pW4ML;[Ak5:ls):?=GPtlI8f<B[Nu4T/$N;b*POX^plA)hRIm*'=
%XhHaiA9\E58QhMImptK:R_emp)_^_!O63Whb4KLSs3b4]rTCLF*-`A"C]2bhZfQDC2LeHh4J&ZNet0JprHipOcR6ErirDd+(MU`D
%]j*ADqm>7E4*l/nmnt*LEcrH*PMr0_kCLVG^XiFVSh7_SS&2ANS]A(uang'CS+YbKIe/'fbJt_'70_XVT7?c93r%bp#Cl^PY&E@=
%rENtg^<ghdN(rtc[bc!P6,.IJLTVK.NdOsAZ2D*I6PjSV7t00&lS+W]dp$k.QXaCW5O4ZtKa.LR9PM2/rc)U1XM='gADUs4:KJM.
%M07&'_i/l0lJrq$i5LJh@Q7/+OI=!p)!'lM3/D&dBTljCAqTl'*5q6=pl/Lg+Km-@&8]*M2$heOJJ<Q3-^ciE`B8X5j.XdR<tjL"
%54#-QYj!k(N!\DQUZ^:<LG$)_@iGr6@WW[BLIue>>:4cG>mGk]+4=2J&OS]?e0joI?@Qk[\W%BR.@*?e>WI%TI/!M%h>=o0**QS9
%TgCfA1ViRqh2)"5YKn2Sf`JKCS?H:W_SMQ\j4i0''d<iQM04oV6&0Z`cW)>>5&<2P1&5G>LWhK6YNV,Zn<bs8hG><Be4r0]Qlrfs
%0c,l9S.7mlZpC&_'0@I(O5$%]o7I6[AN7Y:gJ?"4>M?B<QBH!@Sl"U/$#H\M0."o+dQ3ZZGYCQ(L^f-Z3Z-[Xf8=BX92.H@QF7Qg
%?AA"DgH*&[(s>fXLIN:0(rnq.7sepM)>;hF\?9hceGBAQD]S>cY($&Ti]OKVcLWTj4!3%WK:1fdCN\1=EZE[aK2E<e%)q3%;bNZI
%`oGR#k=Rdoms*Tbqqa6.6cW8/Wr8lND)R.Kjh'e(?Hq<AJ,.Bg>7(>qi#'mSYKrg_]_^mVjiP>s$S=+4Qg`ktI<VH#G8m^:FbY?\
%>/2Zc=G@1&Q9=h:mB3OGXkB+EHT[*ENZ==,S9&,u#t9?%JZLN]q;hDrFX5V\V6nqfj.dHKE`ejUQT@J(d,n1gfNSbfLNcq(,&cHN
%lf?-*D'%6N_sj>>oql>_eZ+X9R7DM;SAi#gFVSX)$,,k(%^sc<K@ua4>AtNuqK?eF7[_`(XtQ/[Qq$a_X1>L*WF9QXeZQL[/nn.g
%2g'(?s3la<]q88f&Ccf\_orqWF1#M#.E*9I(qU+G]FNQqH[a5-eH3ZtW*c=FV!<lfmU/$3mA<\R]kImt[@h_?YE<97)Op'.Nj2oO
%(tua`pY,&oCb?i4(<jUU1@j]T%F)kncdY)4T\`6<LN/#C<Z@q[b1rq%F`1'`h6Xd)O6R$FgGuG&374U3qcAqfK=FqYrsJ-pf`'E^
%XC$Wr`2op@VnK,OpQH9DA7sN"H$\)e?i<N:a:6%h:$h?2Y;EtpqTcR>VI/Ko*>8:Wncaf[MUUgm-M^)GWJ`M?8$rSB+\[%mm7*;9
%#DWu-fXb%oduVolGQf,nQ_A78C@<i^fedksi'FWUW(4GPe1S.K(S%+?9CQCQ3pI2cEe2H338RcNh.b>_Xk@RVCTfBYXC?#+]ae"?
%*Jj4edY,*^mjoh)\(0!2[<3EM'K:;ME_Tabmn>o"rP&ucCK<[CD`+q<D;5>:bXD96PM9XA-;U8_gT@@KR,DglrnQ']^#RZ[*/EC/
%Z&*mHGEso'EBS0]L@08tc2:c"_m+1(dg!KB%J2saF9qZD(-<E)o..pWqS[4AWVr9u&0J?Liq-":=aB#>.;W7is13WR<!RWH.u62&
%YRYQRLZZB6GT5b[_bV-MQ099pgGt$DM^>SK$tBpf9a?I=<>R=Sce_`P]#U)@3-]9,B.FoZmc/V9=<3H]4lKhPMerMdPONJ[O6R@2
%P1r<H[-?0#IHG,p"70T6+#%l])XDE%oIj*dSMnW2;4fT8!M91/Q=nBDm`Sb&R)NnAl=8P]fro;)iqBR)A?,5Hfo7<Y>gb\A/7q#,
%:"K/De+Bf4^\V6:P7t78]nu^Dr0><heR&*RC&3*%bF/-2=oR4CASpCD':[Bm'7Yh@cWf+VC`dD<V)G<R&Z\q[E8<4mB\:$iQq8rB
%QBo83LVAShRbG0h45aAtntB:&d+9p04dWU)(gVu9,Lc9Fg9nM#.]/^*5.GZ@]$gAFgX=VRHde=a=];r`oF=o=Z^KZ9T$C$EUo[a6
%]Ne[KAkhYrUN+P,q=)ipaF[Eh:WL0I]Lg,WTADk7Vd#U%GFX,aEH&T.Rtq[cAbrg1&!Nm!<r(tbS.*ne`0Cr_,?c]iYHiiGQf^](
%2n@%dSmQ7'Z)4k(rL1BSq6XOnXA`R(+nMqg,jWs)iq17j8l,k7OLC@MF`2f9^ppP\HpYKNon/1Bm$Ac=IM5Ia%mGDfEH+I@+F\b8
%c]b]=:G.,V3PLYqc2Vj,rqpRO/@a0:IWp85rRo<M:O^^7`=\j6?QWQZSQqcdl/]n6='(_^M>qW)K%17,K2D(;lT_TpIJTk*UGJn5
%_k1S.(qr!l4[/](puq):r5V$,Sj*0=rJ#4eL;3WKbDXQEafWd_&,dV7p`Eh751_bsIhdB)36',ub&qd`/,O7+6ia=fDbf3PPU.04
%n@*B+D-[>1J*N*5"4tWH)Aua(@io#fN-hUNA8EJ?Ftei1*@r`[VEZHUY]-dZR!i&`YT"cZ[me2,Mb9iEU1(r^dBL=QqfM<(8i-ql
%JC1T!hGQ0]gcHF?Y)e=ZUtCW\_%$9aU1&NNBUIU;)A_1E1b?&=<4O;+Q$ZU_fJ+;an\hr%^EjkSaHVFs_B^,pk4a;8pO*Va$T.Vk
%&bBd+ljaU^F'V2XX:_]p,50"gZ.En*'W[O=!jKbL^,rL$_MVDRD0"XnPWAf]LkjB3X$21GG1)&?UtQ-iFhn[e):=s7cl\8-26g,7
%d,F6cEFRLQWt*?&\6Nt@]p4igVEDsQVOh_c7UmHVFac5uW41B$d:Dc&l^`ou3.IJ7lLi[.*[<D'3e%bhaKtSB5",K,l<?!,QrXd=
%YFZVh5">M%JM(>9AtlUNN>p2%[_"RNA>'(E$bM?_9\lG1[eOaQZ=b1=O[.[[!&s)[fMq=s59R\2Q^C)[/Cr$/CcchGG5h\YqLEr;
%!Uo>IWF!M##_"leE:*at7oL*_0B1f6T,VsGlI$`V43Z;F5J)[(n%.6%gTLfS?hYMk5kPYmF>^kCH<2hs6,U^aok9j/<s(bEaa6O^
%-?,Wq/W5f8m:!HJ>$#@8_gYgVhu0\BCGaZUbI=d"CDh'e=EVlemk7YLhl-FJ:Vg+;n#Kfs/g[Y1U?dk/GfA0Z9Kq4VlTX-Q?28re
%QGpM^+.1g%qaFls6T^O%l(hJGdqS$CF40+V@g[A8@JX`F&Sj;W3,-3BE4O$<`lj?=`8#ibX>q2.WsB$m(ckV'4<po7-n\5Fc2kr0
%WPNB$d>9)2Dlb2%VJ_]GHX5N'Q7L=$3;&o5-*E!.R7o00V4#PRYaS6.[D>W-r+7^8n^qIC!k2jq"%;<1)E47)Cp,`KQ`/K?>$>'S
%Wl`aj@dB"rP;u0]Vj]d#njM,0n"4)oiUGCIB%ku3fa$jkO2/\dRZgS2HRTlA90SB/<&5nAnjou(C/2"lZe_.iDGKK:eG)W+bJrY?
%)cJ\*KuMqj=<(.^&njDI.4kJV.!QS`COpH5Ddq[>0j&\S_SYtsk8ep$Lq$YO,2R8u7E"MM)`D$`TJ(>?NK;+S!HPYgJ@o]?Y"Ul8
%L!%Hr*Zn]p,\4Pb8`DW^o>;WGT2^u\S;D+Lgl*n(qKilEmtYaHkmDY$"/QA01IC=bNQ;F!T%s7R4.tm<0r!sp2H8Kk<8BbqW.)X$
%Ik=J[h&B<H2jB\Kk%oY7nQ.4qM>MqjIW&%G]i@nBf6Y@>:_2==2KErJeg!m]9Up^h5$`Xj61rT?9GDTYl[>DnI:!bXcnQ>5h6*FI
%*C+ak*N8BA!iia!pi8XmC_bjIp38O1m3\KPDYSCc"]WeW<;.W7rl4\[]'hcc;t#hEG-U!F5jC;Fkj4dVT8-j\$eJq)!f(0:J;Pl\
%)bp:t*LIj*#Mp9S+M7J#D&Yobi9H28lL)S*nLk"u1BQX++ZP2A>SR*GqmZomhfsk?G$j_&mFMH/AW^UaqZQXeJ0#un[_;pohg63(
%0`)g>6h(R(:&SmJL0$Y#>!N1nW#CVJs0[n-g6a2X*QScj-e:cF)fa-l>;Q3.%)4[;Dp@cuKNQ0]iO<FoXVlS'L>O2kLc*(gc1$(i
%%)6!X$)tHSF8DaKG\',A6_"n-EJ:EY^%aQ\R]o?8jQtHSA+![e^NQCkGoHs[)K&EsW4=P2.(DVqYg+_=OCWIQ&;hYIon[AI2\'h!
%G6Q%!0(SYSMdXC+J?ZA`nq>,9-7?C^<\ds,<fJA.+Pi($itq+XJ>J+U2FGP@CllEMMT2@(;[Hc()nY"YS$3Mp3NR,QL7jBZ:@('C
%)a,tWO^Eb=N+_MZ6R\CZBNtmS50$KWQPn#[)fZ+)Wn5cTR-l24j"U!M>>nf/PPS8Kd"KnhB4B&qgium^]YqKRL9L'o_c"uURQQpH
%0qe(DZE%1lheN.k\P'2NnV2ZN':jU:]s%?UO"5:(L19l$R6@%KpWPYXGj.5$il\VG$?&)PEm@dqS?^u8L&I1b;f-mPG'[VhB:$U:
%X3j>b03X#pU])e9H!pM3W08c.a[/=gAZ:E:@o<L:oCt;.XES6N;4%K5<j"=sA5^OD>OC_&q9#d4OST+2-d=?G:/RVkF^<EXgZgB$
%4CLPnMK!.:3Z%VsY0@.2m,j;Iq3-f_eW_H94QG]g&$hDAZ),re]X)6d(=e2'7<KX#f[?]b?=ChgAmAca%hE9".u@-l!-5GNE22Q/
%h%=Q&[8W]\_L<IB2o:%6>.CidgkPdc`]Sekhu(4?d-KP-?\'/O"ud$#c$`c:T@Veq%hrndFRITb2ni(,j"Q*)2qblrRl-%t!k<7*
%g($m:7KdAD'C@K/)ol<t5pai<_$2C>EIS)GkXHQ=g'/:X<mXt#>;O2S5K!RPoPTOFhK5$\2dV2gA$Tt[E$Ve<FcDeM#.hZ4Fk2*!
%"E3je2nCP&NNR_Df>`dZ:+E<F9/VrZ,EgJI*J_=7Y-n-oQVqRkN(o0N"e.U#j^h!%dU3il%=g?OZfUe%`3Hc9`.fGp<U3$];.7O,
%ZJA"1r4.,8MU&9e<'-JrTWHA5jh'rGm0,T>0g_o?#'B4IU86.?`VVuGS#`kr`c>X8@WdgGiF!J?Z]e7mkEV\-ETObu<0,Xdm?&*)
%PlVdB@r<Nj%Z+`&,1g#Q-\i3<AIEN1X"t#/Q,+<Y[2"1?Cn-![8NSUj+7qSXM[Et0+@'?5]/]T(YCRo_CX5fdR8s/'6/=3JEYtO\
%B@SF;,q6JBA4`^P5@3KRD*F7h1YgGEVhN+f7N/>&#:e?khUt7*-,H#@#'=,(V\#B/j^m!ZAPbC:rNXnC<0ohn!:3u-I_*RR'u*L^
%'>LtfMI5u,aHg+U3H02>OLA6g]".p+-K<VgY1PkAj4EZ^*PWpn/2j5l<8UDbSQL>--IGO;C@;=ZW=)`_WHGD.9\sHaSM.\f\)*.4
%:!.=_3lqTB(-uCpYdi-%"I%Q;J^m#CSYF^.jU*5L[AQdfD^E??BuE6^)E/^PCp-VI_pCLSm40TSLCmC%n*4&*K2GoAJCuZRajs84
%8J1arMfq(>L]d^*834F&7;NO(Mg=@LJ]Dq%!.rprfZd!PA7'V:Akp-oOSaB`c(&1,JgSVVD)#niUb8]V8@j\Wkt#d%k%u&5esiE?
%W5pikA>(+Gi)>!Vq)_d_!$=f5^]ji>5p4l`7Y=i`rtY98EW6O\pKsciDT)NUBt[MMDjAmXV=dl']iA6S`Vm!Rl+=e1Dl\2])(-M<
%l09f,V:9EAZ4[X9<e36JL0I<Z>>5b2fu5:?A4d[HV@RN8UVP!8?<04kW!3`n]?&ABi`([Z$SMonG3K!AZ(oOf3`8U4Y1+Vq'*B\e
%6YOgJ!><Tl\t49O-6'.J,[TOe:hONUVFaKE%\H.PJ#NHLU,qC=B:Qfp_C8-InYLM*==lPj3O?Y'2JtS_V*okklN6DeFK]:7G=k!+
%(PPkQHGLel,5cA/e&,^1B)Z9J0.9"F$:u]+9#Rh4B%#1:IYJ!,*_3mj"dLiE8K@!\W#/C'(`SDq$pan7I1leCPsO/`*u)pBnoNUV
%ln%-L\^#;"Id>&&>Z_+ZJ-a8<3O&FdZ..<:K^2SB#rI2c2I<R1WFfQ:6Je_&L/01EXsbR])55=`Ef$`T6mZG$jDR+1qlL;:7>?qY
%0]Fr<ZGf??+N1@^7'!O6g1\FoW0=q!,VXl90YHB&!2<WRkrAFLo$]b)N!W^dW.30/J*p!$-98(l.;V"<'F%d5],Li_mAR1iPiM]1
%YVR1[1,Au-4Yf^4aSZk4h2(\u`M&8J'i%V.'Ve(.6.R[)Wi_'riBS)\W0O<i+e*Z"."Da\'c2!2e1&p,k=OjHO$8RSGTO/(GZHW\
%j8o?8>Bc/CEg#VV'QBd7SF;q'BPFK7_*0?L72^,=,*.=t%eYeb,+YABX_r/@+73%9.KDYC"0%6rottu(,H9eTaqQcl+Fm1AR9V.<
%Yqa?7Zu,`1$@^Ir=qT_FU0W[Sg?eIm%'GQLL'1R.UB^lC;ZFoZ+q[o^&8d`QqG*3"+l,MKD2r;B_=\UJdJBt%Euk=1.*^2&o3+h/
%onUTQNb2m"kFmIXqLXo9FqF=I*KurhNmNM6A#Rt($*_tRU`lr+bkTr8AFVinb##%B6Gj\"k*%1;/RJcHk8\1OI[+^,k-PRV)`(!S
%qjACrZQ;'CS^S!kT%nH)q"tU=42Vba%bF"nDkF:U`gS^"Tr%_0%#ceP*)HRJKh/s9!mf!eVC6Rk*BQmLT6o/(C[p[]f4Ub!]>Oi_
%Q7]$Zf<[sbiTn,W?f-du1JcBal)PjKD-9o;OS2/qrUda*e&*Ec_[Qlq6i3_dGMI_YVfQq^kKY#+pKJg?FS7cJq_mH[L4*DrrYamo
%H&@2lc^miZh"kfZE-!TJ^,*1]9u6=nR'aUOVgK/Ac6F)G'p@^&njY#i1akJF8GJ\3o]a(K'c\28=XZ6,>K=R$\,chQ;7\1dmT]$j
%MM"EC!tLp*_nj4pJ/>@YnA5B_(H4%\\.+2UlbN"7*?$!&LVn7]0o*Zi2/%4E^IBRJFg,t(YdBSOc!fiU\2+6sn%9UmhO4_blaGP]
%p^O]t4SY%^,<nd_4C+#'V[Yc$Y@:F,Htk=4aETpo'-9s(n2Lio[IC[o3&fgd[kbXIO\:;F*$^fK^qRIS__i;,7[q-^#KFik=1B1<
%Sq,,c(:ZD$0_1rW2=_*W3E%X&dP14u7/k4#I(Jc0$'@`3#2^UZW2e(.k%,A)257%pFPt5WrmE$8Un4#;psdD!Cdue52EFY<l4bL!
%6gRL>=^76F+ea_'pa-=22-5'Lj&Ld/1Hm5[k9(mIo02b>^H2si@)*m[l1ET+mCf5>2tDB/jnj.\*&#EcPI*Hb[uc*K@O!B]Z=5%/
%2R6d:.lO\B,:b[X@O!B]Z=5%/2R6d:Ha/gtQHV-U.U,QKR3pcI*+?uNRWm0[:b3nhZ(d)O`9gi#__pG)o`l^MkStW5FmB-BATil*
%LSRM3U*DU%jlqb+;04(%f5AXnbK4JpEcRW2+dKS5lg;BU:),jENm+S/E_).u]U\dtT&+^WlX.qs^A%d93qMI@3dKifjd%5On>5l:
%j1+nXO47(\1qaIF=2.SWP>`c'IeIQicuhKW0rkfcZ_HfhO^+OBesb!oAot-mr;^V&=0BW0.rsa/>e)%[Y/lkYEoi0`CITC5c04Pf
%%n[_/c9`:hRC:eODY0$e4W0*>%2fmq8cY-hKSr*!([58U7ZMig7&j5r7I0W$m(/>`Wk,LemB@p:)Qb5_,O1_T,-G*R,_^nRQ1`;6
%%Yg(`:T:C4#GSlR4.r,qQV?7uj\(!GP/ZG8_a4'p;!j*k/G16%dBoLcKO1?QgQh[LFZq:H;&apt3YtLQUGh6Ymh6G>UPHGRT(cX;
%N7@)g8>r+C\8*4\3k5m310F'/j7Q2Mqkrlrqk<@S6dC5'`,a>C*oBl;"no\$ds\BX?3dqOiPM21MYI'ZZ^f#n2TZ",lB,o3,XO:Y
%C:ToA]:ngs)M@ed,YbXSg8Hp?qQ+*ro7O*Y'9X<'PG8M83Y\=55s5?&VF0Sio9JSgDJX/W4>b>6q,tdB#7%ZuU?#r.gQGmI(2[*4
%72^o[Q#3[^X"R[DDX<"F2QEfAe9R;,r*[%YWL*.pfQKn:(=c\c`MJ];/fH/^XpuG!F'3JiCO8XV=%k:0Rt$:giBC>eo2)G3#:md2
%%9d8L3A%q>=d.soVH/+-fX0$rD<uCr>!P#,(/e6a"]Kh#H+lsL(EnRWr=slp1<9^B_O2e05]/2G)Z&MpgG/buFM0HabOFV+Xu9Sr
%pA.UaW-#c(HX!!8MF#>;TTsi,_/Sd#7X?I-,$CtlZr=-Ea[jrOm6]WUaUVj-Y`jd)NFn8cCJbZ_ZIrdlA,A57&7HB@46Imc<:kJ+
%?m,mT:u@CDU_BLbO+KECJuoLr=$dRfP32o<kho&X>au=WgRR=`Z"i-I-TAlC'Y$L[?/F]dlLBYbQsSSKo5N0`F_d6[QToqO$U<Hq
%@Esh!2f78U*giZ8$Z'$.MPrqVB^KYn0!aRS1Y%fTg?@W[_i'@HO*(.j*@tks1e`hr`6P24d=]qI94M2#X+:pJ7`#V;#M%k%V\8h=
%?*-cU?1h;s?_W0,(<F(hMJ@)k9?Fb_%oK;BE]%*=*VGt@Z;(Pt*K>c[F-Y=+KqZcG[R*@<9#LOsl%-h5^-u;9?aHIuY=Gr.1JY'H
%fVFY>e4AX#4/(YVI^eF<I],PL@I01a)qAbl^-%A[=)/II:jFauef$_S)RM[ieCW0P0_G%[9*)_P*A/fBE6(Wp4S8<G?5>r3C3W?X
%T4%,.,C(.#egX0NFRMY:e16p#5`H"M'@@So,TIB$k-P<7Jm#W;:p+j>=$KO'-U808$WK9kfP^V!T42;Yb0;V#.6DH>hbmNN5%7E2
%kjD%Z.'/;XF\MY1NS;Ep-ip..Z+2G_FUZ79]Du61Wr&F+pmp19<4_QA*ms1-V4eFU[Q[ja..mX-\4l^d9,ao.1%J!lf1q]=alc9p
%%t72Z?gGB0eG5;)H*HRQ%"3O*4g's&N'gSao``if.segIY]%-]bj]%S>h*\>_ORr]*%(>.72Ia-[+*XSaReE-6C1kllOt\SD-roU
%?_?WQ/1U(RqYF0`cjaiGRh(/3.7--j2G?%R'5IpPXl2"4jmNL2C++T#e>c5Qc-%4(n$L*[f%AXo4'Q3-C[>ksSZT0'-Yr'bNLd2V
%ZScp7`m,><41ft*[tN`r9GG;IF0Iru3cN(,-0AY%=!ue`On2rL,MJDpGMABTHna[o_i/J#X%j4:T+oX'j4tVNjnt0GDQEj'/Z1hH
%mWA$=%XD9uk^%mTacj;6f'tfNL#LL!lA#*3a+I0Z55jm=n`q!@]"$`hH>_5UY3lgFYA;1u4gUX^j_:J\XA0]@1ci=75&U<KIX:)Q
%=75n2HAA*3r(q=l=*`8X@_HAT^JCM"OIYUC@R;RlZsl?P-F@5K.jhW467XCi@R;RlZsl?P-F@#OBTf]J6WS>&Aqe&*&I.'Z]#m`f
%;!LD]>"#Zk37!+D:5dJo%o'X3Y)e`_VKO?rP*ODuha8DPWn0&SqAm3fcUnmgiK`A]*69n#K^o?#)++\sEn)+KRYW]`3QD\c=VHL2
%[Afib83Y3a*e-[V>3,+#bLA45bM#k\BW.C(ea[?T[CIT7ac5if=j-c:k5)H:)rEU,G#l_&G#e@oDQHoZPK3Q0dKIZ$f2h874@MH+
%kYl;Id:Zt;;9r[*G.$@CF@),]@VcRg4g]SjDmD9).llZ%;@Zqb7%@fcc@\ZZ39Xcmkbm$;`0UAWL-eOKRgbYg0=&^1nZ9=1g">^?
%+-?%Y8^`"Uk#*8(B8kH_0[<-.V0,lN)co;bcl5o5pN;"KTV`0q_W8'dDq]Mq?g+Qi;0OF?6IIKT&3C.*l$6J[m:(318hK.#G8?C^
%,3bX]d9G?1UtTPfA\[R3f2^;&qD5Lu0h';E\#pa1*'q>Ze_W36K!BTKg@:W\IVlcOj692L*eZH@?]7^cJZhehdL3A.7I""gAbGjE
%m#*@M&O#__i8%L<o5Jh8X'/gN;BGm\.C2KSVd`1:2ZqO_UZC=T'i!+/['dg@%]/XXqkM]=?3Huu?Nbp\_4(HD>+>!A=X/aD>Am-'
%qMCU;U-^LLSf"3q335X^3gB=t,2FkC\oO)$m+Ib<4e4K+?d#6nI"tD$/2jjO/]jo4_1ukH3HXT<T7.t^1OetfhEKZZq)d8^^Vn!0
%GJ1)hkDIk'R,gWM5R5+rJA?2PSEoArIa$pqYXm(M$)eatW=bNQG*Ssa?3P3o\GN]I[`:i8St]=8"YcBN8R^;lLg0UIdU%,Q[\MDU
%h$:3*E/8!_a(j+.VJC]/*e-CiekrLLR^rqKeBYOn<697$V>H\lf>D<sk@Dh-qQW!.70<'/#!n5p;sJ7N9I7qM[RKq=K8_6`7efA-
%Z;&pne0ZEXC3imLRhD@K(r)\#O/X`#ULk@!O_d+;U5"l4l>O@U"3`*QpVip73sS!jOmr=<p=%SOI5]8*`o?)/c&-h,dd7:o@rDm[
%hPXqBHV)_R7XFs[=A!f(g<!K!g%s6iQB<027mR7F-=`m50f4_?k]Jk1S,1r797aON'r+a7jMpKt2qCsa2Eom,m\fJ>*R2:&0D9>d
%r+m3YA5]RGg9gM_4*;&bh_8`k;r*!8@tC@-Y"[QA#W.mdh8=W'%Sn#/^T?l3I;^3ZGW<%QU9:a<KbN2s[)V.WP="G[H8(NI$%>RN
%g=tac0K+tf4'm!^YH=.1XRAY(_`H.ON(pX0Y"_^te7+G!rLMU=NCc(908J.8ZpX[R^tD!dc1S/;`!u4r)W)Kr<^'[Ha7_?mnQ=DE
%"u>;;Rf?`@.7o#rdPi9Hl&0@Ae-0;nqrTsXfD)I,V+pnVb]T7X^[T22[)ZTXa'cgGEB&6*@Ga*H'g=-#8FPfMEV`icmGg:HC`80=
%m6u)hLdL%(D%jsSK)YDRn!SZIrB7R7o62rWql`MUhY1,``:*0/\iB`do(;j[50]9=g<L8loIh;9o[QV6XiTD65'pT8qiBY7ccP_-
%`ufa#gZKC1T,]u,I/W?.K.i;2O+'4%4S[suo97ATm/#anr:Sajg"C(^Z<mNPHE;o$\b>UCK5\H0hc=+C>G"UfO8mddqO`TDNV.ek
%++o%bpk+o7LBjGHYP4N=g7M1/Fk,bJe]WDfdo4C0k#W!eXqJV&e`*\ICR=kg`TuQV%\CeM[gq,;\iti)3ME':qMF+'rbn@&deR;3
%-IR&9a2k<siA`XtBhS7ucf)'Rd8^.:_l(7037MqFa3o?7]S-r@6`2Z#oW;sNJA9b>lhLL>iI<3SGPh!hnQDYa">q='"US?`&qsDh
%%0Ur3r6R!liE(:SI1iit,q3EAD^Z?.?t_]]f!]gOA?RjDTS3bG%u2=EUDm?@'7`K[lCK9FhR@jt4c<L26bNXff&BB[]1ciX&k;m#
%pkX)"O!o0F*mrU>HfHi-QT7"Ghs)-Tc.+I[-a,`5kgTQQIdrJ?rk`.>aaZ0c^]SlYW(AT)6-9j,:^j,khnM2HoW,QC``i$!2lA<8
%St5LHBcs7cEr;PG0E:Z644<$#;8*J-o"701f1377#Bb/Oq"40A+7P?9Spm.<`j).0h!M;@SW;b.aa>PdIfHj&'0hQVrq)VuVLF#@
%<YoW0le,),E=V%@BpP"':\C*)]Df0UY)\PB^>lSu8$>[KVmj5sJ,]<:lDEV;7_V't]Xm@!q`O0+4`?r-r-FRU5FES6j)EZ0dHSjN
%<b7ZMK2:4uXfIb1Z:aLj]jsE&[]On?7<#u6eQ`"Jo]hBZE.#7'5@/e[Fa<M$q5@46Z$u"sX$<-p?W:\#\I<U%W1WuQLNM?$@TR8?
%S;BB0L,:DW%>oThU(9sLn:8"JEUtlfLU_liME9J##.oP1A:u&S0DilP_<<#MT]r*<Q-W64^&%ZfjiR>i=+<?)rV<qc5G"G$nu"^C
%S/l%"s7q7rMrOLQI.I)IrC@nPntGdIM^GEdT:`iDH$8h<r+pSJ?hlpI/l0MMb5US\T@pQZPI>eCERG:4AQS&E)s2W\gS]P"<qoJ`
%Q2g`t^)k)+Xsrr+e@aCOq2+l'S?W;=N!JsB]/^%eT%+nNR'sJbBjP3fdWGdrp9hJq!B=EIk(g^b-TVQPmE,OUfN_,+Kk$jCQj/t`
%aCM4_2S"LfnmU?A=-I^M5Alsq&^"m5R]k=mlj#DsJ,J8\=!q&SF\DPZ[V>`%Za89=pKh)GT)A3@-A1Z,[h5pkF49J*N,@,M1Ul'p
%"s+#+;93F[brR6.a#MbM,r;sU[sqZRYINA"lGX:;Y(!.@KP'1mcECQ[+gaUCS=RB=K?:O(Dd/gg/Yg'E!Q`:sZsL:c]mA#V/*n55
%Hi4<;eH6\!bfG/(*u>c,kaRhP(u6M^qWY/>Ib'LW4O0-VB)H8Z'/@MK>O9\a#,jeRIsH2-]:VmEs7lNf],_c7*>f;F0^Mo#pZTXd
%h#"cIW/&"K0:[No&,[sHBAVXGY35`NT-q[_nM!$I-X^^!'^XanqG(HG]3JJ&f@cG&_'m%X<pF"1g"W.?2\(u-FQ[uRM#V6G4obE;
%jdjW2NH<e0b?2L_'8O6E+ILhY9YkUp5^J3N=+L4gPd&SS-SbRWDrQDVC=><LK0sbeBA6li&i=(A8a+TEj'e6hm8aesSUp"S-8gS#
%kJ9[qY;p]&>AF^s:*F\agEDu*.h(CrOs#Pq14S1)L^sSC0@#*S*_:QB-'D#"R?!A1oE1$DLH8:,H7KYN`Q7M&Of.Du'dI&i7_YtC
%BuS-MpVgjc`uc'$[:.%p5P0NSX?CfdXrSc_K.-3+&6Y^tlTT94=2Bte^DCh>&Am0*gYsId(Y]&6m#IO7MmV$]`4`'_Wul_:JQpc7
%,&4^*#NS$hOH#*L(q@I_pTH"5Jaek]!1?JO.*L?<k%u+?<eiqbW,:l_HnWkne2e\_PU#G]l>,?b+6MJ6aF(KcSiaS#QF,KG<rDjc
%<ec2=Ah]N1bP,M*9pn8m@;)D^=dtiMMr[,^h""dgHh(LKae]Q49i*YZ*69?]'?H4oO>&E@pCm-MY9P+.pZ7)o4q;uOejn<fe<,?M
%'tEQb`>.]c0c&8.p#qn7Z1_Yt6b\ikEkQrsS1tnC-Q,l`gKk<jO[%g\<:bL\^j;Kfl7G9Ar\<fV*n*A&DqDk=Kq[Ga3YpSt=K!nB
%OU["OAL&fe.HWfC60m+m[]LkA6%=+XHr:Eb]<(YjUU-/bWtTd7?NUJd]9Eu:V,"(RR0]PNHFB:kqg\X#YN2ne.g;pLT(MPC?QX1i
%@?./5ZQ8K2<`kE3,AncC^TX[C[H"q2LQK>h8tfc_Sd7ELs8R07VHm%E>MJZEq-!%_%oo8N,%\cUOVp,632!2uMXsY0+in<tIEq'f
%mr*^MFm[8MXJ,^^p:PUQVq:3O#VmVLG3mlQnFGOCURrUo;aU0AGu.5[X6LF@S)p>@fhuS65f^&d($qnK7)D>`iTg<X0,LOM?ABjm
%:/jNiUh+S5LS>%*qE1pH+H3kZ@FZOfS>F(S+,[3k[Kkt%Vp$'mpUr<2-01[pp@^92G+O<JGUiBY:[cGZZCm3j]e"oS,bip/VJ!2B
%C;u"2n84pE/':XRJ7mesIdo<gffZo!b2D&lT+;oi0UXE2^5/ck7*K&HI^SH1`^<n1k->&MLUV+LF1G,:X$GECVP9>e_/f:;5;>4N
%>M%e<1A:3\b_G9nXi#-a0e6+QR<&D^Z0AoYWA31=IkIhGaF@d,X>ZIS3J6csV9,YS*)#b!kFfOp`1j@ikf@#RQ"+*%khPPfp2N2/
%-s`;S?ksKoFY`1-%AF:=$-C$uKY>JY!9OPAf:0uFQXpNp1:!o`f!A8YOJ=AsoN[-d8&a'U>e0MNfn8c<b;Imng'V3hU+D?gV!o6[
%)6p?kT*nZA]M3GN+rhhrBI;)2@:Fpjd&"j)!akTc\_F3mTQ?CTH@cr5l#Pdf%@.G0:pdN![[KhAZj!anX!tS?O!=r/,:I%6ftP6.
%5k?2Ek\)".V+J/RB*J/]ZsX%e_n_3K@$g'TrOPg)[^7g0F:P0/bMI[_Q.&EIo[S,EWQc/uY?@7L#Mr:L)e2d-:#?^$:+n-UEXG?P
%kE'ZfK2Q8qoJ7n5`RUZ;"7]G9ei3HiN*amJbHj,!JJWpHL[`]c11<ruot^Qq4Bbr*lFkA9b<BnsnjrXU.4:QZ0[$bb[RXJoM^0?Y
%8*M%3[BLcpH>_87lS<dsL%su=.M]3h0Vfs36H2#L;I'TqCc(BKn4%q]+:4tO]f]gfM's$L4mPSW$%/@1Jn^=L<0nfHAX,X"$Mt't
%qomf^W2!-TDN,9/j=Su9l.rS<,.hjrHBUA"'K.WLfEuUR"C*@Vg+-*4&dann>gd/..?e24dFGaE=n4VldMAX=K)1U20!e\+=Xo]D
%eH)VlmElVP5qpmSVNA-G/,f3RLdTBPBeM<4Wf'E/2`Mk5m;jsA92@iBeeiY1kV'-JahS)]9PmhS#n]D\LHbHi7-B^lU^"lpQb9(g
%QsWTG.g3&_5h;k/d5[@Y?@45.:r*f-d5]H6gqS&>*offtn<L!8(.DX,SP4lJO0)EXh[QeI+UMOl3;9^CEUJ5BZknYD/18_[+L:0:
%XspWj,)#3VXO?SpDi#5#<eikR$>bu_]:uObEt4%e'EbEZei?"Am-ANegqX$q(4"gil;Ln;\4"i/j3n_M_$R]kXIr&;$4.JS.1eC'
%dsErp^m-k>=J`.WJV#]@Jn.PR(\+CGgmsGU`Z"kt't6q3BRkSpIFZE9b@@b=q90WhN_mum80JrGV=,W1GZ_g?1N\(2@rhU`=G!j:
%QBs^uc@\iaM7a+O,Qq:/UDN@QM_E<>@#b5@!kAhO\NoH0&b4Ke`j.L6D2")NKEc/,VRh8FP3b"[@I-OaX':p<SYtTL4A;g&4/?34
%[#e,pcsN/SBE;89_ScB6&9FnH:-l:^^/**BX:B[K54kifSM1"M]_)7')MXrWMG[BB7[7[aWJ13"FMH=*<MueDOnoUebfTe&YN\OU
%?=(t2DuV+0<^dU>Po>8kMPLqMB]-R/GVo6Sr=OU;Cq4Rm%0'//.pO$OqcFMp;!X9L7Dp0Aas9YdA.atc=WrW/n)$b8Ktrt+1=u2%
%Rur0],+hb(b;5bfPk!*/5qf6\%KDNe/P(Yid1eH%P/kM6KUn?Ynlpt%;BVMS8!QZ_d=2D^)Z1Bc^/'MQ'$6(F=b2tr3KH'IT^^NO
%[65VYn.4()QJ@*BU&;C&#.p%/;82!K[hZ2;ECUK_MhsZR!G8NO3HrBbhW@\%,n.@-n:c:*JJ7MC<6(qX<Xo"(c!@7j6%Q,9YrPr0
%iFdhUOT^SUD^`ti@#L2lln=M#XcOq%'UunjjM-+c?+=8,]d?W,kD02[,X59:)ucNY5\8F[Ja9bJ`JU$n1]$B)%*_e>'6QB4P9rIR
%q#?ph9^0j_i8q^2M)I<8q1P6B6"s!aNL[jr?7A+4?hLCqr"qqi*dHO!`R10r1R5!YeI<#tXB9:7VFc&O4le%ATuPft=iuT$63/=R
%pHk]k=*f4s\BTO>>3YE:PA4[PF+$,YcPlRoFm#(!O,j8'f5&Y0rU?/gQ*'aEJ%'%F:LsNu[`^/-raNj]_*4-OlMp)LU#O&A5-uME
%[;jf2ARmVB3a>\ciPmBuUiGGD5)ZdtgBXIP`/"!ZhK\6#R-YiBAbaO8KdZa&OV`GAW=E@tF(nD];#on\F-Rl2A=;4Jp19cN=Fs-U
%Dt%q!c@\9-./I/n/#5#d.mq:%e*3BDdchf)*3>e!FnUk4g;e%G26I.jT(.?s!<^&;D`BWrm%Tg852u6BS@!LLO8m[2lMT&_XXY=B
%apo5IQ'9,'DWg5^nRcS6\C5^%8#L]i'idt7b?d1,Ei48+fO7;gC)qe,l>.O!s0mBSHF@/+3,<?q.QZD*_9)68p3roZ7$h+Xf(c8i
%>J=Z`\HP($M[rR+GH7:;b4fG)o%0M(s1%[hT31g1m;H2n\*iqFm6e<*g[4pNd?RWjfWQ'?$N;t'=*mFaJ%D>mSl*[Vp?8GrI+5>.
%D9hnp:8-/8UXM3$No4ThqEjS/[bskIcF7)+Yhq[Is'3$]FPQ+UrujWekVh#G]C#RicA:#<`cAJA<s$OarJb[I_);k'HFiHm_)-Hd
%\^EK%3G^7SpV39+^NCI<#DX[^r?^\_bjBR7)m9_]=51>7e]3"SP7MjJA6CQILF9](rJ&J&mFX'BLBklk#J15sVu9)(K9Pn7ldHCD
%H1'VcpgC<)pJZilA%(-/pCDABZhp\L/A#.J=E!XPWq(rV<3Mqa[&gge?!J4k[f6#&^^>Jco^Tr@@J`krltCb7A@LE"qTSiNI^"1a
%HL/&#G1'Ji-%BbODRY@m3tdVbNsRjIfH`4FK&9uuq,+\bfu:ttamh[W-.-K)cPe;+85QpF]QVZiDTML5,9(nL+<L]`@>u]/,trPt
%UA=5niG?!PSj2I_qmZ7<gS[]j":%hSmdZ9iKf)3fn%IP*H"%]l6/Zd0F7]QaeCG2[Qg9,cmMB]CTD6bgp,^7]%AD=e@hn,ZYMp('
%64%hWKfo4PXQ6"YOT3)SEO5\pqUYB.L1'L2]VBdP89T3(mGtcar-p!?s"STE#$Z\$n@rqn^Tb2@L#]S9R6N<1n(!9nUG$Y27lSb=
%[_?k\^Mkb&Xc,:`rp_@[\UJQEN9QtJcbWu7_plG])fjYabKgHb$N[`F]tY^$R"$U8lC/ZF+M.mE4.VA'f]`=Nr`Sac?f,D%M>obW
%r5sHak>RA4LY*.TN]-q1^WT?4d.$0>b\mC]8D1lCi2"!AR7!q>5Bq6:/-!r7/"O+Oes!]F;>6`]6k.uDT@f@Ns-[*fpZO2GFeG(-
%]WZhO;,nPP[CLd(DkMR%7=.D[ej"1nC&Og8[RPTE[++9pm;LbV([nYB9DM(pnao$E=mT=:gA`b[qY)bFhm\T6NF[irNO%S-kSXkE
%%QnXYUfdD5o/#br%Fb+'m<!+:]:*TA>!lfskWll/BriJf]rE:J'2u+-Ol=/i]03DU\)*E`5ACF(I,VuN2-fomIgu@62"KGnPN0QE
%j.>q&<kcSsNWA1:B(3.7R?+uIrM.9=SH&G8A@^G6NMF5<D.)e0SYN<FAj56SG4n@l5ELSIlQ5]"[jJm2?*0p>PPOqO+75hgrYfZ`
%%K4M++Tsrn))5eS*5]G-pASc%`QEZ,n;Z4ScI7D1"Co0QpXcka]#t=9,PdbR*d,2*q@U_hS+T"[]`%<EmW,5;fbn@f2>OdY?F8P2
%OF<mR3H)"f[47+7_=:R(4#mS71EKiZqp/%;8NlkFUYUpt;6.##+8&kj7gPeq]K_HRaY7Q:]Ip+rFKi<h4"SG_4g]F;EEX2C[15'1
%$mG8i9QG`U^:25V`Irg*\f7cHp%E:$[5Ep9_iGg[^XXDerQ3l5IJ"g,3BZZ:Gj!BN(nRac&#DcHiE2+d(s`\J;5:j`LB^$+7QkkC
%g9(2A7]rB13o"$@cT)O7qlk3^\8d\'..YcH%/PiN/m?h9i$3"ZT8,1,de`sjn^!`_+6UkT\UWDgfWC\elGa"0[`:FKoeL.P-D:$(
%H[)2bQEO?hN1Dg\R6T_\i.u.=b:%o)%6W<N5A(XsAtu]c51r(8+27.0[#TIS?_aN^6\:f5i^kkC=[ZJaJV/)m^$r1qG78NYCYPM+
%k>Hm"#A^H(HLiS9[J0D+c@Z:$FhGEBQPRl\P6:Pq,`t2g&m6H@UHSuX4$$O1Tr]1B0:D0?X1cpFG0ZRNSm"A25Gg%$r&_H<E;h]k
%SStUqG7ii9G7P0:H=dV8\EY,`crttm9>iHhr3t(g0YV_ZMJTe1i28AKNpQ.bMo4?mod%24Yf<F3g>/<pK?_Zln\HY%o-nGF8#NuR
%5!5/VE7,6N/oR88J\jBmT)#eMpA3'g-NH/GXkc.,NV(Nt>>eboU59E8hh5W[Sr5"AY$:42rUXggKCpV;@!KL(:#<#D5\.^'onJPu
%`,sK8eeoa$TI/EpaXq.2k`+E9mcHfB)B?`jJ2i;h8))(^,8#YPP;OD=+So^sitQ,hGgJn4XSPMIUoFO$3]ZJ]cq.U?q3"8XdJs";
%UYG0PT%4-B4YA#X(^3klU2>5c,5NTRX"E6WQJ9)<H319QgHOJ0@j-ICcfja:*UgEH%lYV'ljf2UdCaOI:TiLrd2BJ#&r?7DY,0.)
%SNVJbmNC7F2)j*UKEcn"V_UO,N#,0:nNBltp4-/*cOniW4'YFunr($J^l2pBCnl'YrGDRD6Ijgd%<p)Af"u@e;B-q&jle).HFRrL
%`[L%(i+5&"eTIjt-WT`fs#bP2.3OO,Zj_'EP@3ZRp#E."F,Ma$Ggfg-n^1pIr,GO3%5MVFX5<%^LJ(F8c*E%Qm<5G[5.cnt-XbOM
%n4\;NUYei&:J+Z_*poPFoF1R@(cEYeNP\thnL-gfrX6Q&k?__WV&,$n1+0s.(kpS.:=#*Q'1t"iZ>Z=-Tm,^44^1),W!/"-,Ys*1
%2.dXD98Ie^m2e4?q\pHTGKS30oF5@-NnT2)XD/U1gmMT$I!?^;O7Ogon`<%&j4+Z93ucp%HaQZ#;2Dip^V"Ti*V&,L\;KmT0_m/r
%4KQ\(!\.pm)hs6L#M\VfoRe_7g\Zs&"QSs!ig7P'Hd`KqS\ck!VPS%$g\t7rH2`[YBmY>BpZP]jm%e8eW=WibJ#@k%j#TZ#Be0oT
%Id:g.g5>*J""ICVb*DZBSYne?[fp&LP9"aUW9cOQ_"r5YnE#?/?`JA#>!7<;V90_=gP6]9]%oB-\lTOSLGb^oXN.Z4cuo>_(6>U<
%$`;$PcQNkMUT_8r_o'q=iDGN8Krb3kf&i1_-#c(u)<kj49'->BOu&_Ye_T)/$Mj"c(VS=2bNCH[T,!luLc$_!B0IoVqEM06IC2o#
%OW:-B@7@QscLCuKo3Xh[pkbOKJK*>,fdJ:NI^-)(NFna3TtaP9lou:?d#6npc\!O:ZZ,E;I16I0ZG$;0./*35Oo"&kqt'>U0^Ys,
%Sb^h=@8\;oXDW7]FcI3DNr*k8"#9*(*hGuB39sXohr.S#[V5W_)QBonLeJtqR0iIN98>^pq_gh\)m`"n;Sg^ndo2bh;aISO'&rM;
%[MW,<j=1od2#?SintIf-6!U28"[@dl*5kf>0Cgr0l?Ud`@@F2<7\cF>VhE0X4Cp-I7*]^F-J6^,<4+rigKOE.Mq<0d;/>@RdY_Ir
%/R7Zs.f$JbL<;"p-=HW6iB4fhc6/+-K4a)D=uF#7Ck'b0/%$ENK*PX%BOtuA/%,@%">"-Q3Z;7AoEB0PR^Blef=;8p=/,tAhqq];
%;(dh)ETp;LC/Mf)"qBD%H$b<C*E@$XXL8I]@W?mkUW\>!`ae%XWjXMSJ#MjFpd"0?<'O;&np+>E5F<L\(8GeTm@O"]Ra$-E&1i[3
%XYUZ`ML$ptNn1hsLNTfe\VuC[DjXIo,8/)q,0EaJ>s?osY5;ueT\Qa92S*s4_gL>so<T-5$3$uoe+j&th6=Q]VJ^rL+2mFQ7kqmJ
%$Oo!=_"MRepuZBXJ:Ftf40Q(fp=ArlgUe7UH@G#L;2=Mt<Sd$r>,sf=jdf:5IKgQC\`amRl@l?1?CV7GD.`I6Ha"kqi4fbT],_l_
%&!r4Go?P8/1R:(P`?Teg^Qt;]Z^@;h*<-YI#39TMc8V@:llW<Iabu_;GNoV:d*IJpS-SNdjMh(?i@Dh<_V-e24UNVS@6^5e48@iK
%i*>MRZg6G"[J',gq`gY>cNp@q=H+!p7iQj$Hhhc2bdi'A'T,\'q*H8hqLm20r.Elh[:"LPbLlDH$iVe@kCuOBr*@Q!(R%p)!uYoZ
%Vf;7Z/n803q6`0IRV.*37JrSKW1P3"k9L93'"_B'&GirN\UAAfcWQ&a8G%]]XtSc+Uno>",un>L4o#8hi0TD@2]Gh0`JR%S]a%<%
%NRV_;4L(M["+'(mB3#4=e6fJF_).3A[u\j&mCjfXGPBmVjb%SX79]P2^7cWE<\]4!VpAOW[tFS-_03C+4F4B@ICLW:F6=ope/gBm
%%GIHs+0<;od28FKC]]U.Z`m<N%U-ON,7F%kkbIO7<;Fc6l0cVN*q?Ad1l<EnZT-unrL&-4T!Hd69h<#R[p@t>m)o7c@[SkT*c8-;
%q;l4pH2f-B5G%c#I!=b6>Ia5$;7u^tICX]ODIrG(pl`8bXP)sSadNnBdE?kmcgMmpm0?EOr`MF7GI$mLio/>ET7?jnCefFbBK!&"
%)/D.64s#o%bC&RRo0<-PaCgt8?MDF5OWQ2una!7/imYABq;LlPq9N1=E:.&qTrr'<$P2=m<^6PMPTR&5iNN!jXtMuYY;c:CS1AO7
%`NRV\iE,L"BCP4JJ"8/u\3p)Nl51k_2-V\_his`[Dr]GNnsP87>-liBQYUh\m,c..43sGpFT!(`^H]J]o]cX0j\k](f$!;&q-i"H
%Y7KbWh&lFb21D+1s7OZuX8&A?s,$QAh-0.8=5?T8[=s"3s1j9_btkhK%.D*mf)<!Xg":p]$R`84[rhA5S%CDg4T"EadH(W-kH7s=
%pXN(6f.P<q=P1:WkjlTS'DInk,<VMjcP)\7*H,iKKgkac/mS6,PC6^o0E:rkip]k??3lV$^P,b<n(ugrc0;bX>C1RkW\]dhnNS'O
%Npu^R3l5Yomrbl.f1TD#cM/5a4nXM]G[8<2b>tf/q(1PfgXX2O1H;,l?fWku0Dc,0Lbs0+<pl:Aj0P%s3;;k>bLr4$G:2P@h\c)m
%dFHgW+.oGHmd/`C5B62dg;CI^iTo:Ebf9=&5Mg8'eM+!fm;q2)B!-\m@q+WAm,#RfP6\Q</3XU'ank<#p?b@+;tln:R<q0dXqt%2
%QQA6smaB5RT7>_MH2OHuFm$8=,Ui%ESs`lpIW'^bqqD<If+`QRn$GJ=]3F'?^\M:*hTW=p4#`aI:AJAfK6]VeSu4L`NugI!^Qr.i
%R=4XDHrJ>^qpaDCI.:WREF\Nr9K0G-DqE8$k*O\Wil9BCS*d@3R]2kQ#o@1>`FJ`;d_Y:m8TSZ^m_7M)3,?+S;toFXXNd'[Xg*T)
%l&T^jmci1^_ZuZ+oM6\&T?Zmt1Yj%cZ+eg0gN`A(fj&d^"aR`Oc0!j&a&qS.3j?_AT>m=`ceeY7?CQf'M!TH!njp@*=$PZQnHW,+
%b3[IDApS[dhU1Dn&q?>SOuFbW@hYJHRcE!9Si&1SWO:mM6>l>3mH6KI_3LGT@Ird?h%.cPq^VorCJSiVRStlZk*jn'5HcuC5MlFs
%CopE-2K*ut^>7$,Q<uJn;:0*hn`*8:GOddOo8-\4S)O5=k@S/:FIVC*VlgmZpd`Ssf?MXdS*TB"VWR9&2b!>`S]B'GG?8^4CYmf)
%;pDk@CCAD_&*%#cpF!P=RLb^6ghT*bI/'tWq##*Dq.0>4[^jo%r2'5UmaPcgGp4dt?`_Li2cgceqW@,1mH`p"anN(&gOnhdS+",I
%hSNnh^3s9D5JPkLf_kRq^YW4"IC[e]G^F\7\[c]mWO[/u5&Td^A<31+1[fcL&"^6O2LhgCq9_==DBFiq(Y^<Ij+h\Oa!Trg-cW<,
%]mW%%21IP(Rm+F]FY%mn^,b?"dlmNN=T3a2nQ>VRb13bd1]&97mTaJ`)S=ULpLA#glfH:AK?m?kf]&gJh6Ef;O.MCqhg"G,?LGP[
%++&FKqJ,A&-51fth&RI3ZI8Y+[^IQUhRpC4a0o?u"FK0aT>hA-b=-g@pr_nV5.8nQ1d9meDN.G0YItgG?3u\4NI+`ek7_`J]\I9E
%NSjSYF*%99bO=o?(S3d=55o4AHSE2+B'8m_o#DPqr71Pre)To:-a/JYMMG^%mH&M8]^ouODu@4qnm+F8^Ai5&C]%jTp=lFKkBAj<
%?+E0!mF'MILKg+NRnpb*b+#U/0#`lYIU'JUjKNoDI_f:"oZ59P?[=d+-GT3DqU+\'Dd"q-07CL<\pUJ?1]H@]k0k\^QZg(aSQn3<
%Ib;6e]QnO%5')#/mB`Y4;^YX1?8g-`qj54jm*t-$cR/'bT$'#n/jJ-;Z$#m,PM;:f=,PSBbO<H2hd6;p]CY(R`qSk>q>6M^bEi_u
%fCpV\)f7fZAS:&B6u-9#E5EE$2^`4'c%h.&gTsuC1D:;:lB@(&Dg1n&?;4\>4n8Nj_mP>E[d>HVFn-%Vq[7=G'.;7mDlubR]pZSi
%h7<(LMI6>3\oRD]c&YrgSfIMUMpGH_Xt5(8F8*hHmAl"D5+cXS]s8O49jQFV>5WF&Gj!ph:r=f-DE"c-2WNPm+blDc\%e9M=78A`
%q=a)PToiD`mB92grV3Y2IWa]@iR694\L^uKSpN4NH"F.b5'^XeC3d*e>.QM8p[_6to&5X`UWMWKcGnr"a7F3r^E,5(9Q&a5L!NHl
%fIc]1QPY*E?#*/^(r$hM/c<,%pQ=@Dp;gP)>^J2Fd(]5AT_%uJLg_C/m;.:KE:*GYbD3(=a`!fKCjGM]lK4kH[Aek`g#gejlO1='
%Dk=]1::8-&/l-nF>.1;ga'KPPRHmqhN6be=%i1dC^GUH/iVNMJ#M[k&Y9/a2J+m[1?!mWsmU+jUgNbS<[f:)THM[3'WTdl(H?OW.
%foJ)@:NeZ-VH62qTDn]Wc-tpJf#t2[PAforf$rK1Vl_YX[bJC&FbnANSuc7Hdop%gFfEo?o(l4!p[S7NNNpOlerAp\0@t*+)rpaR
%q3+=@D`jXPFuS9mIf0"rTOWH2a7AE$m-<-S>FBh$^6@BtgCLU1a33MrlF2I+g"Hh](&$b,k47N^-2EKScR*RtgFJIlB!Imi26RMt
%CY$`-J_>O[]P9,"fUfMEp6@(RkMZ?BI5:iuSUGjep!@Su<XS_6C&EjX>Zf['_,#N&oD."iDRl-]lorB]pY>M>Dl"P&o/r5_p`%9F
%;uZKm@_t?Y2`9aT?Ft=G47=dBq'1+J.%f5(G+?T3`E<+YIf=BeqSr-KI!tiqQN+IDXU*O]c.ri*q>)L%R(KU9?G0V>'%V60mY2hR
%h*c8MUCTe`girf/p[Id<\&IVQ]2NNf&$?X;)dkR"T>)gn4aM3P5+/&7jnh+uT9\/,mX:/VcgTP#4&;1&gr/JdHuXZ%<rC[^,WEKN
%Fa`E+p:D+s1CqKo6GDkOS9``>3h4lPFaHD<F7[hDh1M2Gro&L!$O^$rDSB<LZugBLc/U<5O5&?W>M7Qsr78RWn(Y=;\(2@6[EFVp
%[si/-s*B%gm^r;LGHPdVhL=&4>/1#Ip!T&YLQ?M#kPE(Dh)i(^eiqo8p>jreSM0H(!X8!3DBDX/SXuG1\U3LBpX@s]LJ,g7gCLG?
%h!H/kj1QDX+5XLd>IZ3X<j#bHhV6];3Ljr8rj4KIg)mb9mr,l92Z)XkS'BXT=5$l"=)RDQT8P?tp?%qdB&1#DEt?=S%_M%*nsT=)
%ZYOH-eh5dH?TC<!4MSH#E-:-fgQRVNiq]pUKu_MDXbBPh[Up<c^HPr6Iq.K`pAMPmg>r4a+.KV2\$,24HZ8)kpS.sPDf!AtcT4.k
%+07Ui5'kkORCrJPT.W>m>b$1rcTM,IH2[!F+&eBZ7p13ps(GiO]CY7Rf)7[kp9*e3>J0t#adpE(aiX"0Y<T,707Jrm]8n=8m'F`V
%3oa/"='f`lHG$Z>\b"nIo++>eDSQ4aqW)4c*JJ`U+"pnO]C2&'J$CDY\?p9fp=dsGlA+h(-V\[Tl(.4Pq5:E&Dqh2IkAE2M9blQo
%T$<#e+.g0fa.GNL]Cg1&H0a^IS'Mm7BD2.VZ'4M"J)&qlZ>@#(j3*@)5FsEU3W=F(UA8Npj@/n&@-kl(GkJ@ik/HI^R!a2P`cCeD
%Y5;P<>V0mLIC]+=p#D;VSVbrK%r]*c>P\2Eo'fY#m,QTro$uQ#YEih(5(E7mG]W9F[Ir)?f5i%*be/D>Epq!5m]2g=X81r5B(bE>
%SYrNX'DK8VR@ILOnsMGCh_niVH!al!Hdgf`F8p*%o]c8-k>PH#^AYM3FT(%Ff1X)pKhno(hL56.bP09Tp?)7?XeiYu?X99aGe\HP
%Ep8504M(7FM>R#B_oClI4!,hgY;\\k?f$83n`/?^SPRL+XU4gIVjl"EeipcrZ*O#di72`8fselokNC+aS"I0JCTkL[?GF5SAaucL
%^9#**Ref)0(Jhcjn!flOT0F=![kB>9I;IfS\,*!#rnd3<qda^B`S/S'bKF\%)lq.th.pdZf?7gIX7D\OPp>m/rSYe,HQueqp3ku?
%HIgp)>Q$8/nW1#hZ[DZK>\A9[k0$Knkf<P^o/CS`2Kq(J\Sod)`Ga((-GFl^3BChk\JP-%\!Ct!X`!OoFM$<,j5eJP(U%I8D!sSm
%JmeF</?^^U?hl[hp\jU9ipE9rZ+I9I\hI@T*.:%fn(tYUU>10@@QJjGDti\dh7L)#\+eQ>GeAOfC:pj%s,-W^^O@E>I;ll5*?RCm
%jPCkmXkgO1BX?m^LW_2T^)e=h2':"SI["4.j?MKP[`>sRfBRJH[6C^9^K`91*_fttN;r@;^=GJ7ZX$rZWY(q7Wc7uIm$PM/DX^bW
%qBN`jMD\os=;c9M$pAf0E*="N[j::A,*<WWH?P=t2POBAUnO68QVk.&TjIatX2%:?3'&a\Ja1ZPCnR4MgW;?oN%V6+-mYq'oRYHP
%h(Y%PV1"dPA9"B-W*_211hIZ(?Ml!#l?R#LjNZ<T/`AoBs2p(0DuYNfboYm-kG.l!rB_GQ)eC*p5XK!u<aF)0QI9^LM,3eol92EJ
%':\pjDg1op:?=HBD/[bEaOqTCpV6+H9B'?,$%7iCg4u5eR7DjK]:EiQoZjG8(AIiBmr!%P:"#MYAnM%8]AMis7V$,N<[QB*hg1-H
%B_d:pkC39@qU`#]-h,2i?cqas3LZ?jIrT=Tot?uQ7=@u"QhH[B`O5X_jQnN_rR]?C$raChB2LqY?e`8iV^g21kcr,*D+#5U3,-9L
%>T$F4'?sZqmi]d;D+,(QKgg_;Ho.(O3qAtI]l-.0d<F,AgmK74;p4F9H0Y6`<nuOn3oeP=7.5eNmuSj61TrBR1/h:RFdn3lh0JLB
%G5G/UBWNf4Q6eAb:$rB'#S/%t7OT*7OP0L*0#mLWA^T%<g,N_Lf&g;Z8'J=:$`)+?:X`+H3Cb,n:#4;lKSQQ_GYsb#Nr>P3Tkn9g
%Q9T4QQF@9;O+VrjIqiPn,sNDE7*h0(=B:G'8[1!UjQtE^2u`TEs!(%c.\`-S?n?V5qaR13<fq`[5Zq9495,)/Noj..Pp4kHc\uY@
%s3L_%KpRM9-UOE6>g1A\&TZAIQQ_.I]M*)r=\1<@O>.u02.aS87O0_ANtEFb-ddmmKO@t0qK,FVai3H"2UM&g'qK_J(1#(M4=>&O
%Q^'.X:al-_d:.Sh)Zi'@iDBVNMm_-<0[uCGfSY2,[(OS?`r&B#.2TUna'_PWNar:-b/?[E7IsGNE5f"cILVtR<]Db%=6uAfV^Ae3
%O`@El-u0REiVt)g"VcD%TF8sqR^5d/+"c6A@"#?Y4NcKDd5%H6;oJM8rsG7WI,>6jb,UGf3tO)AD@6$nnI:C/."P`FBGTP\iJ:M!
%L?7GURK;stR"4T73Ar"h!<$H@:+bX`CA:FA(Z`Z-mK+f)3t[,K5I-f'`g9!,jpMU?7C%Z[-qp\'X`/3hCt'0%i4*X/B-1cHBI@14
%-]uZp8nAY2.JQS$BA"o70lkP1gs38L>8]Q<l!pb"YuH"gUGWJ3k6.'t+CX!CQ?=6>i2p_Hd`Pd#i9<$=7ts+n\E%?S=3+rXETRG.
%4]aa_]hCjkGZ2aR!KtWCbDVOi$M>eJ*r3)&E!*AD!'6D2XJaZR*D-H\>Q.4.D2\dI.&@TePWE-FJ!!&mi*h7)g,QP0;93>4^*Ieo
%VCU#<%=N9$:-@c5O1@C!,R?`uOeXoHc#VY@L^OsY'X8ASc8oM"0u8.KCeQ5i4uQldksTJT9+T+R+OC9-i^@`SD$93qCd+'`=cgfF
%L]G`ZKJPpH!^2,DT<m`],if!1"3&B<!V1XM'#t[-9e//U5%o-kEQ<c8H]rHmpsJ%=Gh:*4IS#>jJNatCUXtr0,R?HLN$Q:IEO(:K
%BJ1NM)0r[9B<=9J7)hA/;f^^)&F=p_JqSPoF2=jcg,0$BJj^3B6M&SKcfgML#rrKUb>#j5iLq*16/eBT,XT+_-3EcokgoktZSY-(
%3Lr_J8-0u9mO0!_iC!ej%+uRJE[fU?#UrlLj+G(1^Od`iQ3rD_QufAb.hnBZ*#Rq2(!,]TaR/\Y51X4DQnh&q'WtbcdK4jY\S&qR
%>qd1p$U)2Gl7<(YF&6oQMm*G;U.Ju@*$Q#nXK\p2;(P"=Ft1DX8pNPQ"p]S;Q'PonH+?in/'&im'nBo,:R=Gq]^R1K(cU]RE]hBO
%FUgE@*/+Ema[>nCHc:qKEB4Fe>.K%5]-7-2"V3td;L25\;ZP?>].t?bDnkcn1pmI,aNaAq&^UfFZ]H]ZP)Jbi@iWdF*2NAH)I'&c
%H#oZY:/k@9HjL"9DgC98XA]sc:^UuK-95YNFsC&B,?Z-tSo99eZ#MFVkI_%?T*=;k9T7ZKE_nB7iN6/o&hM\E0g^qT!os[a%Knjh
%j215#&,K<e""*O^N@=Ef1(*8e%L9g9@H]$i/V@RfJ&[Xo2Zcuf5b>I$J-]bu)]9GQkK2pC>RnG$5aI@UbQR#>Zct5&J/6-QHlre(
%5`_'KAK!0d-ZL\7Un#;$1M!<n#)lE0P:m*@?X=@S,PRZ8(0hF=W>B-qC4!uFe4!/,,Ta<rEp6\:_\AD1L?gJO"-,X4O_&nWpDkfG
%'[F<a;,(T0OOuP6Md/lW)71/RA<gknEqRL@1XOlMd"t.`i9SkT/H2ddc71LTiJU"$nAmJbErf9`6qcK3,!,K]*D6MaEG6Dp5m^R3
%=$[<:"hRCL?D*/s]IjQJB5',p]4eZ2*<Xs'9kS$@Cq)#ucVCH#B*;cp979#pE&pao0LAe#.tZEd[NcPK?O9uQ)p>.Qas9.P^.[E4
%b'j"ZAKU^^DFk6JZn+1-M7-HP?Kc*pLBK9(&-X0:<R4%,H\-J"#n]+%+K<#Cbm1-i]?B<W)eAN:`;,9Ub-%*ml)A6k,7nCE,g0%E
%9gC4!4TU2Tef;usa:qSc%>o_Z#47I:@Nq0o8=2)*R>4<b?mN'-9afql\I#&@I(U/M`u:455a:humg?d!YXUX)(d,P5]U)8L@XT!L
%EO.4QMF',P*K#ppAY=u)K9V?>j@c0N*n4F3TLW3_0F'!R#%XY@:cp8\(LV&aMVMiQ5)K6)B]oT!>fp-%@t<[^<XQm\o0ReqVu.6K
%nKTZ.<69+/;AK&Fm6rK.1ViT*iI?Ds&;7tdflE3Bp]Er55r6lAZ#IQ#9$jFJ8<et`-CU1?dtof;lI8-B815BB:_nHnW;qga!"H.D
%rbiF:!h-5,&`PGl<#O(M;ssJXa;+!g9DO`)4tI"6*^itn?9/*;ADjbDQDC%Y'ZMSg0IX"q1l!SM1,%$#9ockO(H;gloO,Yd*ElGI
%EbcgR_?"W)9;+uK'/)^%=$X`g;V4<mcG??5#UR@-VX[8]LmTu-M2FA\8:^aD#U(;7E3QWk=Y@c:\>AC%CptBNJS)B%TF`tkB*$_.
%KU<uk6Qb$F)CUnCfr,T'AOZL31.=nO5iOD^:e@A](S>jS&KB:,iIm0l38kPeL0`:hj68Fu)_3`sn<c<q>$jjJJr9aQ/-WlU%7?ac
%#^<,A*W^u072Z`]N+C6<A4b,Z+@$5C5g`^e>6.1)^_IZSc2$GKW!$30X`r:^j_bg,i$WQ,c-SG`_!8p+1W[CAjQ=RMbB.669[JW-
%;$'r6O6%R2i,j_B;t;ZQ>RkifLL/%Z%aLln"h_)OrIj=Bas:$N\K"@tU*2!</./nl3M`m<*s2Hl+g0#)M/3gt3;MA-kbTW50-EB/
%3FH8]cAlS!RAj%!TX0?p1pgJ3*'Y2iiaZX%2m)&EjHYPh^`pq;4Fh:*)C$(oKECf\8ImW"<Ioa[#n-5kfGP#VM%#W`P`)&o/\n=F
%Ts'DW@R>E=r1drXGW#V[WJ*Z?/1cicY[*:)2KHVs)T60O_L^(s()5,W-t,7C@PI-[0QKR#=s4]6\iG>&),16N's0jQH/Y7f[-5eh
%Y$CBlBEW"]BIk[7Jb^NrUsj*Y^l*;5TF3E]<Ii#7C'dA4(C7.B%1@S"Jd3>n#eD8T:K0970lV.UM=[a1(gO?T4c*kYbOEdikCf3(
%RAU$;Hf9Sg7mrin7tDV"$A-uP8>Y@SP,%VhLLCQ@KVX;acZNlGB%*g_+pVD$]&97g@`YVS9NPeRoclA`PRA"j$4-pWie#;kd%0:l
%d%gm&Upr>mU/=6c^h;&)<4$1ohU)%`lpX`O!$kX'3+aqRX3lr9^b,'nbYb)mWGt<OAJuL>kQ))`c9mK*1-LEo#j:FUcDSPn)6ia<
%NhB0AgqrPu7bS#VQ%C*S67RRK&V0FTiTL?B;Ii*S#b7R'-Poob`ag/<J-U[\P&fJ[9+Zt#1,nn1NJk-+#3Wo=/%72lc<<OR+TfQC
%,j.7(X_ATf;[eJn>S"La]*JoF,n61kie%o3LfT.gn[pMOGgNbH5\_oD:C:7a,3Oi:(:5$f%X=Hjl_)Je+[XUh,!Z,1O9Io>,[s)a
%b4$SD4nM1.2*p<E9:b_I;C`I`"r@/i0N?+q,f0b/5Y,C=r8",f["VYH4AT!#1e81a@6O6INuO.l@t\8@]u26HZO.bH?aqQrYa'N1
%oZkfl]nA3h0T$Q-$G#I?C=LD*a?a"MI79O.&f!U<<8E1?nq*S]0Eb,2*ag')C&fKaE3b9(hRS270Q:1E,?uIKb#a+K"d0m%_%-or
%:fsTK)?:<oA:cArj,)A207i$B*pauu14V(c?d->98bt6s^kdUf<g`Z;@!j@n">]Te2cN0o/HmQ;!D4mGH'3O5B,O2_"lkV1r1q#%
%J1]6mF.i4bitgb%($LEGp)tBa&B=sP<L^dW,tJ'\e(hQk#n>%[#1j^t(LSC-Z,D=qct)_N\Jt[F\gHKPfH!;/0h(p,Zts)_=O^@4
%TTOie_N-Ap+LGH/(93o/T*c><KTZBa#U6H/nNU)@aqSZeMK_?HAIpN5^osJTYHZ@%X%TKGAR2-P]tYCq*"_VA#@3"I-bQf_.NuP4
%<`edT.k+Fak\r)/=`ONp8?@B(/35$m.Ye6@!jk0!&dW'h;FNhe0uiIZE`n&8_R\[$6JatFccN*D.4J[!+19\,$`Fh$212o)4F@an
%71LqA8N:tiKB1l-g@PiU)?D+7>C[2/1_]11+p(q7LMr*lAs9\0f);H;XjV_N#7Gml^tZYl!99l&a$><B%7'm94ag&8;^@hS^!];p
%4:H_(qEp8Iegbm%L)nsi=^_LL=b`T$5lV6H`JJadA%>/X?s">+;1V"SKsup^b90BUr9*0F3(j;&J;NE]>n@&g$*Aj7.jI30=dGEi
%TQI,+3F\\n"aE4a,kBH=F+BY$%Ra&**!a4c6JNP[HOg:X1k[Cg!5b2_5]DkSMTfO(7M3d1ki9KE_2l^'j5K2GZpCkA*Z@:q2[0pb
%Cfi$;6,>pj`&X/Zbss"EQq.`e7p6:HY!J3lO\2R#!3/Ka4ttiEO^h64&(q.t:M$Q1A)tK=)H8gNmV3eNr:1V)!1!V,kf.9BqmbpA
%&beN1ZR+*A3KFdgYlN;a*tdiOnof>9$2l(WMmT7qbU9<_!^sCJD&2mqfW(8T:R>IQ5k*3XYU]\$adX%r<0Q1[![[t2-U/K4UdA1C
%7'FP<7'%($V)/I$(DdJ)lJ]]40l%)`K%nEk/'&_PYuKOI%c[Pf0.^S<$>r0!`,Z,hT#meiYmb_aRN=C@n-`2EYoJnG@JL&aH1@Qi
%#W@f;5[eaW;Qt!@#WdJt>@)Bq#2[$5PDNfcoH6P(&Iru!>ntV8r'S@.G3jU\8opY7#1(W5YTmu0OB"d*@D2ka7MKKsIZSFB$qQpd
%qVV?[ON:\jIKoIq6jKTIS9Q7m-3m1"E*YQC7qIgEb:s3i"ap\@bnAU*q9`tX[!.W%.0JWRWMOW?#E&SP#^N)g)&b-39/u&KC*q$K
%O@]H?*%M*`FSq<F;5P5N0=_PU,>\4QS\BeQleHpi1DO/5]GklZ3Ja-MA6Y-+G`Euo&^DVe=&DV++^dh=$^EAC9:Ej_d6WF$-lpmV
%FdkCo<,a/)Kb/A?Duq6t\Jf>c[;]OhVBkrP[tN6[]p)YEKHW[SAe8)F1f)Ipm(qYL=o)@]52\<hR3KhQ[3i;@Y$0-0N&l_3X\m%i
%jLE!NdZ?SE)t$Bf!s^/aJBEG0!Q<g:lNV0(`&S7"G,G*N$r)LRfHJAJ,4SscV1P%?\=S6P#(D4*YDR^2em*I@+fEnY//B*el6,KV
%QCcYqFX"K<MSVc!`CkS^StYS@_hB3a/!E1f"/3bn`,B?7bb1LD=9Uf48H"qR$$pO0-aD)N9aOb2KA7Rn2(j$9#n61)L$m(FSFcA6
%k7c)n62pp9BGm4!Smd>L_33^e.2Do(T:mVfc`#(NPRaBHJl2t6C-[;KBgX;>i.`W"LWguX4WZ-doV1bq>!O5uG_)19Eo2\W\el'-
%JWqiFn:4I'9;%=W>Bq/>][gEF:B__=*&Xtfd=r.FkVsh;7cqM95sM$$i#I\OEe<(!%g9pMLq'.E>rYJ4hF[BmLP?Q;<k?@NU`'ga
%::*[AdZ#H;9fM>/$Ict:oSb5RdOD@LQ@m/B1]m0j@@*/uaR-H=We^HQdoe%G%<)W4jb9WGM1]r.V_2]f6r4>u5e'TbS#$?UbP49B
%(0+.m%H'IkR+roZV&ni#5dZn#^!_">ESVV6XG8Ym=(0tdG0tgF6GU_ed5'.H!1/nG6,OHF`itRrTa\1;U6KpLdMZ:XL;R,^nOiX6
%4:Nis,R)TOJ-$"i-`4^QBHbtOng<S?"9t^&>,.CP%O-geXTF"Hi-JO*a)VA7342WpQ4CS8YV^q4V.Vc=Veo1J_'&`0DEGpR6F'"1
%2%C*]\8=>2X<JPX%F$Dr5hpBV=.f_rb:-nI@4NNn$=SW19;Ks%(Q^H6@`2I!9s?>@6imVg=K7-JN`<.mBFm@?je%8m(>"0X'Cb"1
%=T`TQ&)9F-m_E9`1cqmf&7!H0?7_9G3k:Cc'cnE?=dX.:&J*fYo<dO>N!3nd\2KRmiH1V4\PbSH#^[J4D@`Ql99NpU1`GlgAge,B
%Jt2&tN%JjD"uHDM&9hRK1NEde2?K-sYg;*?(g)Gq52l\b:bnuo,9#c2=B#KYX8j8-r(fV:(p8RS^C_ti16<#uRg"ifcQjJc34K"k
%UOK6T4t'o-3T+22FqBt55VYSREsT-l1/ZBe#lR5iEja!"V<VR__)PV>KgZ2P&Rt,mB,hq<!YMtL_Sd2g6CM<ERif>n"FjUhi7^S<
%NZ^%C<Y>'1UA_Ho_:"Q?[Nct*YR0MD\/]J-'pQi]&.JQ".'1J:.h(,K]t2+VYg87\:=?@Oh*3Xp$OB"JgB<RJU]HL,KaqWhM"ZW^
%<[Rkg711b8DfPt7ncXUJ"9Uq*EAQIhl@s_6L&`@9-8K6VTh[pGAR\jFI<8pf<Z,iW).j:bO[Ka_[:!DT)Cb,`#)#6u/;,Zf:_NoM
%@'?Af%he;<S<tD3eoV$]4t$c]-Y7LUScJ*ue8fQ&nj9HR6Mj'VZ!bl`9>O_k+<_T_/V3s+/`8AW%'HlmNi:\:Sn.pQ2?bT`iqb>P
%PQ\qQb1d1/b2r#hd2pc&ntO$T_[B/rGH`DjYX[+Qa;i%b(f^]k+Td;ukb2[4GSC?L$Q5d_!'^m(%!&R_qG&[DUhC9198;EW;fU%c
%R%BrZ>6NUoONli16l<M4&[=uB(_O@<PUs'b@%9guUK3h6&$L&rJ2k)!Y#IOgC0hJih#X^_3k6J?eV-J[>.#-]@30*R&6=Q7$X$Jq
%iGMa,]T_AWZ>)/40JNbO_Ju;^:jEuLBoJa9>o_EA@<Z`i\A=8(F6IHc<`pFDpdNKl-6WR2JeY5HB;6&IE!Lq+)-_\61@t^^*>4fK
%3UT52JW6n>lOd7HnR[>!U[&IaX#.o7VrJWVKqj9+?PX3G1icWQNf^"J^R&YB#Qjt+qJ/U'22N"b<&fV6)Od#b)C%!`ZX.-QE1qCh
%U36i!L@u6g*/]P7`q;cM*/<'ii=X(kK]0Af^)$?UK>#]:M!,_KR5ADFX^7c2&3qD[M<GpHjC3X8%V=Sj1=I\&3I6[i_-b!?GR>=i
%0[]/*&L&QTgfDd()A,nV\Q9V&n.?GQTSG&8,6(Pi6PM,n/s_A3X[qRugp"k?S0@So1FimPKnsQ(?k4]LXFO'4NqN$";_[iZ#"+S>
%,6Xg(.pU%[>DA8N?o3]!e6$D#H2*FXel#U,Kki^WEr&BF-#!?Z`]cXk7<H6$%6X-9)+LF%OI<C4[SGKZKK.P<X[+LS!R_-p,?Q>1
%$]lJeN9e[p7*$Z!X(^a<]bqmuZ]n90=gB"^r1lfq0OD0o*(:DD*CMT!M.jg$EDS,Y_g?(4ceo">5S:N#*+smY/qMBWE8$V<61XS2
%+[$6D6q@d)\,%6K63)ZU6[5MnT$@OJ/bin]2Lu/ZjUc\GJdXm`)=#WT#':HXiO<s6_-IXgK5s0YL&1d'+K3<,ESWjbFZT1diqP(K
%)g'k<\1SsMjq)Q:,5V>1I&M]<B*QC"*l:@kaGS[s,E_$t,$Y>EGE`K)WLG9oRW/*C(g+XI<5m\:;K-n:V6Z%fe*$e(;_'.cKo$7I
%p6II23X(XO,*#K!,Xt/3qB3S.i(>(KKYI2b6,83Zq0=BFPfkj#oG[Df(p]AV^;/)E1lC<Of._!ODI^MM9u^#I*c9hPnV*-0"NH.;
%.Jp-'i1<aH&WdsAmO>ZYL[l%*kWFp0r]^6INWt:<\,'MXEYo@^A.3oDPs>R4!!,Qb@1Ge64kG2a,>q;WJ;V\oUBjkT+P&!3ADg;e
%7u2/)i)no?Mme(d5WqM,dm)(c"07C%+\JkY_jFLjT?X$Z$t:8@UIFhJ8OfFJKmA.kok*9-J;;;`O<tgVM27anOV+IdG6h]a_%I?F
%IqTfa<BoGkL2ppC+>tY.<XXT!_/g(a2:/"(&6Mm=IZQ[V+IA%[`"f(o#@hPPOhYu^JVFI=JMDf!:(]r&5^f3'YWPVL,8qtm[+Nbn
%`%Yk,gu5Q7<`k)C7?)hJ2Eg9&@Tt,L"qM=bCSMq8<`QrX=UKg3'&aM*(kFDk"q6dq]`-U.WpKZ-Wn=gBfm*B@AWUJZL'sRmXb_dI
%@.'CQT`ra[m&]m_;lnmgU*miG*%Ee,"?/9f/Ec6S-lR27"F,'ZL#Qke0On&JUaG4+8Lp@]e@Au3'B6iE+Atu\Fi_O`o7j'\r$EiX
%AI9-F=cHG^jJfqVm-.HHO\4,"iC@kX6l:3KP!eK_3'Us-d'5M]`!?]h/pme1@aN2($AHkIWsf9*TNO\t8KP0)5Z_K>%)Tbf.#/EQ
%XJ)U1%WdE!'$^Lp`Xr"QD^%B'O>km3i'E84`][Sn`[$=!I50*B&DtgL&/Z`bJfrC/.`_ueJ(T]9/rr;I0H=IU+XLI4:.Y`e/g:oV
%Ufdmi\d!OY"g*%Sk0P)S0Xsd*fIOS#CJa<d'T=uS+q7uVc(Tu`,/kC]i'X6dkU%5CoR,R%.",.85DXh7c\Z1M&?$.Z/kDqbOaW"?
%!cBq*dsMo.N?7BcO]s^R?\Sja5s;/5Gs+M"*6^7g#T&=/YjnlP%N0olF6(EY6]O8N(`6u#A$F\n,ZZW7kjN)`JgYSVV1C7_os6'?
%atVYRpB.Q$`1Ogu,.\Wm3Rj++nq;?d4ksR-bRE9$[.#bP.cS=3Zs[?q+Be#,3H76iS'h$SEa<dCb,-<jJh&$X,H[T7;qr.2Rb<3'
%1,Fnl0FNI!_PP=-9"9D*G306%`Y*FE*/_B6\fP@%Ht,!'R99aL>2IR<n%tTW_3n6MVG<21##$-nOtJUA%5M*b"ee9j,(>A^4*^'`
%H5U6+6p]d3#N1/Jj/Z%1UkT.Ei9XdpL,fkf&UdV4d`?4-=^ia(.N\snBXbb\L*(,1'CHIn]E/:1UENl5r@7Rp_Y&fM'!W!j4u<gU
%(QFk%"Vic-8G]8c7>C4"9k<YT(bKM/2"O\pBt/k49&pW<.QoEj(bcjuN]=KLW>tPX0W27-f*4IdpL"RtaB1G[.s#:%*CBtUS57.:
%)H77Q-/URpr[o`gDBkpg0L?im(E=:5QugBrcfKsMJ^AZ\$5nFF!]3GmaY7KKV\*`sG<J<!F@$MmFT@Q!8J_$`4N`N`nfsMC8]O.A
%G8PIWY!,YrhE0Bg!hHqWS-jFI+`uJfQ&(&[r"%:KW%6>A!A7BuN!4sT1.#%Jn2mQmbaXT\p4=hn\V25B+Sh5+rXhU*OUhA`=pREH
%$*d<QA9Ou<)0:USDHUr:oNgkuL0s).oqa?+<ZO`2@ak.(.tJg:.*b'\L(m!!JoDRgLR_Bp+HDNJbWrnO-M`h[dctZXJdlRZ,$tBQ
%;J!`Id#>e+*eAp#pWO^0kj4665k#>]5o928q*Kq=0b!WLEuihL)c`9OOPFU#ImuAg`R4dB_Pp2>Uf.h]cA%Hf3O1GK6=*_c.6&/$
%i4pSu>!NMb:t/kbRX[rb6RFT4L=3t!7S+aM^4W()&*'=:=5GWK)f2sIAV%jd<YO$nU-g`U76sq.2_bTB`-mjZk%^TT_&W"#6CHmF
%FD0-R"_3b@<Tf&G'52#EGd"mnL9uI28klS.8\iJ+lH%TW3btET^FV84M3<NI(N@l#cpWJl/MdCTZnuGI6:YK9)H:tpQO#O3l6ES[
%K]m\UOFc"$\eqVY8Qf;!/9d#)-MBo_*:$ELdh!d]<BNfV.Uq&l9]`mZ?qA+F=F3FSW13mE=sTkq(UO=K^p,$2aYWp"BU#_[n.!_^
%#":>HWhaB^XIbsH+p$pVOSIdH("Rm?&[$m7gsmYb3bAX_Z4O.P!NAbgK<hsNK*OEZ/F>:ZoYK=PhGANbp:)/[k#KDLT^rKr&Zu-p
%#0\4<]S8ZS35Y[1KCG.&o7YB;5c'"LCM:>=bQa<dJjg&,BrQYP+2T9K2nZ9hKLgF15_tB@bT)U,L63U!IdaLX">A5]L>44KC`oH`
%VQ"<,2b4*n`#mI%+ub_ua>p*5bbar'qVHli^ujpF;$P1?$5WuVKnWtsQH6rX$5VQEYW-BR1)[`3VhR#Q"6NGC@ffITO:6`n1)p]h
%!ef!eeFoD6`-1c?/"-I1BL=\"@c>3GntN#Wi<hR'Fg\\enLLgLniu48jI/u)"D<:-aPfM6jCk4m_R)sF4fCR($T7rD6Oll,FeZF,
%`^*^ms3U+sTYgt?4?-^le`LU[@+H[k)[H_0SlVJ*%(LpB90t+^ErMUi!#0D]66RQ4AYB0M14>snM,%_`N3F^A?n8=AD2[1Z&S'$P
%7,Tf<X:kNR6B/ke_0[Z!,I&Fo)@'!h^b^R%=QfO+M@^'9Js$KXKVUY^frSu1>@<JY;)<s>NhEMI(*s%gKBg1'=Qj0c,^W!5.UjSk
%&2^dUB^mD[_kEn;eKB:$jNc6PW5:2d-WU+"N;:Fg(-+\M`Pt1=ePJscjb5@sJ:K;J#YPTa&TA>5i*g)M>RQ@8Rd9"a+0Gs?n78q?
%H%of7jm[lA))VYD`Z1mD_NfG]Ocs$u(P1Mda[dI+$d=dAFkSVR<,h0qG1Y'@U,'#.eG\4ZD0?Hi)eG^:Xo(q_n#YM1"1;ulcRs-[
%mdG)DlfDZGeNE-UQNu4THJn>"VHl3"GE;&c(62KYHKr?C5?Y\r;#crWg-^Z>70LW/q<A]AE2$0%7Qi\,:8eFl:3YZe-,07\AUpp5
%FBqp/osqWdp%=N^$Fk_3+-B2Y.f#kOY?:#51@S2,XOR?sOp;(tdR2`!U_0?S&70/1H40A(5u*K>X[9Q(S<1l9!cYr778sVm4N!i?
%*&JN3)oQZ/,T5e_-j<&eN7,C8;6_f$C9`=V56OOsdGgBdRDoM]N2e0q-j']aj;E1l,6j7A*p=iq^m4stp@Qr9YIS5gdJPY&Z8.&D
%!5SP=[g^q'8;4b@Q6D]k&?Yfg>6`n$^5`0H-(@@J?X[F6ZaYm.,kM]D%q=#oIDcU#VT-N^B]3udZ-?/BE"RO)f[.e%T-n-*?:@,t
%G$DPr_3YL^lCcW,JobT\A],<=UN0raK@L+fM;K]riL0B*WPCg2_Q1<h#lO3`%qP/hM@jiJX?;-],#XPsh6Lp#;@?bcXV-F=-m0(m
%hX1>3f.*#&1o:5Abf_e[r*7hB^WjGo=:$J.J+$iX$oNt*B.qhCF&ap^3iLjn7*RZDR4Cda,FYg/.7.gscj#4m]1fR6QK"X77N]9X
%c7i+R2InWmf:jHaJ01gc0pQcJ0nM)?qB]N\O-L%Rq2nacJ0e&L=Vtm/C3Raca^K:CDO[nm'@!Wb'Nn5G(!HAIk]S/RdV"Sj266oq
%;Mq2gHF)d?`iDdanD=33!GKnuOhs3OOJc7i,tu<U/_V8r;IK<ZbgAlq:.G+/Zj50hJs_PU5O&i:]aH[pjtMUU%48'[9FP2fLu^&u
%9?hKG*bIp@\9o$j9%4(cZThrpW7$0mOXO2ETEMTOLB2q&n:6B`:q^h(=d]=H4bPZSIPZ3Yh^tK*NS*Y&i'b.Uph>+FI"[>Z!_Hu]
%)&^8VcC3g7K!uuQkQNIg8U0*J/7n&?85_-L=+b]>0,3Oi<fIBsZEXaA(--tf]O4JL<2(!kLNjJ(`u9Dc86%Y&,9kPIPGJhBjTgW/
%d?WrFO!$j'94KW7a<"B3QSUTX@lh=oA.fLX7r7i":g/dW69bk#TCe)^0>HK`e^BnsBYPjNBVOElaHIP_$+pGY1120H@*M&^APb=q
%YZW5+_nlK4E(&.*hS?@H9cFgH:bZru]RY2kcH]VC+JAbX"GUd4'K,4o+5@rk'[4M%U%)E5Z^H0[ML$,c@2CZ>ZZ8_riog(j#Ph;:
%D<_Tq2/MR(p9s^fJS3r7oZY7Ols_.1(Q9n8jBmDA]eROho_-iT-?+9MkRH/&>CC3"b`gQuU_li-O?5p7l4J>>2=M!kq,"R>3=A/Z
%rc(F6+*oq$cG1m2Zj!e'X%kMTN?pu'V5BM6Q*g$;^X-MO;GJ-SV01Lr$P-=S4%>L_^T3Z=">:n(]KaJ02CP0%MJ#(GX',C3)?5^8
%G'*M0oG/u:L8\NJRa*Y7TC\'NF[B6>(A;NGau/C^.V;m-5/.nAf3]P5h@ru_W.CK^I+Is`!\aW8bjjOH9;?-,W`C!hj2I@/i@IRZ
%0hMT\*g<;!hEZ>0Y:d9QPqRW+>c9?XZ&C"r.NNp#\7@!hTbSOjbTND].1X`Z5bRu3r-@&.Fu$(4\qQ%o16*TuG&$fRc&b_;X@?nJ
%TFSBr3/AQ0BdAWQ0_2(IMGib^OWcN`%-CPBO,jVYDWhpQ]BPhNTMaTB+f10PJb;Ht_9=b*/Yg>p%KdQA*=K2_/>n9AA-d10;lX#m
%:R4db^SS(D[S+YC,sI:VlC_\p2&6B-]H4J2q-M"<!d/IQ`b)<#S(HUiM_iQFaurL=eB3'ppS%Z=i5d$#Q8tlEZM-&YS1@.MC0$6h
%Uesc%%8*)B)%Ki&V,l:XLgB[:?u#AP!8Fh#!2b;p3`\P"$I%AE8@5RNfpgP/H"5nR/c_eZ[AE)A_20:[3$2n^7(b^IKBggjaDJBN
%Z`Z[E<rVDG1c]7i>%qmYB0[,u4_:WE>/O$5`mf\?)DI;'<ZniS%SW[cPelJ!^uWB:Qe2NiB/P+%)-k#^^go2<**tL1P1VI>&u_)`
%3+HJDX)jL-i'`6_"h)pr)6/ISYZ-1[W2=,l\5@$$".V'!(o%,m$(SZXaBp[s0u6dU)\EPo#;8-&3\q&d]_?6n^ZTl"C"Z"E_%lU9
%8P#"IM2ECj*+2I6Clon4%3FA."cBoam'%n1m4(^9YD#jo$XZ`0EX)\P)6#r8&b=^G!(X+ae5D;B&NV].2$aRu",0Uce"U)Z`cr?J
%8Wb?S^i7;QnBiEpW3X'eoH5oO_Pbi:3iiK/3D;F)f*O3aaHCb#,YCs%1-s%k$[1nM"Z#-e-i2.MOHs$"%#']I^]R;sk>;!dWa93J
%R?.u9,s8FbKEj5#'B-,<'cTRZ35_i5&^]"UWW1'SKuX/d!*_E'O%<`g$Cm&M)AMVjFJM*:[=0ZsB/SVe'Rg\R's""N6$rYmkr%rK
%XM2c_^e,'Me[QRN$I%oH9Gdo:6)!$5dP2#93pLb826;A]Yf\>@lSTNS-oDuX[KgA<7PUj3Y2gJZR]0D+ak@N80bT_KTo?;#+fN)N
%6=8/4VH3lUHMG[(cH*/l_:YKJU.oYp++Xm^7OJ"40IC3q;+gc"%V*[Arh:BeE>nQR)aUp'6eTF%(g@n/j<!u&S>ndu!Y-f#&r`+>
%(2CI[_q;gD@Jg*PPHtCX%<=U2-B1NGWqD#-hh1!(+="YS==qQl#;Q]])-*LsO?G*hB*4Mp)bZ;s#h5LU@n@"+</34aoCVVJJW-PF
%TGa/?)!`m)Iqssr3!TQ&&<&apL^jbZ0QqCK_h_<J0rSuHoRJu]iA]"JWd[p"Yt'+iW":u*(`E%+/0"u;T$I*Ie:,suTSn\]@o91Z
%`Q_5&QI.7siEZp<lcH`lYX+L[AG.0u.h&5IJ[%n,Bi/7(%i;e-F0AABYQPueH=*kqed'f1%I^T+Jj\X\C,du6#%;hH8B.<>d'=6f
%9oKuWELplL0sE[iL'+i+oZ%8m&kTbT$pa07#7lGFPupLJ15hj%)+$3:Yb:Z_R<9LgC21qj#62T`1iP_q]p[guN!ScD;)25T._(Pp
%8%O6LbmQ6<ArKoe6X/o:&"[lm]QS`.qJeb'j5;&#C9qsEYZVMYl)OomU,jn.#jX!3A*ZJi:;_^>XhuRZ>!$RRQ5R7YGC98"6+r.L
%lQ=`FdMj8hDiBHZo7?LV//N40NZ2J2TmUT_ibEjK("M6hEH>S@3Rg93/cfjrOo%,O7DrE@AGE=2Uc1KE7?/TZW4k^="VkT&"+0+%
%o;D<7)]r0O2)qs5NX)A+f(R0BTH`+2NL\"&E-aG:(uAa[5(qCunN*+*1@Q\<4#dKqm,Kcp1P,V&Hsg+\8g=US?k(ZE&6ehJL[Z5B
%-+l6\]Ol2'5ojCPY"p-#g^XpQ+[Z7oN=R$j`_/:-l\CK3-&8/kqOq][;Td+_c`H0g^le9oLCTk2,Ish'k[$nM2+I#ooU3VK'N7TN
%qE!'od"tiAoeWDb!TW1TR"M>KLX4_]XBCr%S@<.hSf+>5]tpE6mYqaJ2od'jeBaW-L!O2WNotbDYEPboda'?2NF;AiJ@nlH@gPS`
%I?/C_;!e.B1cNnaZ`1Agael)a!@:D(_b5X"a;b^^qPaoK5L!*p5f+Wq0<"U/&QOHi!%le#X[W:u,hBstRbBI@Xb:,E8a<ut_0'j-
%d;#B>48#jn8Y!1Q>hacpG].!['`.h\MtpOiOt9J#ZWqk"nMH:!Z9A%8($\lI@0gctI$V#2):X^Y++]SX!0DsCec:5rfc+-;J9>dt
%Z6M-=*33">_j5;1)KT/3W'83Y<J"_!R":LCQ/!B"7Lp'[+/s[f#F&'k:o+UPctLT2'<cubn<7SZ4U@ga1lWu"8<M@U2?G:GM,F1C
%h_mNY-f7VA)&QPQk>2sTNA4_.o:`&"kqB5Al%D3TQWc'A6?)cLW9k$&pL$)hbh@&q3k!Kb9XHg>%m]Y^Qno)cqIA'Ek".c/1*Pbp
%_h*@6HEFKefSFl6lFrk(g?WAbJe;*@LrqRX)hj*GU&T=W<GJI1m;XeA&B>Q$,=tG6_KUXnU.3d)':_pQkqiiR+2+ga8r5-Lamfb*
%+PR&biFAdP!QaBQ&&.KcADrgk=>L$#'iA)H(4#E[rWLINArU+rF?pJJ=(`O?&KISdUn@s0Q%KFdVU.SHK;AEClOid/QdWAgdmO(a
%Ll->0Q#uR@IEWk6;P%BCGYtRo9.B[g>mRp`3KAmr'Vr^jA:J/Ja;U5:p3*V9*]=[r]D_Q@<0RDn`eHckSPP]\29]Pa[GbC$Zg:Ba
%C%e$:g4]nt(MO_J6%n_qIF)X.!lg`sOtoKm_WZ1HSV$4.h#K`pQAR)J!+e/`\KEff'JW%Y>4c`AQ9?^5k76kt/JBX4QFk\1](I\D
%"31aa,AZ3J*NMI;&PK0u'c?3PE6fqGimb^NC<)Q#K8Lb5/n:t"An@>Wd-ZP^7bWq\8Ckj:$8Y(]Y^Wm?,;,MKV0c5P`scY:@!\`1
%];IGunqI2TR8-R75c:tsULCubki@K;E.ZPKK<7Pb(s"]5Rjj"Z:<Oe1(mL')Zq"9f0LqeRDoK2EPs3\_n)788M-%9*1W)=S`h+Z_
%Eu"Gm<W#KA<7tWZ67c/ih5eOgAtEGdUDPI8efsEA.RZTQ`i$=8F@j(I()gGs/Ck%@G0"SOlbc*uLQ3UI)48;q'j(hL"e(Qu;Rd*;
%Sdm%j"\L-P.B/bl@1?#:QX2(m.%J+f;5Jk%0@O2T28hc#o<K9)"En=0=^imB4LgJSqkY_r4Z?0`"D$9^KS(R<6q5":ofNYMVM@V>
%q.Z"E68G.g./K#M_)<]&S(V4@UI89tFn\$iZ^Mc<C6e'Demq9K)B5Rcd\YKo!NbTdlLrU;').Dm_qaGj7MuU--ueP2=qoKiGr#2(
%4M"XcCQ8U/A/f.Mr'tVkh#$]dcpR'2$k>l8MB8o<>a,Z.-)N.h('^U'R3POl2+!<ao=_M5Xcd<(qL<O>^X=Bof>fn=73r4"Fki4A
%:uOSbK3*mHNQc[s_^Mr*V'!`'P)nZNb9BkKUqVj/FB2$FBJLCeL!:TOJ_E`#/G)E)l[^4Y6r<u"YO(N%UQhT5/CS$LJ^Dq.UV%#\
%AmB_l*6^17PR))UF&oa];kYg]bqaj$c+%!^(UW-A$,lYsHV];LBilN[=@UhF0Uc_CRqc&-%-h[$j9\IGJF%QV";0<3AMX6-le7Vt
%JoM+C'Xnoa)%o.a:`<L2*O9E6KTPC5DGHT*$qL,l.2Be"q18\&C^b#7*tU2)0X4d^N;T@f0+i6Cj]W+P.Tl&$P`rbMTaq<;[#cK?
%0Wr+]\@2O1fU2M9Q:gu:K=BLN.2`'P6Xo<P`1(gJ^%]sbAH@\f3)aG[TJQmVE2=n=6c;dKT[R,=q)'Q2=G[]B28N+TY0^oI"=Y6G
%EA0@8Bdft.U]__!!btM&*"'mWlba$$Nb*MrQtn!L%&1[XW+O+t[hR$n+BQsGji<2n/lMIqHTNM;($.6O)3B%TdL!c5kgRFPFeRIA
%TkoYjjDR44a-J]!jll>GeEl>Mpan!0ccoSMat_MQYSAb-_eei.Zn3d\O7u5[EX(??D$!9s'e>^&+Xt*6g4f)&'GnhbSNcRldQh(T
%*,<!4Lb9"&'T1H'W/<BO$bmKM#bW\ERM9e/NuC@D,5UtO.aJHL.<5KLc5ZuH?Mp@7(h`_\_Q]+[1qrTh(>d+D#%WK]H4tSA%nm&h
%bnXfdaZ*u.\ee`IeeVc<]lU7klDnp'.QU\/AKZc$RUBgX^DjG?C`hJ`jA\]MREsp_m\.E#NC+bMW.HL"X<-CPM(2T4>i35T4#aBj
%*R&AKpGu@MU"ucF`<$j.W8RN#Y;q@eP#PJZjeC?XlAXq7=b/WCWJhZ_[62Rm3T@K!MJB,+H>UPET_?!O24(!e,^Bq.o>5:f4EABo
%QJSU7,P#`G+hI>GM#+CqX%d2t5%G?[:eq?)kotUn3hgm/W\(O$FNLa,'UE-<hGlZVd,BhH&Kh6:/^ldjhPK,BEth6g8Mc$(S#TS'
%XC@$MBsXhhJneU1mKpW?ql&p/(!-X!el\,M_-!*Bel')C@aM"1X<s+`6JZf^F^:YC`\qe#BasY*WiEL`^O^)/j#QFi3gJsVrO/C7
%+(0L/\2$L*pE+Bl6G-%@T$W7Qf-LN'7l*k;()/>ReC03DfT?nJ8*o^=C/oa2p.[H&2O#[)U@(XP9PB_`;CX5J?in^q''e-kfUs$d
%5g;N&)R?Zi_[m#Z5WC.b'e'Cmi?aRN/B)?.0PYCVUl@]).ufjEA:IB'Xt[k1V+0TUAZQp<f^9uf046s]VogbqC*%I?5TU5].RmhS
%oN<+m:85mlW*tqMm3l$SXaQ*I03;'6@Q?9j^`!F8"g%,*SQ8i]Z0Y:4XFRs_"[[1I*8SYq(.#'2JO0dDL:'XX6Y[s'7r3`0=>Ljd
%<bQL7go:O!j8o3k[f;\1Y;U#H;I0D;@F\4+ZF3AB(_6-Slk'Zu[9=(WQ^)_#eABSA1IrBe0M?p>19)e(=upCC/.psDKolt8$q;Lp
%W&h%Xn-5$/RMj(01Wouc/8FK,=uH`GKGNDEX[Fm3QCPB<dipHH@iBZj?a%F-&<2>-=gVJ#\TW6gGp_1j7KD@jMdmW@K='`#$<g!V
%/6S;tK,_7#M\_"U1IKcndhE'N,%O)V,oMqjXNGHk2"`^r(.ca25`r=Q1^RtYCdTFU4J-#O#?/Gu8)tLSB6(2\O>&L7W_j""Q#)[-
%b^@"*BMbe!-lUIueH?g!_,lI&;(]>M<Edff1+.2G:KnWFmpV2c)1>-sX0*7pP%bYN?st/'@Lpd?KYK6T2_T<Y#jJXgLSh=iN.BkO
%iUVO2k=TMdUg9XVWnV/7[N)?2c5%ER)<dK'#.#sY7c&kmjg=RjZMA!m:'T`NG'i7BM7RE!BH@;gY4>md_+aSQU*9XbPYqfPWYu1i
%V5oUG;QG^Wj.%!EQ&SrpZd=lB,aM1uFe]@CB%>ClbT>=o66TJ+:=bU9@?In7Z?)`#KluV*UuBda,>^6\#sLNZ5%V#k=B$GUW@lc/
%6Wt;=2kHSi(f8KB)P]RsRq;D[r.l[Z1l$j"d;9\McOc%jgb06_)%BF\aB_dX3-"[\Rp!QVBRQc[[aMiWZ7Z$E!#3`dH`&EUD?1fu
%,NLB-gnc3DA`uF:g"TgdN.ji[(Uftr&=IMTq"gscT.a:kaOK;H:FGZ&BM7(O@RQtgRp'm<='M8J,MCt515+*b-ouT$<kqm9>()>5
%=;3bgA0N??Ee]ZpW45oRh25bIit3C5^"]SC@/hS<=)=^rX4S=WNBlPnO$JfPP<^OY-%RHoY%rrQO^jhDJ^DhC]l@@g`)F\4G_o[=
%%^J/1##V-j3<bT.]MF/k8.uBh]b2BpGGYq-qD5ip5jY9>T-S?pd[IPT/>Q=%@-OcDaM[\\eM;lhH=i0l@(k%kQ7.c#j?<bB]&8cs
%.^F)oM%C`&iOa2Kf[(Jo?OghV&3`!H!gY&8Y0^?k120G\:=)+X[TJ\*5S6q,TL^<Rk''H.Ip;^O8q>`:e#"m;U=+A-@#g'6TkIoV
%is^XI;A@_qPDq+>oP$lST2il`3CV,;Q]^t!TZrPme8Np!O=fDu.RaNaYsL7kd:EQQ[d6GJ=&mfr+[\5"(1Hd-.\rC+e40g"D'n@c
%TRK"De7>V!I./2Nfp2eDJJLf-&`&Ub/#ZEJ`_()jY#8IIL&J#$M^ocI@Zl5JYk#j]s)*Ad"r?=Zpt#S,#0*#Skmn8LNkRHt[VQKq
%k\U;\_=X-CG+NL)L!W6;Ak8.K,-ORRoGOc:bPOoZMDuN9I\:1!B$)j=R7Wit'8.Bh^^6*I-UU^\H/#+CI]LO+;.D8I6WW@"g['6O
%L-8K8fnh7QX%*ILp]I`rX-tS7h7K\"!Et@r/-r]LFK$th(Q%"Fp6]*`bL6l5bZ5GV%Bsgda+89B>g$%0*-<+5JM<KsMcXMl!h/jA
%O]OSC7MCnUbmAf%!XnX\4N--["8uMtVh;`\<H+9Jp)s'<KZ]rRl2[$C,Jp,OOCh1[]F3PLBHEgA%m66Pr#;5=kV^Boc-Y[7/(l7R
%$YCS!0=o;dUp-U7WHV7]HVds[O<CA0cS@+uV,hp5)sE`l*Lm=tf2]5RA@;P#PF]TA>&(cl8YsC-g9)GsG1h(2bALpnRpM9DAh)]8
%FWl4$loD$-#5q!uS#*h^&SdT_F>q]iUk_+;9bqRkBR6ES=Jl\hG9b:<-hIVF%Us1."J>p^I'-"FUTagK;)I!WPNGGPPU&c;iduQQ
%oL,[C(R]Ar/[phZcJUbVBbm\3)#Vo.V5e)4nQeOJpu+qH:>nH)^"T_`S,)p/k0I0#ml';,I5sXF?8@G'[:8`pj9R%$PG0hp;N3Ml
%+97Bj!i5OI$7s\rX)c5NZh$b5M]V,TGVl0Q#8kLQ1oRj81/M]eB3uQ@LgJmeje41)<C80kJ1u'dWl<Gcnfsc%(;64MBn_!?dJnM+
%/\N?1\OW/QDdh"1=<R:^,_=Nt4&asU#e_V57Y\!n$/S!.=PkF)?YC'+b^I;SjdO<s,g;4!Z`LfIk7*H*]PgImfbugcO=i9qhOmF;
%G(D-j:1\,t;59X])Ja]^0!,f(d_ZQ&k_ue5VhbL"'qH\\dqAJ/-14(&Ye4*B1jn)dgc>$L)Kc[Y-m7O76!h']7F0Y,g9=dqFeMdL
%SDio-&SC)LIA;(dB=%rga;.j3gp#9LG"c"knG5Y<5J5Pon8,ATDIk`A/B.*R'[5b5KC."*e/JWb6_81&O_S+CMBV&Z2k:s<q'[ac
%=fn!N4p=Crb,?i0;C\RrdCDF\&Ub@n-q=`%J.!Weanq-V1(9ABi2tRT<*Tr*<C`l8/RF&BiO1!:6-YNc,L.i%h%sg$c^]^jZF+gP
%R;-+NYT]Q,bZqHeLJjm3:r-<Li%ki5S%m.QJ2WsY9dL+VLe>H<LuP@I0S,W&,O/22/KftHf`m^kMR#:+%(XK-(6L#r<_)06F23s&
%$Q"_oWqZOGrVb=fB!-6eA[Jjs#pU<Q^g=.>JL]hHnj9)e=J9"*D8ALp(ErT2B[r8W<I?C.Lj&[<&`]\86tCIgi#o%ljJp_FZl:mm
%fV'[,:?mX=Pq%u%[Qo&Y'e.jCXrX*1+$<W:A7.\Kb,"ArKc="gS;J1:&NMPp822=s0Lar@_jZ]VQ&CdLL5<nMn8LZg[8;$XX$f+q
%^l$tQ`FqCs?mB+UgI&Nubp]WCbrr"5&J-J\e&dtZVEcK/;,8$N-uHg:)XrsR0b"pZ_g)e(@d'B$`'n4M?\ce=]_h@21$Bc^&N!#.
%Cu,V`<^fqdPC89dTtQt%@o`:7&1"S3A2Gd_dQ#s"/LAt:PEZE4Nhs$4S)tDJ_);[d'^U0EYclbe+tkOF_YWIM'V'o-jVgmMg5s$Z
%SBqO<roV[]_2>??@>0:tcR6,"a7J.II03js=f)Z:VrVurR@BPd^l+IZB'tU:)J3ljA<1?j4>00k\aq(A0]uY?\=eQ#Gmgr@l'>.*
%dre#@(7c5gpkJ@iLopUXm/l'>?KoG[KbX933[$ff%i>i,M]n3uNW^nI-$(a0UaRCOGqC.WANiu#1:?@s4##cQK8)@d"o-J:SL-DC
%&Q2JU<2N(9rMZRk2pb>^%C-@oX.lLgE'*=V(se+F%<()M7gijZ+rOY/hB?N#-&Z5A1^DBI'R*A;)I-G@nKMVb@$.M1$lh3%XhOla
%20c(iX.X#,eLSdEeJDUneWH?rYBW\=Rd3Y7PuAPP@kphW\^$j?X"a`d+:GJB\IH[08V7$;LH`FQokSYs8?"bV@lggLO##gl$k<]+
%FWadGK;-YI"^Dag,YV.0po?T3^OI22n.9<)BOdQM7=g.FS7R2_8-*3ad5'eW5bZ/a._hWp!OhOkUi_:6<+O1HIP&/hQ^+0bE/t;G
%/_d,&WB[`2ne(ImgRDe=9[dCrRp)_"Y,W;!eYHr*BZ1Rj]cP5#XK5IgNCL"#X13`JNeG7;%cYYCVPBV;@!lPVBuRAjb="Z7dcW'm
%AS'3U=eK$.DDO:Y!RNU`D?A0c_b2`0-B4J4jsiDm>)'M\o2i4d@8O#1WMlbH&%#e]HX`)\U2!QcN(+2HhSMLt]#+LoYEjG9&M$h_
%a>6ouBUjW6e\I-)VSoF\9J[1UV*b[js4Vh/*_VME47ca.r^4=T0G"fGDKiF5P>XP?",Tlj1b+>X%3g_/-H'FP=="=Pp[W7)D'r(H
%SBPMS#$IcDTcP\gl/B\=gb/K0p0,88h;X]r.UMkX3$EV`D:&R_\5<eU`jto6.P54M5O]r%S$`!3O7RSdb30QrkM!J6NY$'.@H%s,
%n#OE%"WbYCjbRLY&iV[9g<hjF:IhU"0KBl#im_GhQY?[dGb$("d)^&6UN96Jm5f-&pnhEss2?qq]]2a5V9ONW8]ga8Td&8UQA!IG
%2`6ER%Yn@>;9UVEi+#oi>Vh\:JNTSX23m/eZ5B-+,)GRpK[P*$&Kql&c]80Z0K_>`)D4K)Bo*9:WGre<W>\hJd60)lKd.RIQ+1_E
%e0ePT1E]r;b%:b8G^7U<?dXW88!TZ"at]O;9(`jObElU^7_O(tHo.C_)CH5$GLMQ,X$BMJd16O6)KCR+><HH'U93Do+N6h[aT-*E
%@KgUY`<`r!o4bscm>:^ngK$;)(/0.ooZ!o2*n'K)*5]*:ju8U>+6oee*R/P)pPQBr)'S*?JaI-Q?Q7ni&o@7O5pW.onKHUYja[iW
%57K!cf$:fbri\BaZ1,PEF%q=F#--jpokW=N]O7$e!N"mE!4OMpm>%gZC:o@[e+`$\lqCmeOK@KYXM#&365p_]_fI!Sm)kM0$P0h#
%KnP!0f<koBD"W'tIc>E;RqWFMr&>p#-m3;D2>5m#Vqi;ASJ=PO.)t@>$-Oc=&AhJ^^hd`oO7#_0q_rE!6IAoYb%Df=htZGKJ+\E4
%(o6e4XKK42;eZcak7*^pQh@@6YEY,k_TcSEN%f,$QG2COeJq8Aff;JaNf\:_O;F5(;W,V$[M<f`C-n0/4kh-ZpZ6E.X^+oLpg3-D
%\X&.A'dA-k6\BsW/UiX^G#McE&u>HpUT'Sr8?t(`>5/RW=5S>1:Rt'6g])XYL!MfDW(=:0;GYT+AnE[r1;W+E:pVJj%SC9_ZuNPq
%7L#/[Nj4aXeag9`O_A]U/u0IMZ;Y53.?9ZZ0m$:b%&-R#2lV)XHDjW"eN(-(+5+Ud$r`HiC_(9]eKs-d0'7!2h'.8'l\\($FJI.S
%4/4$J?Y=&.fEl0r1_QH:5a,0^;'^*?,'Si[)K1XQ5gAlFJ%cEe6>57<O.`?3_u82n`/h+kLq0UpfFqu)M.['3]DjqhNqg(?;VZNg
%?XRQb+2B,E.:s8/,J/GuI-I#N[kVg9;Glo2lQtS7`6u2t^l1dIU]RX>-Tj)df5oVsQuWINrVC<E+3KZ<=lkSaamTH`EV,qIdW2L/
%*[YNHAlIV_chEYe%VWW^+-`!AF%ik?8*C$,*F@QTG$s1_qWZU[\M&!2DH&CJs-6Y@DA=b[7]F$X]aN]<TR\257dl(l!MiZ;2TFkI
%mRHO+bYup@hd-m,oj:Qder`V<*LjF.D9_l-Ca6!d%-!Ms-e(U\'0<G@B4OBmhT^WO.gU@?lpcf"oQ<8<A9QE]$U?C>c1M(PMuK$e
%@7gW(T59Zd:9dVV+jLAVnI0f'cIOJi;dJ,@F6!b$gBJ*\:_Ohs0XXP$%H\CBC]3HCemD;o,quEq\BKKmqI[I8q4P5Qalu24ZI<.%
%<A(;B@"N:0s(g5m@/?-BZP<X5ZlXaF.`DWE3dOq7"ru@;Yf6a9MItqc0&s0))W[l)n1;V#.Kr*fGDdhig1[`#b?PN%JSc):q+VRV
%,P@&e_Bqc\F-.mR_X$>2W,>es6$#7Kr<(CTD29<\%W);Gh_Yp0G:9Eq.n$U6j9(WAI\9c@CHkoj4MjZ#A#k_A02mospfrJpVCZi9
%@]!5BT$4>H9=UJOZ+8[!>>s+-*]3%+0]o[1fVj"-cUnmuoX8kURGBrYe?IdZd""5X]l7Z3%PYr3V]e_9*E1.T-Z<s[":;L1EOg,`
%9`n8o86Ye=$s52<XA,0UlXYpl:C0$8!?!.qFVt9k?"Ir^mYa4c0\5rB%'id&HP"7,kr[<2E\&p]FD=9&a2N,bgVB1b:58,lO$NCr
%W912jEnWsJRhU_J9ASj,O\'sclDP;2-7d""eL8Xd`7US+_ek@q&]=plo&B^!#0AT\!R)=6c`,N$S/`B$P$]'(LbGi]QaX$GFlBkl
%h"$ZPkl>qPj\7]##/rA4C*&b;HS/5YY&,QU&0>W!RrJc<8lt>#Dk-<t!mP+pRtM>Ka&]In,kKq:CQ$m<%lPa.+UIM!N3=?32c=I;
%T\fD.<cZCE9+HMMX;sV78EXg/,s2$.XS652KaCltO&_KB[q(D%0$T4_+Z1^qc9'aOi9)qT)c6N+-CI[!.1&MdCcC6u5),E,d5g>-
%dFM4tLnj$sohQ&c*&J0;M&9!cd9nbq)SNDTIWXJED'&PO?O10$)6/HKEd2f#k@O"a^Yj.KPqH1&1b"K#aKiO;P?Xd>M`t>[\#5Xs
%R9*B?"NjW1'0Ae51gN:<^]#eTT9qtMS8(7K,MG`$(OZos<fi@]Seg2eQ1>VkAgn;J_,Wj6a'KD39**meN5Aq!9g__>8b`-%q949X
%NV^n<Zu1AgRVmMJG3^)MmHFBcM3Q>S*gY*Y6[\RBM)_IQ[\[9`bZk!d<29>_^YN6?=og=c&Xh)?h=0"@mT.o(=gg\o:i+*)"$#8.
%gCeJfJm0=e-^m"[121h[d8nk?%ZQ(7fDo+g^Op>QE$FcV9&&*4_>g"g/<fN^7g_rc'Rh'l&@)4S+KRo.Sn:sfr(Bp',rmuTH84Bk
%*FT8o'g5B9q\<-h@Q*=`]58Qk6nMH4]rmU/c'F/G/,P6-),ssHZ3NpJa+Es+V:=.LNdMX154Tae@j-Z_/=5ki.m3W8Y79H`CXAW*
%6k_^%n$9NhCUu:Ef&Jh.jO(;N/XI<XH%G+/PWV8AW0p<[;m.q0da<k49%sgDkh$o]V&CF&o,6'BLZ#Vjd$"BADJQ;h`5QkedXo(>
%i3"!,(AC+hf,F2ojGe3P*LsiAncKnL8#?.VZ->_%WG59YA&")f@hkJ\]MECV`;s.7K<UVfn["G(H'j%,C_\ZZ&*@G05fJg_9]mWZ
%?^[-N^]"qn^=oW?4Sq,4o/hdGU4u+OD)9oZ8+ZCsn*ZGC$9"Qo;8Q@Po=C_2/jO`Z[Q2JYG.-6#R[oWi'AqQS1ni^l*gF6_I=@k2
%'\F?Kji!0Xd`igIV_+(rZtsZ(ophQ,("l9%_i6Bqh2h1aM2fP/:2J^9dMQ&>85:5DrKdu[OGe7@*XFK%[OcG4OkmHTXmskq\0qp(
%e^nj2k;<N:bh\MSrR@B9;!ek3dYZUI`ZO=]/*&-A>L(-J-sW+u,`%Pe!<I-WZC_0*E,&4p&C6.GAk:b&EQ.b*"HMJ$8`Hl2@4<ph
%f:H$4F,r:I0/Zlh&t+A-K=[a"RFR26)*!sb^W>).K@;?!!p$_,NoEPVb_mp7)\k[qn^\!O:(#et,bF;V"E'X5L?'>S(`5tsf7VWS
%Y*XNh;7MQHai:KG03!u`.UKiQdWXRi)SlGuQGd^f0=eV+j\X*e]#i-q\q<>dLuiCFb;u#51R'5"#->CWPsu:$,inYk=/)A9)5GN+
%j.0P"<#$O+,[brBFL_-":\FX:7To!tfo\q1qV"^\d#I:n"a"D_BeclVOOQh37jV;CPH2h3g=(].eNN2]=SD#A@ip@G16uFRX/>)e
%`oPDGN%N,#ceT:d!OLDj/S<f^+`DYbPa,c5CA04q8MRNu?S0/ii\ki@6a5cdoU.s-X__trC=:m%-P3D=1\m<hMcYr+JK06_U1%OL
%`5etJ,Fb/@g<Xh@8pU:*p;R@rcl&>[\&SBqDYs7;?ViBM65o)m+')>#`fRhBqt'?i3RTiMb8^E>o?[3&m'j_)mFh#\WH@0+5$_$8
%fl2H:@dKnEl@gm2Sc4@fa_Nt4H.1EVc>bPu974f%pN^M/X$Ipi6a=%Ci$/`N%cAK6a`&*S`O6acq[_:b4l#.r2dYR1\%XMcgqWV\
%hmi\V-esW@<+2-DBj-gJ7S>lH?SRTS2(qD]@OAXm&0=`&*g+,#:$=:3E\>eb+gGR(22c=g!['3O>,?ts(3FFjT]gK@MuH4/%^SZ8
%>uuhj/Q%sT6tb<h?,=RIpW=1EmFl[6As@rAEp]A\-;ai'YQipYSW$u4i.qk9FXqI`j::PP+?=j6J\hYEPLd97JVn"3:@i0@U9KgN
%`ZTXCAIde(SAY4ZOEp+fZ<G!U[L%(E^(3/4Q4#BTl(H#EBc_(WLd=Mia7s,o%=R`Y1jEBR+XhHo)eMl=LR^[FN0hF!$BusG^AG]U
%I.ruodVD`!Q2?iB@Qp=f5QSFVNT_6jP#":N2g2a_bgr2^L8B`hfG+lfAJWHegq*5q^[1.H-&F=%n^C'em-sR]aQ/%A3C*M$0+%QR
%*kQ$N>B@Ou*I958e4%#@ImM8@="[o4'EWa[^^n0IE.$>^"Rb,n!L(.H?l!GH*aS5!cs8!If#Z@JLqH/"_i*R>Hd5P(Y#2=5FlQPX
%dsY9dHF<C'PQ:FcUEGbbX16g>LA`eaZD^/`15V[tN,qmuM#m^u3BG&g:Zd<^CIM>thJ*n)9o_MFiXJ2(4>n[-.7)O@"-kZ"i4mJA
%.L0sWm;1FmQ`e]&5"#DaO_P1>k`i;Yr;A`'am4%=OUbeEX_Qs_K+o8gs"l@7>oK@sB&=\o6$-iDJ7tP2!Mf<i4L<JJiFo44m;6qb
%c03jK1iR9X(k<kl/Ear4(U-[o!:Z.n<C;[7$`98:m),Y5ZsN=m8d0@Z(E2a/m)_8_/\BGrAC(aG0)cPoaDBGA6=[N]o579Xf?ULH
%+^:CqleFD>8_bZ]_qpAn@8+#E+cNN-8ub6A=[2mc64@*80+ARh;$#BD,WXqA*$V8lF/Qk,e5)&ZkVR]A!bi@LRcjm5@%`ShDYGu>
%-S[$69dBmL)q2<_I5!S;!LiD2WG@l'VRHBKb\Z?^Q>&'R>,P$'-V6B=dXiN<:3SXPnZMp,FO":q0Dr&1:gKT#[fs^jBnDUofHdf.
%NeuJ:MNrFXF`*PeFJ$R9_;5X%h"J5IfsBWLB[%Q4Aa>YBf:>L1#aiuafeQ%QP[?T--Bsb<rR`m7#?c=jMCm1_4?MCLEHmA%GrcRd
%Q$im`kb;QNS!$^*NfudXlP3Fm$#m3u3<C6HW-B85XWc&]+abm#X>UI;+'Cl%E)tL_^`>h5QQNljjn:RQ$-5-!7VH&?WEG9S`og^m
%(MOb8Kpl?fK.,XCJTP_t>3KX6J`f8Q\#j]P2:FXr#Y^@K0s]?_<PDS'-'#5Z?%Ec8Sn#`KT+MFWmkJt>)pe$D*mtkRCl0iSRAGuO
%')==Y;BO(3WDDn$7"Turm@YE0N'plq2b]GM<B_aQ291T/l0uZnCVL@H)Vt)>"2+%@7KA&sSW?Y.6r.kf\7[hu5d8_]-J[fn=&[UP
%lBp`,%C]s;$BO*]D-M7Ej1d8CY`R$]ru*I:ne:4-a^_fR*)t"&0!:5G3U%p<><QlKVW!sh_JKF]d.VopG/1+Q[,N9eP`iF]TPm[0
%%*>Nn,G$D[,9K^rF'L*j>KL:inMRj1EQd*;KG)1i*[$a^/GQhJ8X;C2n7MHJPYoYJXYA`jhu!tfm3]KY3CG=a,..RN7l+]=[6#;j
%ekp6j;INnk!T+\P*(gbPI3G_e&aLDA54Aa"eRuoIU\d]EeV"=O-tU>2,TbFb8#2+d[E0n@Xkr9D2MbE[#2q=Z.5iakeoc14T>+$p
%-&R*bd7>GF&/Y36?7j!1PMrh/[!pD@YGrBtlG]cnbBP'FS6c=N7Z\=,=',f&Bm+2pg(Bia(9*B!jCA`5ol(K>:)sQX"f+^MYhnbe
%\)5V6GrXgCbJsVKbhd@*$b^^]mdRSDA+;#XC:\NJ?+0*iS3SS0JZ@1kf9/,7(Z[r=)]Sm$fCHkr//P=BL05s9##oDD0qd2:)=4\o
%rM9Wm,"U!&nIFK#-839nQhu]nTV>_`_eE;4KoY$t<:TncmJO<gk[I7f$A*!8=:dfi,E%H/#1FTJ']Pb"f5!%l`g4KiSEJ)i=Kd,`
%EnZ*\]nk;d8uI(Fd<PkU]jO-Hb&]#IU6;j4cX,T#!78`6Zt"hl=%NMXeg12_&(qFE#'W,/f<nu"f[K$YM[HS2[HecX[>u"fNm=/7
%4lp3JB(hH'DWtTQQV"^@cFkO(,1Rn<asAA2K[U9KQ.B^o0<U7Y0P^f%WC%!SP+lD)!>^!YKVEN&USKaeH.%hLA!(H;+]"q?ZTC+A
%MhP7MHl=)AXbS=,IL`_r;3@kX+gBTnd<a?bXrWg3N.+LI@k=k"#uo]lQn/[R-`SeF>cJkU&Qm>llk!ToO76JKC!fkO7S+gb%3Z4N
%\X0)GWO*Y+fM"T[e526(Uj+k'jSn)#O+)<Elb;pBpn^:MY9/I0W=ZLoIB-uqhe):`>:V\%PsAXlG;"S)H5dUu*.>GlXI*(Bg?gRg
%#Rgh1]3g9l^8gRg2c7jmXYt&(iMFIC6Qn\pRX:/_8]&efm'[!YmX4jE>V%`MHdY70!I4As,,R"aH4otrBRZ]+4OnN[P/_N=M&WF7
%9:!eZ*G@Y6C&D8dRVM>NN8P)oB5QuN/e!PlZM:btnb1Ot+mul9%'L0+HH?XJ(lM5mo'K)KY?$5Aj<HIg#*Qm,"+,p0<u)BV;b=-(
%SRn;>jPCX6CO6GTg'WCu78]Nml@lZT>9*Imp/U2/Rs>lCeLq.iq')e-k8P.S3H)r!N8m'VrIQOldGDZB;b@CdpEXRcD.=&`\EM%e
%5,hQ7C_]?13O1V@.&q[O7Ahph;WMf;Ks[[E"-CMT>3+Z9Q3\2E;UZ%a8#AoSYIR?5$X<<be,0V.^N^DgcZ^!+L0c,QQQ_#FTE=f%
%%W1,-AX"FdZTq*J8\$@V,5_&8ci-drKpQ`&T3n_Z,g,Q3.$F(*;86$Q.biPe\JW@&TY0Vj/pUk<!C'&$;g_Q^)r&Jla+:8:TbDPQ
%o4fXlY1`eD0nf4I$m_6@#V)#;4kKO++*bG"Y3l-[n;D`3-Whh[.@2M_MsZZEYe-&"f8$C<Kt+8)@adP[L',_0_hma2F4CX(5&M)I
%jS"as9$(q#g-u!M*m;gao)8UA/RNA(*5^j)Qi]XF.KlF-%]9P!d+ahi)[5OdOUFi5m]`dei,i/2^PkCR:_saij!N9dSK^F%23#jO
%d]HNHX@^NO-TNH0EMph<<24q^&em`c/CW)4!rG!N1bmCjm_KF6e@tba&)LBXX=R9noA.&>QtY?2cJ_<*pB$q)Z0^mX2psR/)$UN-
%0qDX6K,#N:'RN*TZs&tHK"Rm0AY7n*EK4^0#e5--@iQ7L-t\tb3;!-!b:n#2Q@b%gh36=mJf$22J+nM\H"DZGB3'UTSsb%]c<gA%
%hoGW=R<AUV$C*a']PMNg![O:-MCB&d9gT/Alkfg`N^8M.kCS5t3\3*$Rk(*R?]nGg$$m&:d8gQ!*uXR0LFsddcHT2?,PuP<W=O3)
%Z>s,$QX>/%(CH^i9@hM@^8pB'+14c;?`J3<M<kH%Mp_(J@HuS0>n9q"._=0_En'd/ip[sh9Z],p@!%0WI4mH.:VRi9rp#JJ0?Snu
%l%G9\Q<0'mjP6^_iKnM$9_$lrH?2X^_3!*+!,!*L?VpEuVU^eh]AjX[mG<!B=*T)_MQ[1_c_kn)c<oFtIj34t8?Wo'aAH5&(Oh=<
%I0Sp=93fu]XKhBN?*5i+f,/;rJlE5'`g6^AjO=6aHg5I_Fl*-4!I6l[V3b*#I@lg9nBl8IpOF,;Mu1'r,\*;'ETlaV(6IYiE=n&n
%rVW]."+cqcGOo$d]ZTiVFh_".PXCr%DXX;([M4NMMQS[&>.$\K]EukUT5?.('^ceDkl;^?Nj)>4J,=fO^G_PDo3$.\'o_ts&&#pQ
%k?%-+?aN1l^6>I&7Cq&_&.3r&/?:6gBgS=bi=QOM<@>J,W@*ZMi,8(B"%,BcO</uDp3(Yi6!mJtk-7sW1T,Y_Q[Tn2V"E0S?:B'3
%]0gSTS<q=^U3llK+$J1X)<47PJ,3/A?MX)kB+*""kSeHhgeYYWXAm7XKPZ,3Jdoc=#7fiVn.g7l*,5#tB5s2uriaW!qdSE/H9eC_
%W6)2YV?WI=k:+#*:DlZDe%CVB**#r<4^IK[b%:'@WnUiniK^[Z$8+KlVHei[3U^UZE7_aLQrS:`3DF(TNZc7cIH5g3kRmM/Hijl"
%?s4\S4S0,ZNSNgcgfqD&q&*N76UT)dbSEu&0hHk.3&@*VVG[T6M89,saTQb("RlN+U:,t%@`CpO]$a]HMM>q*_TT/JR#?`6R*cu_
%o?NZrPK!nX+$U^oC2Lr!:>$-XonduqDS3r(O4-LOVT0q,Z1eklDq#E"pE;hq@3R<X0MceW;RKn+H_*,f&1em9[?/lb,FW,/Oo8``
%YpAT=eeTTu:VKFnZC,c#%:e7VU_@tJ:]uS5hr8e!WNi8cj$Q@"pp'SJm[9$#0b]Qg`l!F1U^<F:`ZM&n`_:Nmo`R,&NtebVUc6oe
%Z$?pAS$Kl;2qJE2Zdat/6MkcB((WjHU-s;o9hGTd<^OVKHA&pM/8<,B*NEe79%^JmO[O96%"9&8"rRL@?n5eQ!q[^Ks*_i3YdW<@
%#*E!k0]qiQg+^Kp>iKCdkd3"7?)%ZrBhl:pM->sDi2Eq.q^j:/?eup7HmucOMK;WgG-53-'2tPU$Dq\,.s$QUf2aL5GI"Qn:ErE4
%mcOagPN0o6%Z_\r/>NUjYi'-2V5hO95kI&iJNu6Fi[JfPC_AEZ2]*Y=0Hk*_T^gFBdFcCpMo]#hd!PIc_TNBc$f5='-WmVZ&#jb$
%a^Bf*7p_1(e53=k]#Y]K0&-pKFA,l5r!(\GVM1bu'&okk.WJl:g58P@)R[$8-WAi]1c]d$4,h/9ckqjGFRq2qD/8;7UfQ6eI*a*d
%g'"4XZ&qE3^$t^NVce%a\E=erD]$fYnp(Q6ES@9NKsRiFr>K+7X@L#,mVm\&1q8+73SaQ?K&Z8<,6KgdL/j`WGXM-`[_k.V=K$T?
%n4CL7/o`L`h6MMrGb6oZ!'A.N>%L,?&Nh:T1klWV&8/%f2g;*"YGln(7$$omWY]*5UIX<>AN-r'?L0FZK??J4SRGD,UFAMaf";r@
%NpNN!R,kQ)6mAa^l.5*6$,nk_,b4P^9&t(cdgdV)8C@[^1%l2Z4tn_9Goh"QAM_I<;/0LoNA4o;(qU"W5ZsbnOPiq_&u">h4cE>;
%fbc<h/`S<-[Sc[A\A?;IPBR?OWi^fb@:t>;30*iO0V=C'/!hQol7l%^ZGCC#F(&s-0YN3HC$IQ/`dGm6capQ$mZI+\i1Ek=%:3-R
%SQ=NSGl(5K;eSd:_]\#tF,JOUJ)#VTG%oKW\&'4gn\u!LKH[Uk@J'o\)&b.IkO8^HV.N,ALnt&*!d'GXT:3\Rd"/WP]ZrspijSZ?
%[C!lIWJAVF/k1HTndSS?:/YfY6rJ`D=krFk/>!IN0*9T#bcVWA["f<*h:?]l-b@<OV"SnJ"0m7'\g^ihWK0+4m\>tpTZ8,'FkJV/
%F"+4[Er1E4,K[.%oaIHbBDeU%?+NQnL4Ko1Fc/Bq(:`Tl5^"D-"@3=+Z,3D>,?n/XZK(,-R&_pL1]oe7'7^;gm!BenLQ5q<Akueb
%>0T=:^5Gu*ZIZlNFOcKDQIcF&/a"rL.!:8=m`04pb_L<b5Y=])O,fKnA(u[#9#`W0%'(3!q(dNVN87c3$S%_%i=;g<,Be,F?[K\#
%79:^DQ2EUnA-+1DZMN+7%`OuZGENL0f_7`m5K(W%s!SNI_8Uu=a*Bu.>Zq@.*Hgche7Ekg1n>HC$GIn3N9*7/N[%#8"ORWJQ@Z;0
%9R(!8QOUDPo=7YuWm7e#]o]La5GZ;FEt!Mc"p*phL%3B#74M0e-2jh_k#ri>b1:kZ7>Tn-c!-i$k2cr+;2EK<m^?T5l`tPIpqnl&
%O,Yrnq/D,&'BrsJ):c]_IG=GMpuE<!2mI\^M-e[H9;DI0YqA+[:%+kP;'3%9V/+,]C2_n3THD&hg#YbX5]^:n8eN,bk8nKE?rOKq
%)K@+NYi.WW/`#t@5Qj`%SQ6B_ER[A*dY;8Cdqb=jSouI\O&<bW*"qdda!#-ooCr.H;kq("LA3X>j!LX0Mrg%k+48dC&jP$e[pA#Q
%SQ*Fm<XIf*rtu($lK]T%=^*(4R7H)kV._NV,Di?h`n[:?#35-%!N+YIBggp+E<Wt.-V]H:bV\>FGJaJ6r&pCi*I:EW`XuIN#/9HA
%@8%jn&u`rg$/8^sW_N*bg=M2rd/d/%f8`_&PB/U"^Ki_YLe*lre99S9j-.P4QEQ9pCN5,LN'6/\"b1>e6\,adm*jo1D\J[#&"i%<
%VgRT3Oem?1p^+m),C_;%g#O`"gLY3`6"L,A[A&_[(4RbMq8R$@@W_4oZUI`f25j-[j^G+s)1./U1+TNejuEN:#UnPD./^Btj;a[s
%_0/bhWQUAqX_"ipd&1Hak-RoCfo]2C.5`/$$!30b'SnO<,@ol"$Hq2jpOt8tN;^,o\n+f:e3/Qf1d!T$Q+h0U']j\o%VLa&b(i-=
%jhdQ2HF@*=Fu<?5Z$g(So@!IO+6UY1I-o;Z'rl)C=^4jf9\g<.*=Jg5[YiSR.*<%ZoGr?)XNo?.HS^6YY*ToOT/rORQu8_="pqB7
%-3"h6P3S/@+N<sc#]V0,EnknR>MC#SWI`oRj<+EmN=`j>kE;t_M]60TV/%O"&+jbJ&V:8cBMs#q'Q>I;VSH#M9-!6+=H-8#+/&iQ
%FFkc/U5Dpi/9KULn'FIZWMHUo*1HV,;=o-!1J#"SB%t_&4_T<cD+?gSN3N?B5Gje:&\c=pS(SF[6(h:X.%-d&U(a\-AQ4O)I7._J
%.WGPe7<rYgkjFJig_5;[P/PqC"4N[fBL-7:3m6s'kIVZtDJ/5Lp)0;.,JC#I?O@AIJU><e>:c1/cJUZM/(tO""45%b.U2===&k,'
%.TR/`[c1s5&=Ra.9KhP=_?-#_TVo@:ZZ(Z+^t'$!K;A[#cuO+cUMYl_2j:C'\5!`Lr&+GC#2G(7T08?rKdf"_i[cNF^m-<C@_!e!
%)74IghJMF1U`r)FA'n@i.8SSQ:A=4sG^VE=ORu+i$(K<)jF$/jm:NiC25aDrI`7DR]/-O"_/*6aAQ1f8*5CZn:fNgi^Pf&6iFEDU
%MfDusl@ZrKU!G.!'q,'Uo3Z(5JOEuR+c?H(18G*58/Za9FC%PEU$ght6%0;UHq'b_7AR*rN0?u9/\ttM,6TfH4+\Bb_0Mc$*u4TG
%!($QS;c#RM>'nBprPicW@AHk[;M6u`m8K$1L.h:f;9B8)R6nX/T_jV>Oo$B&&s[&OZ%tp4?'^$)0Vem`kI^u8$d!]iL`mbk<?4nk
%`>P>eTTc'8[l&:YKH\?SJ>.X[_miGjGj[!<r$]b`&V-\kDL27kkaS9A@,C_9/HL&Ke[5uoR$`s6&C1EO,1ekU<8?_(ET.&2$eH.@
%#f%!9Z69q3@iaSbB?li6\tJi]'@ik!.0I\m?E%UJf&<KAjG68a'hFW3a#Qn1D;r_aFlmc3jOtIMR_WhfGHN_0gYBY&/"_l*&3oR0
%?qu4Bkqa$YS]sl_Et#AqJr!W#]p%#2aA`tSY.EBDOE`lp&!)8T_6jsuoAI^"0c01KI:cAZgeeT?FI*@04DeCgcT/X-Xcbbe;A`.e
%MNK2)&Z>A(_L^Zr.dbYa+.G5hEOgaAA*8M44F/+VC`=M_'Wk*UTBfK[o^3)NNVQ,+lFd/miqN#1PmrQc7fDbgQ#l#J=d8E'[k9PK
%)=C3GTlNpo2&49oMrAL;#\fI]eQjuiWmZs^@jJjdI%;9r'S;"3`b!F]&Kl703I$d"=d;)_r'BjWe4kuM,k?AW%761>A9(US;oj],
%-O/kk[B15?DRp6GMSnKgpQV`7r.hU^jTSR?>BRQql60*C?P2ThkA'j(\BdFa9ob*OW5NR>[i1hn^eJn\ll1TWWSH5r&Tmr.J_%Ne
%8ufojqD=Q_6_K'WEL-,A1fOgq3rO4EGWh6QP+"s@B*\UpB=p8eY^)9e8leg;-ja:7!b`0hT@'1g+incL*-I<I8@dNJo3s-,f;3ko
%I??@oIL+`3*#Q!/bmo$:-$"4n4c`\<P](T_1lph;1fbFA4fK2EIOJ6=#4^7mI2'?<&UVgL(S$]pQth,dHH,&jJhnGDP38pCR"Q6l
%U@'/*/Cg!0&?cU9M:gLd5*],H[[B-<Z9ocN)siDTi/%7Eo:@0L?eaNW4Hnt%kB53YjRjU!Of\3")pP4^%P!R#>6<*=qlciKNg59o
%LO)m6G3Koa5hpVT:LL-TGm`+=Lu*N&?ed6Bir,4S(&.s,_@NJ6O;^iB!E)>+i=n'_0ieb;/1m=)d?I(fr^T1SXWb0#rW[K@'!rQp
%k(;rXk(R$cs!E>q0;!6Dn6_B6G$[,-@%G;!@pLPuBB\EiHm!uAD\B?Lei;^$8aG%KDlum\Do4\[f'9`opE5oYlq>1'nsYga7P7J\
%%bWoK*8df6(Ab1/65\jcVrHr;%WoVV.q4$$F(:DmgcdB'r/q=`VY6r:](>4hemRf-qXs$h\/Nq+Z`k]e,Q"h,L-9d=#&Xk5X0)Q5
%?`C<cMqMQOpDrSe+qN-OjmrE9<m.qBS!ibDg,Cl(\ZR#D+Q#+)NdN_<B<k]2?oU[u*#2WGhlDpWEQ<hdL?s3=VtNr4;UsRbk9R72
%D<L`$^[``AAX(C4iqM8!f'-l_T;0^CNjldanQMe^XrOXe;\BBIF-1OV.[#,WW#m&&(E[7]jeE4KWRi3l"+/t',qi[Km+c\55li,C
%TX1IWd7@/E,qD<p,$^^cR-<+#Ni?_cj_Q@rHqhgrVDnZ>/MEiWYYo\#4XWgMMH"nZWBJ9;FH_rjPG'+\]=ZluT$RK\rWZUBF`[Tk
%%0[/.d#2&aRrJ0dcI$*);<jW7-C79<KM`m3U[-2KC+Yl$fWp6[Fg\95#:C@3MY-P%)VB6H9uH'1:C/Cbe8\sQb>;MLIm!lQcM.dW
%H0^rIZ?f1EqeLM^Ln7*+L0(HHjL5_FbLJBO`u:@6aNTiTVZ:Gn$T#O#..I-ih&(&om4R\K!?^gY(-eI7lTmRE,L*'?fmj:ZfgM[!
%:U3=jQ?BtI(BX-3DLjW@esu5X3eolo/()6X]Wlmn&b4C-/,42Z'KnUIqkH`4.:76t:&/JO5_cTrY7>9u92"j/d!aEG,o:^8C;6KI
%MjeE:E,Q_*L!dq0);U6(ZLT.t22M"FWn'(5!9`k(kpdm:b3G(Unk*9aW3e'LLp`M=lU%<JmUBI^3Pq)*].nWijqqO!WKcdH]et2J
%M]`dW-$[hK[V^_1#9IdV+hC,WqPG*c@jrKL/!+K3n_2(2a3I&<^^3Qg>J,WJcko9d)PJ+&p=`Uom^hEBNk1YO)^f+Nk16)IS;+AM
%A[X!'fm].=%]d(&75ABl`l,).OW6XB@^9qV():^D!=9_u+K[f$%36jJRI)\(>eHkYDjp2&8u%-uOf?W?57f"bna#%,Z$)55R'QJ8
%b?NhJn^fD#6R3Bio!q8A@t,SU82#+TkA^Bn>GucPVQ;6`4_/u\%[6e0f)p\!HZ7aab5]N/&l%]0^hgE&N`n'@(c8A=b=O").2(5j
%TmP,iX@!,(`C;1;_t`P^Rj\-m(3UmimX9kE<=TV2l9HlsD3/QkWZL@l%J+[+FJ6M+YK,kX\@m&cq[58A3"p%tE@,5eipUe-?Z1G9
%j%E72:9Rp.:9ScXZ(HZ]iPq(1WhfI=A)YTj`*aa1-Kr+4=Pg17-7:?Q(35uL?oBF98d2ZUk4\F7j;*=8-')?kVRV6WlP6p-g7"i6
%>pMF<N`l_!6F30FAd,P=g592KA[YkI>,F96khElgF:?c=#G@;&TF@qI^jF7fchF/.51lIZ]o$M/%KMeKKtm6)S#WN5OI\rWRf>R2
%S'/d=finRQM(a4G;,k]QXQr[&cZ0pDSSSeJE;aEgKNUf>@],\i&Y)Oo:aqK=M?:^r78me#g;=p/fZ?XbbC'IH%e[ZdNt()Tj7)KJ
%<a^^5?0qM\oTAA>XJJi9S_WJY+!S"Na$G]f\tf4o^Ru0^4_\tO,:*dd[Lu+T87%f`d`#2If]&NeNB9<Z#ps1V-0Zbq&=Rg1a_OHC
%]HMG,[?"9F.9M;EK2SncRmk@RHO8Q0WLDfBT_mg$BDBu^LBR$X(O'5IH^eWnAT2!G9@?s'9'+mVnf]l^lpL^C5IB;*nE`?VQ&5+1
%WO#j\:^s".RUrR_TFuL/2)OAChY?W%#"9)HS."?>])WhkC[K`8Epn@eSKU@L^njr&s-jP'0uskA_?<24g8*<YR!Erb3?8`%XS-S%
%fdGH1R_%6kr:m>,h8ThpkJ)HEF"n`J0RVOo8e(%6aN5>6->%q%".UkIF9N_0MIfEXQg%5(:05;7K94tlL35le"IotLq/[N]>GC)f
%C(VTNmQ(ACX.5;j*'HT&IVj6qchSQHS&?mY.$+F7#Z>b^rq%T8a&U4%elutIfI-8qfg[\=8R,!j$R[tMgaR!J-SR)0Os2SY#)ME4
%)A6YRC0O5,>X,mMo60f,#Y1kBE-B?)#EX'N0D?4'4GX(r-(kI*X>5XE&s#EfWK;h/M:0e7aAmWs;6':I>3B<c3up*EKWW-IT1ES)
%^Y:%(EYCIbRbYAG+g)3s%7%_A!gNZudA`tpJ%b'_3`Kq@HCGc*ja#&TNV=C3K\r4`Isk%L;pr.@@6h4HYjnCZZE),)35_sgR!3FC
%.;V/*X_@-s4e4K=']1p.*f%#0kUm,]3af9Qm\Nm$Esb""Ur?BS\niE:5h6QB?J9\ekaVHkZ8(TclUEas?k&#]YIUhOF/IoX5@<71
%C1L(!Za$(eVM;2RBR],'5<RPjmk!JE+2ftl\QG7n1n)ppgI4*h7dPJhIAURi,^+mrkFQ2(Lao3E_DHm`<J`(F$&d,BGWInX:mZ1d
%&TUT&5%WE=J$VorVeP[l01_:tF%2kD3"N?e@_4`m$^)$Fb$qj0'Nu-;2Fdu95Js2i37b"F3pHHgCTF-c:p6Bde[j5e=Do!-)Nkh'
%_Iid/7i3=R*YrL_EffLE8>[>'i3$p[BHfrt\)hF^jeNV?EnK[Vg'b9F5YeqK6V),Gg,bjE5j)A,g8JoUBcl(.DX<V&!sNmY;q9a*
%F#Q#7r-XikGG9UHNCn^^at!rMKQ4%E1AtA@m.tL+=j;29:C$.LQcB?Sd,8Iha#,L=3OA0>RL^-"fOU]2j'+&qRcW!t.dIWp/F>on
%:J7b)NL=dc#(B]Cp8bdo74<Yp(Z6Jc&1.j"mteh%/45r=lkgng6/`_W)t#t>1tD!hX<hI._Qf4SANu:`qo[lL+nU\iK`dYSZ4+/;
%/NU;^YM_FUMY\f3?jt`jT2",u>im7468m8pRL'g9\"^.n;3(s``7f0"iW'h%P(llFA=P-D(P)7e;KYiR/-q\[0g+mGDuTliKmY_"
%_(<0[Z?]?HeJQ/BO9.=_.Q"4&VBd(Ve>[$id^"c\qq/3ccpr&GS+=m>Ar$dI#NI`VmeP1Xe6ah9R-I?+BjPr_i$BtYo<OMs-6e%<
%/%Xtj%k.sNO(`,4>4P_m\Q5[SCmiiK`gOKW>U`g0N#$F>AFRge6eP%=HQ:q\$n@&tENB.[lp4akDNu;9;:G0Q[Aq>b\eN]V6GpTY
%?7E1OF/HQ3g,4\@;A<]\G?MJ-%o&c:FIej(P<C:aFb+N#gei]KPTFHH#ebc%9%jWHGPuZ\<F/Z%Ep:hZ_OH82C%&g7MtaD#>mS".
%K;FtHf3uY+<Csp5X-a#4UIP#TejGZ'[b0Pt!<e9mimjY(4sE)/`V$Ja(Uo0;aP:&W0Gtot#sm?R@mJB(D_q-6pN3+Bi:[J0)*q+9
%,1Yb.&1O"f7?VRAH+7ntVUc&RKMms';4BE32UYmlY%eu=.b$K5Y`2hpaLn<aDU%6dEFO?Y)@OX?ffed7eY4$W,2-ZR1,9+p(b3lM
%CnF"E1,$b2%SImTl0>h<:2a]H9%m:f-"%#`\d2EPo%%:6W!GP;pd.&VLI'F5&:8psl))u52+m7Bak_#fQ1k98nt7iAo%2Ui@qRtI
%/D9.d"djB77Ec=DbGN_6m.-V#-)@(7ZC!\6PAB+nS!':$_0lDtQbm$Sb_GZ@-CsLI[rBZ3>^&9I?%Zg1SI^d!JFjF=O=hIK:ijZE
%jlS.l$jdE=UDd7^#3H7f(;m:HcZI=7:i+bg4?G#8R5QYC6bN'u2&ucTZR))B1)T6+]_H$ZqcAgjLQF8Qd62,e>=;*$+j`.=ZKK5o
%_cG<tMesINgEnBtMA^#Y@Fo@Os*Q@nR*#LQ&ad*>GY%chZqmZ1\f9ua5trsE?"YYtoe//V8r:oUAJB82"BuDC&7F'E)sTgonOld^
%<!2h?-hN95arD];cu"6X+p@lc&;f\u/!CfSJ7UUE>(@8\To_aab]6UraHqf[-8R:q6:6la(FX*SM::(+c"_69NU]t9q+uZkp_GeP
%gSatB(CC/TUu*@4SO>NQfNXiQrM6FZSqFU"b<57!KPqS\?S;;79A*)$hOafRT]i2Xq[BpgeHLcA\HAI%XiZIY2/Z,c2hK:dQ@bg?
%;Y4qFHd`k@'%Br\+@hh=,_[_P;cV`PEgJ1)^^/Q*G`D<;f<3aJ_0p$8iiXBg%KY5S1HJ=3iZA3[j<4,6;_`FD_AQnV0(S)d)]ZIN
%&BcXTP8qeX3cHX)WZ'8FR(*EV[$+i\H??.qdk$rV[ul9`^pB3giIOfl.47l8mn^:bC&)PMe(%W?U<5R<kLTD+.aH>ki7<L*Hl!>0
%kYAH;6([qoN3-/OEFPQ+YRf`?H!`KRP)1qr:_b&DNp^R4_Ga\'gJo"Q41[iq^(IF23la#Bp1n^r&c>g5L+_"DrMXN'gLDbrXMXiS
%gP0J!)o'`3=YfhOMrhR,(ZK,J>d@0fE^a'^VHN-I(b>-FAK4Rs`Y6LA6q2tWCkfht,PQ;As+21Z;GKUD):%I!6I>Ud)(M&`Y/[p.
%OC]Ih4/kdmY":C0;c.<>D)<SuU]n4QDlOB'22u4N1d87@9,Z>4]kppS*4MW$OhqhpHM#"XS>uD8je4A@e;U-*!GejLQ]_Uf*I]Qk
%lPX/Pe4jN*b8r(9`NaJl4^7-EJPL;`6R)[@*X8e"WF089C0dP[0:DXeZHh\E8p0a,B53"\VhacGR=Yf\Z=FjueLIF8i7K>ODtlG`
%Z7Eg$'0qL*m\r8u>SUaP8F[N9J7mGY.(,HH<KQG/lQ*62$]Z,"lh:*.!m^8_P=rc[LpnG[e3I^";=lp-X=n>s&Lfe`kD$@;h>YF\
%q-@f,T<DHt`&$Rs/>F#]Xj!/qgc$T,`:W9fM^[qom"S:Xr7pA#Ll@QPPWOl"^VgeK-/`VPJ81+P!0ZL)fLcNMUc\3.(gNILo/>]h
%g;B<q=>6s^m_H$+kRfFua09#"Rs'N$#teC\X3rWLPeE'XPII27:6=W4aj%+O-k^M6(I.h+W-`74fW>ef3Dd*b!0)2Vls,[#_^8Pm
%d%G.7HFk02Hl/\Ma;=%tEtD=WRBsL?&0[_k!H>T/*-7hA1Dpdf$es[:@``.Ym`Zb/;6/a5WC-lsQC)@=XD`K12[J8$Rbt`U=q'L=
%^GT;MG\G!^P#_"Ui5drt.S<OQ!4955XllFC(@b1BZY<m&%o$Q^iU$dH&0N!N,J;d_WiWZ+4hKDR*^90W@t]/t5-jDr8`e7VS!3:K
%:3?/YORq'$Y1cd7Fa[Oul<kTL+]SlfScPOpi2ItS>Zl\;G7+=R*,>#(n50t]i]oJ,O.Lgc-?(/dV-`eI<J-UR,TKlBR_Z*Hil+5O
%HAJ!bg2`OEC[FsWbd4hiUn`@.CLf@))^L.]:k/ICEjsB0muO[7eI8=L6O*)5L,Pa0LSJ+DhZfOeR'V]2WI;q=J'^iGo^8udCuUn!
%1T+6EGE6W%$lj`glX>/3jB9Cuen/u,4ktQOS;=[-5BLbSHD\_p5Q91RpKQJkVcS%856"0`&OF)0U'Tb<Djo6X3e:#a>]9!gQI!SH
%?2u79NgTh+e#V`TctaE=\Y\V9.U5ASr5ifE9,j%M;VL`^PC$:/\+.,fQr:go%)Oh@2r0q+51co^j6(JH;-B\0jL"(Xc4hIpb;lf&
%r_8qG.a&/1#To=q90C$kBieBL[8%.OcT:bDl`&:n;#SOhIVks3q]ii"k5aKg8W)XgH16_j(gm@3S'RgR7$/IJUD8=<\[([sa>5q5
%$f`*EiDA)T+.l84;4U7Wb/Q^]Y\6sG-E$!2BB/1AJKfFt9S4eY\FZeSNab$qT#HWuQF'If2'742CCu%:&iS_G!YqB1Z+Jqc<TH5s
%L%`RPf4O^"9hrtO@=GU8%hrAG?BY=.*5%*bZS]s/*%T'5QQ"j<Jt8-Vk+(L*A:GQP=&<J?1$"t*i1KbIo4LEsV4r9bUnec^F*^D-
%2,CV#6I-U)S-Kd/T2TVoD#d!pI$JN2)P!s>?QT1O!du[`rRql/GchiS!eR?gej&;$*'d_L_HRHu+cE8tkRQ*NhVqcD-SDuN=nVjJ
%2J(sZB=C8U)hP",D`m2Q]1H<iL+eKdjfu9fBEEbPHg_W!hj+3N:Y(ePYDsNgnE!9+`&He8W^]q+CU)`Z?)EO22A'^!mUs<cUe*<'
%h$Ut*7:5,ul\,F<BqZ^hn$X*poM)bF!#i`1J"FV%^>qiY1q[1>'73(ae,gnl:Mpea/iA2=d&DZV@A/>]=f0X\./T'K3K(4"P-pCh
%?dhHA;-YVh3bFA)aq)E*[,X'0B3Lf^Ms;7DFn2+,T7hQXWgu(e`0G?DIWTb`JJsSKmgggifB/3$)hjIUkLfeXK<"?n)^"h7%%A@s
%:[do<6Z,k=YLA%%3P0J(j1l&5P9(==_8Ub#4W]Sn/Qf;X7d@l]-]V'7+J]f*@[crpJhpA.p#2b]@oROZ<p$*SesCT_jppqE2uY46
%L_Q>>on"eu8;+92Wr\e[C33F,,SmleT+8N:l[FWA[9ik#;Z-1R,A+,+aFRs#V,/3@XN[m<p(uS*r@dDb]TYtT@Jt--1o#N%f$,qF
%E@#7Vkj"\jk80Vd7NCF"+`iSe[`"_WNb?nCZ%s1n#K'(^ZmJ;iJl97Yk0ZGURtY/t;H<eB_?/WM0*ka],3c7`!%uma8EU8S,Q1I9
%mf6jD%cSM!rg%"5J3'\j)IU]d9BeV<<H<F9-[TLX'C!X'!BbkfO&a-tp=X*RqV0p,p@#`mmb<6jdl1?8!peTZJ,JFns3oU"r69/0
%q]EQOrqG;uo>CV"p%r[eUHH.c])16ss8L>gfD#10Du]h6Du]b&fAHP)s7,dNJ,&m;5KDY&GCTMiIe35V:TjYODnl+[msk@U^]22q
%q_p:nCqb2bSg)dQJ+0oHq9NFJnE9*f#;E5Sb5Kmu]_U^e5C`:BIs\]k^\d%5T3_'E+5d%ks7u&Sp)T&&EV&nArmu(<s6"lXHssR2
%iICXbgHYVb*i1[\V^Qb\3$3UjYP&TSp;R$ilQ<iis/-D*k:lpCn0smJndDm3Q69Eb76R^c]pI8kFCV.43/?!qjrLfQ=b-NDd\*1E
%s*6"HU$6YYj0Qa*MFm"K"1:K>$P:-Yq!uMtE%4TWZ71((nPT?f'AQEGgLVs5bq#\N,_8"6XU4fRC24t@^f89@0gIZr81`c-+3g[1
%=K%E'c-QYZ+?r7[]$di2T5%3i4QFAl$M$PaJH>EZh@8.P3Ej?r"1"ot/CK`GaisTsL_l+t0p]2Kbr]X+^`6-1Tc2"leZ%q!HdlJi
%/IJRsI#D(^FJ/mjU5<#\[6Ra+pD9mi?<X1n&O^0&Ln'8jEKO,a%E&8Zh?#.jGQ[B6/3q*^]Q&Qb)G>t'7EW\AQi;koJ0c*Qj]!LF
%4k1n^<hWa7Oe"H>lV*dBBkGO4]*]JuoC;HWL9E1Vou7Y>>"&sog[JEBdI0e%3jie!\CU*2q21p%0#Z<YDf2GihPKHlM7j+q_\<U;
%0RFEmH$48MeZ++R2m5j1/oo;qN9Oi]i.Y<Cg9L2DW5%V!rAXaD1o'='hnOnE_.!7\r/0Q@U^fbSNJ1TYUIlg$*pg"DG1'WY%mFYj
%39*TO*ma@aJ>_$ng1G+?Y/i*YKe=G;d1Hs3ST+.i4e=I*=>a`C,Z#0p8pURQ<)4pU[jpj=+"`uQiPn67,/AT"kJg'M=P$_L+RFsW
%cdh@4!P$p>(t'0;.C^]fbM0PNEZOaO*TooL2\8UEHj.r"QX@6oj3uIS3u?ANQi\93d&JQh(Uj#W&$=*pUX5CR(B45g?ZfKMb8'F3
%^\K";/h!<X%ejVsF_F^9#+1%S"-a.T]SL^#@kXiF8FqqDP9l]_6327unL.[a_#jo+-^4?IA8A%Ob4N6b4luLi]55IWZu%qs\X]sI
%!$a]Q3m'8Bmii,WOTSRLCK?Xu'l0Y((/R2_SJrkm/>n[b>DkTF5pbb9f`V`"2R@ZQaV%WQZ"1<Uj?(9sCV'FhJHUks">6^*D_1(I
%*u\07FqR28$f!HU7%iJIR?CQ^B*0.fT/!?^k3/.KBfrZ^I3"_55::U3IH:J*`]'V4,4lrX%R\49)]7@c/V2!ci7-"u7V\_o='9)e
%DL6+<(T[D\^_UB(;i>LoEO#0Kht["Q1[OR"DdSBE5PajDRs"rIo8^c6:&pIV8sl9;[2:<YOV6h;>;l>njpKE?o:caC%[=aT<s27L
%0\WeNT)-aSU10_;glPZ2=imDF@Ob$o3f2TJ>O[EI]\8;I,&J(jZ9DrS,%4iJ;j--43s-70X)#-Vp9;CSInga)1()]N84ec>dt3A9
%dA06\CNY)J0,eR8+8+gb):/U1k0#*60`s41W70A,<S0'0eH4W!:rEiCT[.JJd"Rat'p%i3E!7Z!7@-#b8*Z@[:QR2L1'Q'VCp)c-
%">f;HqV82cqWLSIJqEFBc[KRf#-E5FZF(G-ndE.VqdnFZ&hbhO62,L9Zg&8G[&uUOH1rOiRVIj/LP/]H>cMtKD%g1p2A\4]'0,ft
%LRqtoae$T>@nIO*QAcV+hHNeTb!SNtp:?'[A.K)B1M,m!,Xao4,:ki+1LTf?95@Zq`[lko'ej1;l79G&OO]rb_6DU-9K"[bdu:56
%,JX&<kL2%VU>CK[b:k!:mp@`Ls6!2X\q@?-^R&CbFSN:$4J9Z!+RM5-ZA/\"_M`rFR0J=CCPCKc\ZLGZA&o-qDdr%Se.uJ!(UHSt
%2<Nk3?n,W-qW<I]PoPaA7#G;Ae?l2@hg54P*M4:Xjbuuf#U!HBFDAA(]8]sFY=D+b+:7`Co17=a,oKZ+eLb@]%"]mH>_M0>P>%gJ
%=28j3a1DWl8amotS0uE=1W^%)FSeA=HY!cC(YAW9,rBh@B:^9s-#VH0a=Iau.>d8#4bKtJS,#jb[2^ImbUMr!f7Obm[M9Vq88#b)
%kgtkg1Me^-6n!_`OHkI#)[m$aaY7`J1MBanJj#RX6rR#q91ON)OoLD%+D/5?lFZGHAS8ga8=SIOWY1tG9&*=_aDQX.jD03<%u;H5
%R>m]DR<B\<h585&pO&?PJQl+l2[/cukZB>"VHMM_'ikh-8t4nCN>rj`imMPih62nHqctMHFAt`]I[7W\b^>+1,#'jU#[?FNemFp5
%mAN??`E,K(cRYa,a9EgmRakl+.5i?K@/(.&pX;$90F:RR%U^;-UH?:[c$gc0kCU"R8Wd1igP\`L8B=m[%j>k;#+htU5mGg3!+`Su
%Z(7$LHouZ"a#UlL(MI\-oR`GdU'rP']m%A%2A5Bg7s>S^X1<om8t-/N8[KH)M3>a?UXI_!9VsUcO<pQ-QOVS42C%`TDuKGY)XpMZ
%rHteU?YU6FAMb:_WQkK`UpQ9S]RV8`eaO=FSmYc!iWKp\M*:?l<tL]E"Qg,J_#$<kXMQ$i/fj@:3_M7S,h4<7D;?V=:6)^UM*rLh
%^qrq/_N.`-=lOM0]uSXY,+7Wu\a1!)M*_:O?dmsJ+YiiLX`se5SH#l)Gl]YU.)q=6\]/MPmc2sE-;qU5#@P;d0hdh23nrN,r*fgD
%^td\W3l,Lu?=RpF?-;e]]SBU*OXB_^X-CtdQB\THR.d"kBccMHnnpV`lOM+=WEFgSMXDOkN,u1BbjGa(rk&[R:qC@,-FQWBa1Q6!
%Q&mrOZf_hZ/J?FX19.aY$Y*7mbk]hNIq"DPYeU$U6nEmQn*QBZ@uDPQ4>(79:kD&\#dV8?_C[Kg-iqa.T,k"27Q6"eTZaGC5YCAa
%>T;-)Y/17A@/!!LbLmU&Ajm\,W(_dkW>o(7da`B7H]sTY^8o[-F9CEFVb[nVrXr[@mA48m?e,UbhAc2X_a)V_G?gP-<Y",A[u\dC
%>R+J!02?IY%3"%f!p&sC+^cnR7cbl?+3?rMr8HX)G=aP#i8qE!`r-2(IBMq'-[pF>7G_@CmcSFkd6Nh49J$3"WXCl=gh(u1,$-Z<
%WB3'-']tCIIfI?Hee"WAqb76A=!IHb4=h;DP!fgjpi,cR)dVlXj"9.OIebP_N^o_<Yf-\sH1_!gGkG5%UPl<_CZ"g9&H%HcLu5r7
%bDP6aO*Sf2>msLnWu.E32t+3`f@Ru\-u%X2rH'X(i@a^NJ#QWHPI'BZ\#bktcCpKf$C[o/HQg>%chZrAHQB7;Ss,^=YS)Oe*`#"=
%4^K2akU\3'Qc]FA(W1Sb9)-eNYDrDsfX7mKQY1dEJTlD,D<o;^Wse%f'0F`Ras:&,WpY>Qq<MJ"(_)J<N8_[nf5J%bqW'5P+3Yrk
%1/Zuj*o.PFi[U!JY)DhlQ[-+9qSb(r]ep/sBBT,6GHUOV02O3JC?MUm=$H]0H+\2uUriFs^\H*N`AL'_PRkUTjWBuQ(lZ!$-SPLU
%Q,d4/[%OeS&Li2/`4dKF`lb(GB=WaH-g:*C],86PW0k!5(B\MK`fONpH>VD4i0AMk6`$VcL?lHPdLkf%bAo=`j^"JPiSpmSHarIF
%;>?Kao$@TDs*H:]j=X9+qpb1p$ZEf1j7P@Ri=GeNGRh4dZ]ZF68"1'133L0n^&^(\&$Ni:1QJc,%3QL4A,-M>X!AuO06Wo.-socH
%h_')>T[2l*]M]D_Lj\P>UM"b?CY/8t\Y)I%/`PGbebA#?[dhV+BAW?kZ4$Te*o-sl>;I5t_p:J$?9R&NrUM/a\%THFX`8E:k0\[Q
%_^i9fqri12rTTD]qkI"L`ic%C)r#;h0n)0X5il^CI!euu&>]MQr<QhZ3hkC.F@7c@\K7QicTO$I4PD%OIZ6jAh(O.ke8>\nlI4kj
%*8U=d"1ml\#)V%Kl.!aC3erdZEti%9d84-+[SP@?5'hs#Hoe"VrcCO]2n:!+bKi=,?9R$fqgO[ngKn4^f!ourIqH9g^*qTR*2eju
%qS85K(a0Kk<hI<1/hrSqg5u6_&]k,SMm?o`d(1RUs8IkgLj$gGptFS4XJ<m/aLl90!r-M/$-1W05254]?;.T`dA:7%>\P([VUNeR
%@6,EaA[7E+)",8_TQEh-rckC=8M1(RRc5P0<@h>HZ#RM['BIl]?hrre?.kuaYc'ikkT8qT*gL.0-K<8$K:;DLSPfl2&ZRUX>pZ<U
%;D3j`LMOEKcb@X$7%3?K3;rDW"1Aq@_HahIS=)9e1of6KDMf0c;2'2sP+Vpo*Xm+o2DJ;Fm?p!M&_@NX#aIdOSH2c-fsj_Qc>Q1n
%VfbS.Oa_kis&dj1jDA"&[g(g9VDeC)#toQ^FC74uF?\R%o$1P&<M607)&'*J(`XDeNB+XadPg&U<.V9I)HD\^r#*ML48")XAX>J$
%Lo5D[bng\**Es5]!15d+5gf-L$V[p^gjJ6#D$T/KgVF]68Z`;bhIDX5l3.8)G)L(UXp%;pg?R73"jm>95UJ@;PdHE-Rp]m`o<p#P
%r#i#X`)1:K-Nt,UOtLrZK.DK9F(#bWJN"k?W30.a*NIY'W^nQ43C:qgr4o\a&*8Jj_&oq-;<&l&LWD,OUL^aL\()M')s:`nE&`hE
%Z]#:bO`R5Ph&Ne_(.7L]_499;9D&+Q1dGV5X_VV)5mpSL\^$"rDdc=AaYWQieGA`Jj?2$Gh58&^HCbbLmB>"u$b3t"\HRDj^Kr]L
%VS4PD4AUi`H#GARH\CZB:7&l)<1]nlH1&\;]nMWkP5<ge`L5f[h0QEZ*R::flLM-cl4PN=!>tg-%Hb_qK;H.BPl=.dWR6']e:U4:
%(NH-i?U9#FJJ8./"r%<l#H9eI4j?<)cm70fCf4saQ2':50j/%NkLfof5IQTXpB[]*rTR=A&%$>/9M@mj,'Bsnf*K8qOTq!G@Cjj3
%_Kd\h47hbp]f/MA%LV(UPbUIG9%O?G"VW,*CNZ-joW(7/pK]>4mcfH"M\Rfj;\Cu4P3V[=h_tP=1Is5.^j/4l\?p6^V[=Q")KSj+
%/4>hh(RiE$kq\Y2?HCic]>HZ>N=e[OW"@?HYMrf?-+0KWGhTb)Il-N&#?m4=eLAJ$U7FsRf"bS-U>5P+T;XQ`[5!-Em`u]YGl2\Z
%b@f`!mD#<4p2$3o[>AF^-C#mg:+OZ+QDTiC`HmtT<,BqadV!f[;AJL6E3"!HUn\dtW:b.$>TBpEH1W5!DrQK1,?D:Pfa=17i+p-Z
%7UM<<ZYJZb+%Xu`IQqZUZq\*:)=W?HW,ASO2W+ts"#U-cmJs6*'GmoaOjlh&D2G-o^rSX*&#Ach+hbH5]]'gabgin8Rg,OGBX,=>
%NVJZS.r#,^3NOIFjn-o`1`k%5R+]u#"h:mTCjQ/m:p._Ia)]J4X^SZ*j^IQdKM"E+iBnO+?)08!bHNScUWbLdaM!H!020j*>Y"s-
%J!;G1.$!q+QT%:$QN8\Z.S+F8%-d$M^r8Vj+mHJ)3,%HYmDsi\,>W8J$i4oa#/mQG!a8!re6-9eIkL"CX[2+$hX\ed/9M%Y)Uo7+
%:n<`0XK_JXn+#@HnZ,*]_o#!XZ<_t[C\+,I=1>h9WJ;S1Ss'UP&O\5nccMK0)fSXrDU>\8aK&tR_&dgSO>S*0$`+"#2p%C]Wo+pb
%DmYu28_C^9G?BEE=ZlYid`r02Q56NMW\tddkO>4Kd$T1UGP/<1L&PuY$IXdB?N8Z<kI/FCa,Ar;oE*O_F^NbTIs:n4J,B!-+91d+
%hnT-dVf.$o^HW0Wo+,4.iLBl9LTeJkm[G<totU@@T>(<pS%Gl=s.6@^Rt!X%e(l*ppuYA%ro4OHh#6K0rqJ^_n4/g0pm]%o]DqYU
%s6G1-^ArhC#KH~>
%AI9_PrivateDataEnd
